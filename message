Updating from b653669fc5a6cc5d55d57d437e18f45fe98a3bd2 to 895c85ca8feaad5bc4637e548d42fc38267c21d8

Alyssa Rosenzweig (1):
      nir/trivialize_registers: Handle obscure load hazard

Caio Oliveira (33):
      compiler/types: Flip wrapping of "type contains?" predicate functions
      compiler/types: Flip wrapping of array related functions
      compiler/types: Flip wrapping of cmat related functions
      compiler/types: Flip wrapping of CL related functions
      compiler/types: Flip wrapping of size related functions
      compiler/types: Flip wrapping of struct related functions
      compiler/types: Flip wrapping of interface related functions
      compiler/types: Flip wrapping of layout related functions
      compiler/types: Flip wrapping of record_compare
      compiler/types: Flip wrapping of get_instance()
      compiler/types: Flip wrapping of texture/sampler/image get instance functions
      compiler/types: Flip wrapping of various get instance functions
      compiler/types: Flip wrapping of get row/column type helpers
      compiler/types: Flip wrapping of remaining non-trivial type getters
      compiler/types: Flip wrapping of remaining small data getters
      compiler/types: Flip wrapping of numeric type conversion functions
      compiler/types: Move remaining code from nir_types to glsl_types
      rusticl: Add bindings for glsl_vector_type()
      compiler/types: Add more glsl_contains_*() functions and use them in C++
      compiler/types: Add glsl_get_mul_type() and use it in C++
      compiler/types: Add glsl_type_compare_no_precision() and use it in C++
      compiler/types: Add glsl_type_uniform_locations() and use it in C++
      compiler/types: Add glsl_get_std430_array_stride() and use it in C++
      compiler/types: Add glsl_get_explicit_*() functions and use them in C++
      compiler/types: Implement glsl_type::field_type() in terms of existing functions
      compiler/types: Add glsl_simple_explicit_type() and simplify glsl_simple_type()
      compiler/types: Add remaining type extraction functions and use them in C++
      compiler/types: Use C instead of C++ constants for builtin types
      compiler/types: Remove usages of C++ members in glsl_types.cpp
      compiler/types: Annotate extern "C" only once in glsl_types.cpp
      compiler/types: Rename glsl_types.cpp to glsl_types.c
      compiler/types: Remove warnings about potential fallthrough
      compiler/types: Move comments and reorganize declarations

Christian Gmeiner (2):
      ci: Bump PyYAML to 6.0.1
      etnaviv: Don't leak disk_cache

David Rosca (4):
      frontends/va: Parse H264 SPS for max_num_reorder_frames
      util/vl: Fix vl_rbsp parser with bitstreams without emulation bytes
      frontends/va: Fix parsing packed headers without emulation bytes
      radeonsi/vcn: Add encode support for H264 B-frames

Emma Anholt (1):
      ci_run_n_monitor: Always resolve --rev arguments for looking up pipelines.

Eric Engestrom (3):
      VERSION: bump to 24.0
      docs: reset new_features.txt
      docs: update calendar for 23.3.0-rc1

Iago Toral Quiroga (1):
      v3dv: fix confusing nomenclature about DRM nodes

Karol Herbst (1):
      docs/features: remove empty lines confusing mesamatrix

Lionel Landwerlin (3):
      anv: fixup 32bit build of internal shaders
      anv: fix uninitialized use of compute initialization batch
      intel/fs: fix dynamic interpolation mode selection

Louis-Francis Ratté-Boulianne (15):
      panfrost: Fix error in comment
      panfrost: Add methods to determine slice and body alignment
      panfrost: Add method to get size of AFBC subblocks
      panfrost: Precalculate stride and nr of blocks for AFBC layouts
      panfrost: Add panfrost_batch_write_bo
      panfrost: Make panfrost_resource_create_with_modifier public
      panfrost: Split out internal of `panfrost_launch_grid`
      panfrost: Add infrastructure for internal AFBC compute shaders
      panfrost: Add method to get size of AFBC superblocks valid data
      panfrost: Add support for AFBC packing
      panfrost: Legalize resource when attaching to a batch
      panfrost: Don't force constant modifier after converting
      panfrost: Add debug flag to force packing of AFBC textures on upload
      panfrost: Add some debug utility methods for resources
      panfrost: Add env variable for max AFBC packing ratio

Martin Roukala (né Peres) (1):
      zink/ci: drop the concurrency of the zink-radv-vangogh-valve job

Mike Blumenkrantz (6):
      zink: use weston for anv ci
      zink: blow up broken xservers more reliably
      zink: delete some dead modifier handling
      ci: skip implicit modifier piglits for zink
      zink: don't block large vram allocations
      vulkan/wsi: unify all the image usage flag caps

Neha Bhende (1):
      ntt: lower indirect tesslevels in ntt

Rhys Perry (3):
      nir/serialize: fix signed integer overflow
      nir/lower_shader_calls: skip zero-sized qsort
      util: skip zero-sized SHA1Update

Samuel Pitoiset (6):
      radv: remove outdated RADV_DEBUG=vmfaults support
      amd: update amdgpu_drm.h
      amd: add has_gpuvm_fault_query
      radv/amdgpu: add support quering the last GPUVM fault
      radv: query and report the last GPUVM fault with RADV_DEBUG=hang
      radv: report the last GPUVM fault when a device lost is detected

Seppo Yli-Olli (1):
      zink: Fix SyntaxWarning in zink_extensions script

Tapani Pälli (2):
      intel/dev: expand existing fix for all gfx12 with small EU count
      egl: fix leaking drmDevicePtr in _eglFindDevice

