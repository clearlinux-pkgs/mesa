Updating from mesa-24.2.2 to 0489df9a51e3c27180db817268d135b363078cb5

Adam Jackson (5):
      meson: Introduce the legacy-x11 option
      glx: Move DRI2 client support behind legacy-x11
      egl/x11: Move DRI2 client support behind legacy-x11
      gallium/video: Move DRI2 support behind legacy-x11
      rusticl: Add clCreateSubDevices stub

Aditya Swarup (2):
      iris: Disable fast clear when surface height is 16k
      anv: Disable fast clear when surface height is 16k

Agate, Jesse (2):
      amd/vpelib: Refactor structs for API change
      amd/vpelib: Refactor frontend and backend config callback

Alan Liu (2):
      amd/vpelib: Amend log for tone map support check
      amd/vpelib: Remove unused structs

Alejandro PiÃ±eiro (3):
      v3dv/device: set value for maxInlineUniformTotalSize
      v3dv: update conformanceVersion to 1.3.8.3
      v3dv: expose Vulkan 1.3

Aleksi Sapon (6):
      gallivm: Fix LLVMPipe codegen issues discovered on Apple Silicon
      util: const hash_table for some readonly operations
      llvmpipe: much faster sample function cache using RCU pointers
      llvmpipe: half_to_float use LLVM fpext when fp16 is available
      llvmpipe: improvements to JIT assembly dump
      llvmpipe: FlameGraph profiling support

Alessandro Astone (1):
      egl/gbm: Walk device list to initialize DRM platform

Ali Homafar (1):
      zink: Optimize descriptor buffers struct filling

Alvin Wong (1):
      hasvk: Conditionally expose VK_KHR_present_wait

Alyssa Rosenzweig (136):
      vk/meta: add buffer view tracking
      vk/meta: add VK_IMAGE_VIEW_CREATE_INTERNAL_MESA flag
      asahi: drop dead code
      asahi: drop unused patch index buffer lowering
      asahi: refactor prolog lowering
      asahi: drop pointless conversion
      asahi: drop #includes
      libagx: fix prefix sum kernel
      asahi: make GS inputs explicit
      asahi: add TES->compute lowering
      asahi: split up agx_nir_lower_vs_before_gs
      libagx: hoist code out of loop
      asahi: offset buffer images in software
      ail: constify more arguments
      ail: add ail_get_level_size_B helper
      libagx: add statistic increment kernel
      libagx: mask counters to 32-bit
      libagx: rework tess i/o
      hk: add Vulkan driver for Apple GPUs
      agx: fix ballot extend packing
      asahi: don't count helper invs in pipeline stats query
      nir/opt_uniform_atomics: add fs atomics predicated? flag
      nir/divergence_analysis: handle AGX stuff
      agx: add some SRs
      agx: use opt_uniform_atomics
      nir/opt_peephole_select: allow speculatable load constant
      nir: add derivative intrinsics
      nir/opt_peephole_select: allow derivatives
      nir/gather_info: handle derivative intrinsics
      nir/lower_wpos_ytransform: handle intrinsic ddx
      nir/opt_constant_folding: handle derivative intrinsics
      nir/divergence_analysis: handle derivative intrinsics
      nir/instr_set: allow derivative intrinsics
      nir/schedule: handle derivative intrinsics
      treewide: use new-style derivative builders
      vtn: use new derivative builders
      radv: use glsl function name for dFdxfine
      amd: switch to derivative intrinsics
      agx: convert to ddx intrinsics
      agx: fix clang-format
      r600: remove 64-bit ddx handling
      r600: switch to derivative intrinsics
      dxil: switch to derivative intrinsics
      broadcom: switch to derivative intrinsics
      vc4: switch to derivative intrinsics
      brw: switch to derivative intrinsics
      elk: switch to derivative intrinsics
      ir3: switch to derivative intrinsics
      nir: add nir_shader_alu_pass
      treewide: use nir_shader_alu_pass
      nir/lower_alu: use alu_pass
      nir/scale_fdiv: use alu_pass
      nir/opt_idiv_const: use alu_pass
      nir/lower_packing: use alu_pass
      nir/opt_reassociate_bfi: use alu_pass
      asahi: fix warning
      agx: factor out agx_device_key
      agx: exploit soft fault info
      hk,asahi: pass through soft fault to VBO lower
      asahi: optimize out vbo clamp with soft fault
      hk: optimize bounded loads with soft fault
      asahi: remove agx_bo::dev
      asahi: drop segment list parsing
      asahi: drop mprotect in decoding
      asahi: drop agx_bo::type
      asahi: stop fixing up USC addresses
      asahi: drop iThing logic
      asahi: always pass align parameter for BOs
      asahi: introduce agx_va data structure
      hk: fix BDA alignment
      asahi,hk: generalize bo_bind hook
      hk: fix restart index overemit
      nir,agx: add "active threads in subgroup" intrinsic
      libagx: add drawIndirectCount clone&patch kernel
      hk: implement drawIndirectCount
      hk: fix vkd3d-proton descriptor-performance
      agx: optimize popcount(ballot(true))
      agx: handle min_lod sources
      hk: advertise shaderResourceMinLod
      hk: advertise more eds features
      agx: tweak jmp_exec_none heuristic
      agx: fuse not into if
      agx: let if-fusing opts interact
      hk: denouveau
      hk: advertise KHR_sampler_ycbcr_conversion
      agx: fix block_image_store indirect ts
      nir: model AGX explicit coordinate intrinsics
      nir: add image_block_size_per_thread_agx info
      agx: plumb imageblock stride
      agx: allow st_tile in compute shaders
      agx: handle explicit coordinate tib instructions
      agx: add a comment about an unknown bit
      asahi: pack imageblock words for compute
      asahi: switch to block based compute blitter
      agx: lower exact frcp
      elk: fix compute shader derivatives
      ntt: switch to derivative intrinsics
      r300: switch to derivative intrinsics
      pan/bi: switch to derivative intrinsics
      pan/mdg: convert to derivative intrinsics
      nak: switch to derivative intrinsics
      vtn: infer SpvCapabilityLinkage
      asahi/clc: drop caps list
      nir/divergence_analysis: handle load_agx
      nir,agx: make block image store an image() intrinsic
      agx: support bindless block image store
      agx: fix wait_pix scheduling with eMRT
      ail: swallow up formats
      ail: consider format for compressability
      ail: clarify metadata buffer calculation
      ail: add metadata width/height in tile helpers
      ail: add enums/queries for AGX compression modes
      asahi/clc: add bindless image intrinsics
      libagx: add in-place decompression kernel
      asahi,ail: pull texture view logic into ail
      asahi,hk: deduplicate txf sampler settings
      asahi: skip unmapped bo in fault dbg
      asahi: optimize aligned blits
      asahi: allow rgb9e5 rendering internally
      asahi: factor out agx_usc_shared_non_fragment
      asahi: allow compute blitter to handle rgb9e5 blits
      asahi: fix fbfetch with eMRT
      asahi: add agx_fill_decompress_push helper
      asahi: handle cross-process eMRT
      asahi: add missing upcast for eMRT MSAA
      hk: be stricter about formats in copies
      hk: rework meta for compression
      hk: prep for block based blitter
      hk: remove texel buffers from meta
      hk: fix bg key with eMRT
      hk: handle compressed eMRT
      hk: lock device-wide scratch access
      hk: drop irrelevant comments
      hk: shrink cmd bo
      hk: disable submission merging
      hk: wire up compression

Antonio Ospite (1):
      android: simplify building libgallium_dri on Android

Asahi Lina (7):
      asahi: Add 1queue debug option
      asahi: Print queue ID with batch debug
      asahi: Add more batch debug
      asahi: Fix non-async flush
      asahi: Relax cross-context flush
      asahi: Update to UAPI 10011
      asahi: Do not sync against our own queue

Assadian, Navid (5):
      amd/vpelib: Change Max DS support to 4:1
      amd/vpelib: Add API function to get taps
      amd/vpelib: Fix CS translation for geometric downscaling
      amd/vpelib: Fix whitepoint for geometric downscaling
      amd/vpelib: Add 420 semi-planar 12bit handling

Benjamin Cheng (1):
      radv/video: add event support for VCN4

Benjamin Lee (1):
      nvk: implement vkCmdDispatchIndirect on pre-turing

Boris Brezillon (42):
      panvk: Adjust RGB component order for fixed-function blending
      util/hexdump: Squeeze repeated patterns instead of zero-ed chunks
      panvk: Make sure we emit blend descriptors even if no FS shader is provided
      pan/genxml: Fix Resource descriptor alignment
      pan/decode: Select the right registers when dumping local storage descriptors
      pan/decode: Interpret LOAD_MULTIPLE opcode when decoding a command stream
      pan/cs: Allow lazy root chunk allocation
      pan/cs: Provide cs_root_chunk_{gpu_addr,size}() and cs_is_empty() helpers
      pan/shader: Fix FS varyings.input_count initialization on v9+
      pan/bi: Support native layer_id store/load on Valhall
      pan/tex: Allow format reinterpretation on v9+
      vk/sync: Use the proper type in vk_filter_{src,dst}_access_flags2()
      nir/format_convert: Promote input to 32-bit before packing integers
      vk/format: Add missing R10G10B10A2_SINT entry in the pipe -> vk table
      vk/image: Add a vk_image_buffer_range() helper
      vk/image: Fix the view extent of uncompressed views of compressed images
      vk/meta: Let meta users pass the color attachment write mask explicitly
      panvk: Don't spam the error output if the device is not for us
      panvk: Rename the error labels in create_device()
      panvk: Add missing vk_device_finish() calls
      pan/texture: Allow uncompressed view of compressed image
      panvk: Rework the NULL test in panvk_buffer_{gpu_ptr,range}()
      panvk: Constify the shader pointers in the graphics state
      panvk: Add helpers to save/restore the compute/graphics state for meta operations
      panvk: Rework the modifier selection
      panvk: Switch to vk_meta
      panvk: Lower load_multisampled_pan
      panvk: Add support for render-pass resolve operations
      panvk: Fix depth-stencil AFBC support
      panvk: Allow compressed formats
      panvk: Allow ZS formats on 1D/3D images
      panvk: Lower var copies before lowering IOs
      panvk/ci: Enable clearing tests
      panvk: Prepare the blend logic for Valhall
      panvk: Collect allocated push sets at the command level
      panvk: Prepare panvk_cmd_pool for CSF
      panvk: Make panvk_queue_finish() a per-arch function
      panvk: Allow more descriptor sets on Valhall
      panvk: Move panvk_debug_adjust_bo_flags() to panvk_device.h
      panvk: Conditionally register an host address when tracking user memory
      panvk: Prepare the cmd_desc_state logic for Valhall
      panvk: Prepare cmd_meta for Valhall

Boyuan Zhang (2):
      frontends/va: get cu_qp_delta from vaapi
      radeonsi/vcn/enc:enable hevc cu_qp_delta for vcn2+

Brendan (1):
      amd/vpelib: Create virtual stream concept

Caio Oliveira (41):
      intel/brw: Simplify @file annotations
      intel/brw: Move remaining compile stages to their own files
      intel/brw: Move and reduce scope of run_*() functions
      intel/brw: Reduce scope of some VS specific functions
      intel/brw: Reduce scope of some FS specific functions
      intel/brw: Reduce scope of some GS specific functions
      intel/brw: Reduce scope of some TCS specific functions
      intel/brw: Reduce scope of some TES specific functions
      intel/brw: Reduce scope of some MESH specific functions
      intel/brw: Move printing functions to its own file
      intel/brw: Move out of fs_visitor and rename print instructions
      intel/brw: Remove workgroup_size() helper from fs_visitor
      intel/brw: Move regalloc and scheduling functions out of fs_visitor
      intel/brw: Move calculate_cfg out of fs_visitor
      intel/brw: Move VARYING_PULL_CONSTANT_LOAD from fs_visitor to fs_builder
      intel/brw: Move interp_reg and per_primitive_reg out of fs_visitor
      intel: Let compiler set indirect_ubos_use_sampler
      intel/brw: Don't retype load_subgroup_invocation result to signed
      intel/brw: Use CSE for LOAD_SUBGROUP_INVOCATION
      meson: Update Lua dependency version to 5.3
      intel/brw: Also return the size of the assembled shader
      intel: Add executor tool
      intel/executor: Use PRIx64 to fix building in 32-bit
      intel/brw: Use %td format for pointer difference
      meson: Only use fallback for Lua if building freedreno tools
      intel/brw: Avoid modifying the shader in assign_curb_setup if not needed
      intel/brw: Remove unused variable
      intel/brw: Use a helper for common VEC pattern
      intel/brw: Remove more uses of variable length arrays
      intel/brw: Move encoding of Gfx11 3-src inside the inst helpers
      intel/brw: Explicitly map brw_reg_file into hardware values
      intel/brw: Make BAD_FILE the zero value for brw_reg_file
      intel/brw: Remove unused ARF values and helpers
      intel/brw: Remove long register file names
      intel/brw: Pack brw_reg struct
      intel/brw: Simplify fs_inst annotation
      intel/brw: Remove special treatment for 2-src in emit() helper
      intel/brw: Use linear walk when shader requires DERIVATIVE_GROUP_LINEAR
      intel/executor: Fix SWSB for sync.nop
      compiler: Allow derivative_group to be used for all stages in shader_info
      vk/runtime: Allow "require full subgroups" for Mesh/Task

Casey Bowman (1):
      vulkan/screenshot-layer: Add Vulkan screenshot layer

Chang, Tomson (1):
      amd/vpelib: Add and fix collaborate sync data

Christian Gmeiner (24):
      etnaviv: isa: left shift is 3 bit long
      dri: fix driver names
      etnaviv: Rework uniform handling for UBO addresses
      meson: Add missing inc's to idep_nir_headers
      nir_lower_mem_access_bit_sizes: Support load_kernel_input
      ci: austriancoder farm maintenance
      nak: Move bitset to compiler crate
      nak: Move cfg to compiler crate
      etnaviv: Move halti determination to drm
      etnaviv: Switch etna_compiler_create(..) to etna_core_info
      etnaviv: Extend shader structs with etna_core_info
      etnaviv: Drop halti from etna_specs
      etnaviv: isa: Add conv instruction
      etnaviv: Drop has_sin_cos_sqrt and has_sign_floor_ceil
      etnaviv: Switch to shader_core_count from etna_core_info
      etnaviv: Switch to vertex_cache_size from etna_core_info
      etnaviv: Switch to vertex_output_buffer_size from etna_core_info
      etnaviv: npu: Switch to use etna_core_info
      etnaviv: npu: Drop not used spec values
      etnaviv: Switch to num_constants from etna_core_info
      etnaviv: Switch to max_registers from etna_core_info
      etnaviv: Switch to stream_count from etna_core_info
      etnaviv: Switch to etna_core_has_feature(..) for npot_tex_any_wrap
      etnaviv: Switch to etna_core_has_feature(..) for has_halti2_instructions

Collabora's Gfx CI Team (7):
      Uprev Piglit to 4a62c26721a47552a96416a134b789a813dd51a6
      Uprev Piglit to 0453436872b6e4d502c2e87817addb95e0d77e3b
      Uprev Piglit to f11abb664bfcad09586f32f411b90331e23be2e5
      Uprev Piglit to 1d8fab9b49cc487ebcc949119eeb166fb3fa7591
      Uprev Piglit to 6533b66878c8cb9361c554b7ff940518ab12c816
      Uprev Piglit to a3826de3c26a279599d15b018a9a3e75ca46f4f8
      Uprev Piglit to 93b4bd2e0aaab1c22ae3e1a23f9e057a8f7451b2

Connor Abbott (17):
      egl/x11: pass render fd to screen create for zink
      freedreno/ci: Combine and document failures due to test bug
      ci: Move two failing loader-related tests to all-skips.txt
      ci: Uprev VK-CTS to 1.3.9.0
      tu: Fix off-by-one in UBO CP_LOAD_STATE size
      ir3, tu: Use a UBO for VS primitive params on a750+
      Revert "tu/a750: Disable HW binning when there is GS"
      ir3: Fix nir_op_vec8/vec16
      freedreno/computerator: Fix enabling wave128
      freedreno/a7xx: Document compute dispatch tiling registers
      freedreno, tu, ir3: Enable tiled workgroup item dispatch on a7xx
      ir3: Move reconvergence backedge handling
      tu: Fix passthrough D24S8 attachments
      tu: Treat partially-bound depth/stencil attachments as passthrough
      tu: Add a750 flush workaround and re-enable UBWC for storage images
      freedreno: Rename CP_SET_CTXSWITCH_IB to CP_SET_AMBLE
      ir3: Increase compute const size on a7xx

Constantine Shablia (1):
      vk/meta: Add copy/fill/update helpers

Craig Stout (2):
      util: fix fossilize_db compile error
      util: fix 32bit compiler error in fossilize_db

Daniel Almeida (3):
      nouveau/headers: Run rustfmt on generated files
      nouveau/headers: Add a Rust struct for each method
      nouveau/headers: Add an nv_push crate in Rust

Daniel SchÃ¼rmann (16):
      aco/reindex_ssa: free memory of previous live variable sets
      aco: implement aco::validate_live_vars()
      aco/scheduler: enable live variables validation when ACO_DEBUG=validate-livevars is set
      aco: don't attempt to spill dead phis
      aco/cssa: fix kill flags during lowering to CSSA
      aco: change signature of get_live_changes() and get_temp_registers()
      aco/cssa: update RegisterDemand and validate live variable information
      aco/cssa: short-cut some trivial case
      aco: call nir_copy_prop() and nir_opt_dce() before instruction selection
      nir: add nir_block *nir_src_get_block(src) helper
      nir/opt_if: optimize phis between similar IFs
      nir/opt_if: merge IFs which have phis between them
      aco/ra: add add_rename() helper
      aco/ra: avoid rename map lookups in most cases
      aco/ra: use auto for std container iterators
      aco/ra: use arena allocator for hash maps

Daniel Stone (22):
      build: Check for PyYAML in Meson build
      dri: Allow INVALID for modifier-less drivers
      gbm/dri: Remove erroneous assert
      ci: Create new 'performance' stage
      ci/amd: Move manual/nightly jobs to postmerge stage
      ci/intel: Move manual/nightly jobs to postmerge stage
      ci/broadcom: Move manual/nightly jobs to postmerge stage
      ci/zink: Move manual/nightly jobs to postmerge stage
      ci/llvmpipe: Move manual/nightly jobs to postmerge stage
      ci/nouveau: Move manual/nightly jobs to postmerge stage
      ci/etnaviv: Move manual/nightly jobs to postmerge stage
      ci/panfrost: Move manual/nightly jobs to postmerge stage
      ci/run_n_monitor: Add --include-stage argument
      ci/run_n_monitor: Add --exclude-stage filtering
      ci/run_n_monitor: Remove --force-manual
      ci/run_n_monitor: Add --dry-run argument
      ci: Make per-build dependencies optional
      doc/llvmpipe: Update URL to fix linkcheck
      ci/fdno: Add some flaky tests for a618
      ci/dozen: Add a couple more skips
      ci/windows: Don't upload shader cache to artifacts
      ci/{lvp,venus}: Skip massive-alloc tests

Danylo Piliaiev (11):
      tu/a750: Allow mutable images to have UBWC with all compatible formats
      tu: Enable UBWC for D24S8 with USAGE_SAMPLED and formatless border color
      freedreno: Add enum for fd_lrzfc_layout::dir_track values
      tu/u_trace: Add support for u_trace inidirect params
      tu/u_trace: dispatch indirect dims and LRZ status as indirect params
      freedreno: Clarify RB_BLIT_INFO::TYPE field
      tu/a7xx: Use generic clear for LOAD_OP_CLEAR
      tu/a7xx: Use generic clear for CmdClearAttachments
      tu/a7xx: Use generic clear for image clears
      tu/a7xx: Use BLIT_EVENT_STORE_AND_CLEAR when appropriate
      tu: Fix ZPASS_DONE having stale value with generic clear+early frag test

Dave Airlie (14):
      draw/orcjit: supply stub function for tcs coro
      llvmpipe/cs/orcjit: add stub function name for coro
      gallivm/sample: fix sampling indirect from vertex shaders
      nvc0: fix null ptr deref on fermi due to debug changes.
      anv/video: add mode costs for h264 encoding
      vulkan/video: handle KHR_video_maintenance1 lack of profile list.
      radv/video: handle inline queries for vulkan video encode.
      radv/video: add KHR_video_maintenance1 support
      radv/video: fix reporting video format props for encode.
      radv: move video decode enable test into a flag
      radv: turn video decode/encode on for VCN4 with latest fw
      llvmpipe: handle stride properly on lvp udmabuf imports
      llvmpipe: make sure to duplicate the fd handle before giving out
      vulkan/video: fix vui encoding

David Heidelberg (25):
      freedreno: Enable Adreno 306A
      freedreno: support lua pkgconfig variants
      freedreno: drop hack for old dEQP
      freedreno: Introduce emit_blit_fini
      freedreno: introduce color format parameter to emit_blit_buffer_dst
      freedreno: Implement fast clear_buffer for Adreno 6xx and 7xx
      freedreno: drop dEQP hacks
      intel/genxml: fix length of HCP_FQM_STATE for gen20 and 125
      llvmpipe: Silence "possibly uninitialized value" warning for ssbo_limit (cont)
      meson/addrlib: allow unintialized callbacks
      ci/alpine: use llvm variables
      ci/alpine: build test with LLVM 18
      ci/alpine: use packaged spirv-llvm-translator-dev
      ci/alpine: enable ORCJIT
      ci/alpine: libclc on Alpine offering necessary targets spirv-mesa3d-;spirv64-mesa3d-
      freedreno: Implement get_compute_state_info for Adreno 6xx/7xx
      freedreno: update night expectations
      etnaviv: rename enums_h appropriately
      etnaviv: build dependency for the etnaviv tests
      freedreno: Convert to SPDX-License-Identifier instead of pasting whole license
      freedreno: use unicode Â© instead of DOS-like (C) copyright sign
      bin/gen_release_notes: adjust checksums section
      ci/freedreno: add Adreno 306/307 occasional timeout
      ci/iris: implement nightly CL testing using piglit on ADL
      panfrost: drop leftover definition after pan_nir_lower_64bit_intrin removal

David Rosca (48):
      radeonsi/vcn: Only enable filler data for CBR
      radeonsi/vcn: Bump enc FW interface version for VCN3 and VCN4
      radeonsi/vcn: Add support for QVBR rate control mode
      radeonsi/vcn: Fix MB/CTB calculation for slice encoding
      dri: Use --whole-archive when linking libdri
      radeonsi/vcn: Allow dynamic change of QVBR quality level
      radeonsi/vcn: Add decode DPB buffers as CS dependency
      gallium: Add header_flags to pipe_h2645_enc_picture_desc
      frontends/va: Don't check header type for packed header buffers
      frontends/va: Keep track if VPS/SPS/PPS/AUD was sent
      frontends/omx: Request SPS PPS for IDR pictures
      radeonsi/vcn: Only insert headers when requested for H264/5
      frontends/va: Fix use after free with EFC
      radeonsi: Don't allow DCC for encode in is_video_target_buffer_supported
      vulkan/format: Add VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16
      radv/video: Add support for 12-bit AV1 decode
      gallium: Change pipe_h265_enc_rate_control to array
      frontends/va: Assert maximum number of temporal layers
      frontends/va: Get per temporal layer params for HEVC
      frontends/va: Parse packed header slice for HEVC TemporalId
      frontends/va: Fix leaks with multiple coded buffer segments
      util/rbsp: Fill bits again if reading more than 16 leading zeros
      frontends/va: Implement DPB management for H264/5 encode
      frontends/va: Only use parameters for first slice in H264/5 encode
      frontends/va: Parse H264 slice packed header
      frontends/va: Parse HEVC slice packed header
      frontends/omx: Adjust to encoding changes
      radeonsi: Add GPU copy path to si_video_resize_buffer
      radeonsi/vcn: Switch to app DPB management for H264 and HEVC encode
      radeonsi/vcn: Deduplicate header encoding functions
      radeonsi/vcn: Fix radeon_enc_code_ue with values over 2^16
      radeonsi/vcn: Use pipe header params in HEVC header encoder
      radeonsi/vcn: Use pipe header params in H264 header encoder
      radeonsi: Enable transform_skip HEVC feature support
      radeonsi: Implement buf_ofst_info in si_video_resize_buffer GPU copy path
      radeonsi/vcn: Support H264 constrained intra prediction
      d3d12: Remove get_feedback_fence implementation
      frontends/va: Implement sync buffer/surface timeout for encode feedback
      pipe: Add int return value to video end_frame
      frontends/va: Check for errors from end_frame in vlVaEndPicture
      radeonsi/vcn: Implement get_feedback_fence
      pipe: Use correct struct for h264/h265 dpb entry
      frontends/va: Allocate surface buffers on demand
      frontends/va: Allow drivers to allocate and use encode DPB surface buffers
      egl/wayland: Fix flush after blit in swap buffers multi-GPU case
      frontends/va: Fix locking in vlVaDeriveImage
      frontends/va: Fix locking in vlVaQueryVideoProcPipelineCaps
      vulkan/wsi: Fix stack-use-after-scope in x11_surface_create_swapchain

Deborah Brouwer (3):
      ci/lava: Detect a6xx gpu recovery failures
      ci: add firmware files to rootfs
      ci/intel: add i915/MTL firmware to rootfs

Denis (1):
      freedreno: Enable A505

Dylan Baker (8):
      compilers/clc: Add missing break statements.
      mesa: fix memory leak when using shader cache
      util/glsl2spirv: fixup the generated depfile when copying sources
      util/glsl2spirv: only copy the input file if we're going to change it
      tgsi_to_nir: free disk cache value if the size is wrong
      crocus: properly free resources on BO allocation failure
      crocus: check for depth+stencil before creating resource
      mesa/program: remove memcpy where src == dst

Echo J (3):
      d3d10umd: Use pipe_resource_usage enum in translate_resource_usage()
      util: Fix the integer addition in os_time_get_absolute_timeout()
      compiler/rust: Force native build for the compiler_proc library

Eric Engestrom (142):
      VERSION: bump to 24.3
      docs: reset new_features.txt
      loader: gc loader_get_extensions_name() and __DRI_DRIVER_{GET_,}EXTENSIONS defines
      radeonsi/ci: skip timing out test
      freedreno/ci: double job timeout for a306
      freedreno/ci: document extra variants of failing tests on a618 and a630
      anv+zink/ci: mark some tests as fixed
      anv+zink/ci: document two tests, one failing and one crashing
      anv+zink/ci: mark a couple of tests as flaky
      venus/ci: skip timing out test
      nak: fix meson typo
      venus: initialize bitset in CreateDescriptorPool()
      v3d/ci: mark spec@amd_performance_monitor@vc4 tests as flaky
      meson: xcb & xcb-randr are needed by the loader whenever x11 is built
      docs: add stub header for u_format_gen.h
      v3d,v3dv: reuse dep_v3d_hw from simulator/meson.build
      v3d,v3dv: figure out whether we're using the simulator only once
      v3d,v3dv: simplify USE_V3D_SIMULATOR/using_v3d_simulator logic
      vc4,v3d,v3dv: avoid compiling in unused `sim_file` field in the {vc4,v3d}_screen/v3dv_physical_device struct
      ci/baremetal: fix logic for retrying boot when it failed
      v3d/ci: mark spec@amd_performance_monitor@api as flaky on rpi4
      v3d/ci: mark glx@glx-visuals-depth as flaky on rpi4, just like the -stencil variant
      meson: don't select the deprecated `swrast` option ourselves
      meson: improve wording of "incompatible llvm options" error
      ci: remove llvmpipe in the job that disables llvm
      rpi4/ci: mark fs variant of arb_texture_buffer_object as flaky too
      docs/meson: add missing newline at the begining of code-block
      bin/ci: update python-gitlab to 4.x
      ci/prepare-artifacts: use find's -exec instead of iterating over its output with xargs
      ci/prepare-artifacts: check if we're about to overwrite ci config/expectations files
      llvmpipe/ci: bump timeout for nightly job to 1h
      ci: drop dead VKD3D_CONFIG
      ci/vkd3d: rename vkd3d runner script to vkd3d-runner.sh to match the other ones
      ci/vkd3d: store vkd3d "errors" in the results file instead of spamming the job log
      ci/vkd3d: use GPU_VERSION to identify the list of failures, unifying with deqp-runner.sh
      ci/vkd3d: move test expectations file to the results folder
      ci/vkd3d: move expectation file creation logic out of the test results handling
      ci/vkd3d: be more specific for what to grep
      ci/vkd3d: rename vkd3d expected failures list to be more explicit
      ci/vkd3d: add support for *-skips.txt list files
      ci/vkd3d: add support for *-flakes.txt list files
      pick-ui: move NominationType values around so that None is 0
      ci/poe-powered: rename --test-timeout to --test-timeout-minutes to be more explicit
      ci/bare-metal: rename fastboot & cros-servo TEST_PHASE_TIMEOUT to TEST_PHASE_TIMEOUT_MINUTES to be coherent
      ci/poe-powered: allow setting a different boot timeout than 5 minutes
      rpi/ci: shorten the boot timeout to 90 seconds
      docs: add release notes for 24.1.5
      docs: update calendar for 24.1.5
      docs: add sha256sum for 24.1.5
      nvk/ci: bump vkcts job timeout
      meson,ci: remove dead `kmsro` option in `gallium-drivers`
      ci: remove dead start-x.sh script
      rpi3/ci: remove {version,render}_check from [piglit.env]
      ci/deqp-runner: fix --fraction-start in non-parallel jobs
      ci: pass MESA_SPIRV_LOG_LEVEL from job to the test
      android: fix build in multiple ways
      docs: update calendar for 24.2
      docs: add release notes for 24.2.0
      docs: add sha256sum for 24.2.0
      docs: update calendar for 24.1.6
      docs: add release notes for 24.1.6
      docs: add sha256sum for 24.1.6
      ci/container: define LLVM_VERSION in the alpine container job
      ci/build: reuse alpine llvm version to make sure it stays coherent
      ci/build: add comment to explain why s390x is useful
      ci/build: document @ajax as a stakeholder for s390x
      ci/build: drop softpipe from s390x job
      nvk/ci: add vkd3d job on the ga106
      llvmpipe/ci: mark now-skipping test as no longer failing
      nvk+zink/ci: mark `spec@arb_sample_shading@samplemask .*@0\..* partition` as fixed
      nvk/ci: document regressions
      turnip/ci: document regressions
      turnip/ci: skip timing out tests
      turnip/ci: document flakes
      nvk/ci: mark a bunch of tests as fixed
      turnip/ci: add a750_vk flakes
      docs/envvars: fix reference
      broadcom/ci: set default TEST_PHASE_TIMEOUT_MINUTES so that jobs never timeout without uploading results
      broadcom/ci: increase the timeout of the nightly job v3d-rpi4-gl:arm32 by 10min
      ci/build: add honeykrisp (asahi vk) to several builds
      intel/ci: don't trigger anv-jsl-full & anv-tgl-full on GL changes
      nvk/ci: document CTS bug
      ci: add check for misleading indentation in ci toml files
      ci: don't run hardware tests if the toml files don't pass validation
      ci: fix toml-lint rules to not block nightly pipelines
      r300/ci: move postmerge jobs to -postmerge stage
      lavapipe/ci: move postmerge jobs to -postmerge stage
      venus/ci: move postmerge jobs to -postmerge stage
      ci/rules: make every job exist as manual in fork pipelines
      kopper: only include loader_dri3_helper.h when xcb is enabled
      zink+nvk/ci: document new variant of test failing
      zink+nvk/ci: document all the flakes seen in the last week
      turnip/ci: document all the a750 flakes seen in the last week
      vc4: Add missing libvc4_neon build dependencies
      vc4/meson: simplify neon build now that the android build system doesn't exist anymore
      ci/deqp-runner: restore CC after temporarily overriding it
      ci/deqp: simplify command to list local deqp patches
      ci/deqp-runner: be less verbose in the loop printing the deqp builds info
      ci/deqp-runner: build from git checkout even on linux
      ci/deqp-runner: add infra to apply patches
      ci/image-tags: re-generate all the images building deqp-runner
      ci/build: fix ppc64le and s390x jobs rules
      ci: take igalia farm offline
      docs: add release notes for 24.2.1
      docs: add sha sum for 24.2.1
      docs: update calendar for 24.2.1
      nvk/ci: drop skip of fixed vkd3d test
      ci/vkd3d: make the job output less spammy, focus on what is useful to print
      ci/vkd3d: use upstream test-runner.sh for process isolation
      ci: run only one vkd3d test at a time
      ci/vkd3d: check for tests listed in fails but not actually failing
      v3dv/ci: fix test timeout for v3dv-rpi5-vk-full:arm64
      etnaviv/ci: fix gc2000_piglit test timeout
      freedreno/ci: fix a630_*_full tests timeout
      nouveau/ci: fix gk20a-gles test timeout
      freedreno/ci: drop unused TEST_PHASE_TIMEOUT_MINUTES in LAVA jobs
      ci/bare-metal/poe: change the default TEST_PHASE_TIMEOUT_MINUTES to `CI_JOB_TIMEOUT - 5min`
      broadcom/ci: drop TEST_PHASE_TIMEOUT_MINUTES that match the default value
      broadcom/ci: use TEST_SETUP_AND_UPLOAD_MARGIN_MINUTES
      etnaviv/ci: drop TEST_PHASE_TIMEOUT_MINUTES that match the default value
      freedreno/ci: drop TEST_PHASE_TIMEOUT_MINUTES that match the default value
      nouveau/ci: drop TEST_PHASE_TIMEOUT_MINUTES that match the default value
      ci/build: untangle debian-s390x from debian-ppc64el
      freedreno/ci: add a630 flake
      docs: add release notes for 24.1.7
      docs: update calendar for 24.1.7
      docs: add sha sum for 24.1.7
      ci: move build jobs that are used by tests to an earlier stage
      ci: merge build-x86_64 & build-misc
      ci: do not start build-only jobs until the critical build-for-tests jobs are done
      nvk/ci: mark -dEQP-VK.drm_format_modifiers.export_import* as fixed
      radeonsi/ci: bump timeout for nightly job glcts-vangogh-valve
      Revert "freedreno/ci: drop TEST_PHASE_TIMEOUT_MINUTES that match the default value"
      freedreno/ci: fix test timeout for a306_piglit
      radeonsi/ci: mark a bunch of subgroups tests as failing
      venus/ci: drop redundant flakes definitions
      venus/ci: add flake and skip timing out test
      zink+nvk/ci: bump zink-nvk-ga106-valve timeout as more tests are being run
      zink+nvk/ci: mark a ton of tests as fixed
      zink+turnip/ci: fix .zink-turnip-valve-manual-rules
      turnip/ci: add vkd3d job on the a750
      ci: add virgl & venus to the s390 build

Eric R. Smith (13):
      panfrost: make PAN_MESA_DEBUG=dump really show all GPU memory
      panfrost: fix texture.border_clamp regression for valhall
      panfrost: use RGB1 component ordering for R5G6B5 pixel formats
      panfrost: Make the unit to use for instructions explicit
      panfrost: Update bifrost_isa.py to handle some Valhall constructs
      panfrost: refactor valhall ISA parser
      panfrost: split pseudo instructions from Bifrost and Valhall
      panfrost: fix crash when disassembling shader for trace
      panfrost: Add b2i16 conversion to table
      panfrost: move pan_arch definition out of genxml to pan_props.h
      panfrost: move lower_image_ms to after lower_atomics
      panfrost: implement image2dms support for valhall
      panfrost: add support for image2DMSArray on bifrost

Erico Nunes (9):
      dri: fix sun4i-drm driver name
      lima/ppir: add folding lowering for src modifiers
      lima/ppir: add folding lowering for dest modifiers
      lima/ppir: remove nir_legacy
      lima/ppir: add support and folding for fclamp_pos
      lima/ppir: add support and folding trunc to a modifier
      lima/ppir: switch to derivative intrinsics
      docs/ci: pass -D platforms=[] to avoid dependencies
      v3dv: unconditionally expose VK_EXT_queue_family_foreign

Erik Faye-Lund (12):
      docs/panfrost: mention that Mali-G610 is conformant
      mesa/main: use extension-helper
      mesa/main: validate GL_UNSIGNED_INT_5_9_9_9_REV
      mesa/main: validate GL_UNSIGNED_INT_2_10_10_10_REV
      mesa/main: validate GL_UNSIGNED_INT_10_10_10_2
      mesa/main: check depth/stencil formats
      mesa/main: validate desktop gl format/types
      mesa/main: validate bgr formats
      mesa/main: validate abgr format
      mesa/main: validate integer-formats
      mesa/main: validate half-float types
      mesa/main: switch from deny-list to allow-list

Faith Ekstrand (222):
      nvk: Fix indirect cbuf binds pre-Turing
      nvk: Don't advertise sparse residency on Maxwell A
      nak/sm50: Split IAdd2 into IAdd2 and IAdd2X
      nak: Implement ineg on sm50
      nak: Add an AtomCmpSrc to AtomOp::CmpExch
      nak/sm50: Support AtomOp::CmpExch
      nak/sm50: Improve encoding of OpFFma
      nak/sm50: Various encoding fixes
      nak/sm50: Implement OpPixLd
      nak: Lower fsqrt in NIR on Maxwell A and earlier
      nak/sm50: Implement OpCCtl
      nak/nir: Split 64-bit conversions pre-Volta
      nak: Drop the nvfuzz binary
      nak: Plumb tessellation parameters through ShaderStageInfo
      nak: Rework fragment shader stage info
      nak: Move a few more things to VtgIoInfo
      nak: Move creation of nak_shader_info to ShaderBin::new()
      nvk: Reject sparse images on Maxwell A and earlier
      nil: Add a helper for populating the null descriptor
      nvk: Create the zero page earlier in device creation
      nvk: Call into NIL to populate the null descriptor
      nouveau/winsys: Uninline nouveau_ws_bo_unmap()
      nak: Pull the QMD code out into its own crate
      nak: Make ShaderBin a public struct
      nak/meson: Rename libnak_bindings_gen to _libnak_bindings_rs
      nak: Add a bare HW shader runner
      nak: Add an implementation of the ACORN random number generator
      nak: Add dst_type decorations
      nak: Add a Foldable trait
      nak: Implement Foldable for OpIAdd3 and OpIAdd3X
      nak: Initialize DEBUG on-demand
      nak: Add a framework for running hardware tests
      nak: Add some opcode tests
      nak: Implement Foldable for OpPrmt
      nak: Implement Foldable for OpShf
      nak: Fix shf.l.high on Maxwell
      nak: Add 64-bit shift helpers
      nak: Add tests for 64-bit shifts
      nak: Use .wrap for 64-bit shifts
      nak: Fix shl64 for pre-Volta
      meson/megadriver: Don't invoke the megadriver script with no drivers
      nak/spill_values: Don't assume no trivial phis
      nak: Drop the old encode_sm*.rs files
      nak/sm50: Add control-flow sync ops
      nak: Add more NIR wrappers for walking the NIR CFG
      nak/sm50: Emit sync instructions for control-flow
      nak: Disable opt_jump_thread pre-Volta
      nak: Don't emit barrier ops for shared memory pre-Volta
      nak/sm70: Implement OpAtom with Dst::None as RED
      nak/sm50: Implement OpAtom with Dst::None as RED
      nak: Use the RED path for atomics with unused destinations
      nak: IMul and IMad are variable latency pre-Volta
      nak/calc_instr_deps: Set a delay of 13 for flow ops pre-Volta
      nak: Align shader data to the min CBuf alignment
      nak: Add tests for nak_builder::isetp64
      nak: Add tests for nak_builder::iadd64
      nak: Add tests for OpISetP
      nak/hw_tests: Add debug printing
      nak/sm50: Set the .x bit for isetp
      nak/builder: Fix isetp64 for pre-Volta
      nvk: Squash txq results to 0 for null descriptors
      nak: Fix OpCCtl encoding on Maxwell
      nak/nir: Don't emit CCtl for release barriers on Maxwell
      nvk: Don't push bound UBOs on Volta and earlier
      nak: Implement From<bool> for Pred
      nak/sm50: OpIAdd2 only supports one negate modifier
      nak/sm50: OpLop2 does not have .X
      nak: Add tests for OpLop2 and OpLop3
      nak/sm50: Fix the encoding of ffma with cbuf in src2
      nak: Implement depth clip control pre-Volta
      nvk: Use nvk_buffer_addr_range() for index buffers
      nvk: Fix zero-size vertex/index buffer bindings pre-Turing
      nak/sm50: Add support for OpAL2P
      nak: Move the runner into the main nak crate
      nak: Plumb through the call/return stack size
      nvk: Take CRS into account when allocating the SLM area
      nak/nir: Fix the reverse execlist iterator
      nak/nir: Add a few more NIR helpers
      nak/nir: Rework CRS handling
      nak: Add target labels to CRS pop instructions
      nak: Add an optimization for CRS ops
      nak: OpKill also needs a delay on Maxwell
      nak/sm50: Add execution delays for more ops
      nak: SrcMod::INeg cannot be folded
      nak: Add tests for nak_builder::ineg64
      nak/builder: Allow source modifiers in ineg64()
      nak: Lower iadd64(x, -y) to isub64(x, y) in NIR
      nak/hw_tests: Explicitly test equal cases in test_isetp64
      nak: Add tests for OpFlo
      nak: Assert no overflow when legalizing iadd with too many ineg modifiers
      nak: Add source and destination types for carry values
      nak/hw_tests: Respect src_mod and src_swizzle in op auto-tests
      nak/hw_tests: Use better test values for iadd tests
      nak: Add tests for OpIAdd2 and OpIAdd2X
      nak/sm50: Set the not bit for OpLop2::srcs[0]
      nak: Use OpFoldData::get_u32_bnot_src() more places
      nak: Add tests for OpPopC and enable SrcMod::BNot
      nak/nir: Preserve rounding modes in split_64bit_conversions()
      nak: Rename OpFSOut to OpRegOut
      nak: pre-Volta uses r0 to output the final GS handle
      nak: Add a PredSetOp::eval() helper
      nak: Add tests for OpPSetP
      nak: Non-constant offsets are allowed on patch loads
      nak: Rework isetp64 on sm50 again
      nak: Disallow isetp.x pre-Volta
      nak: Manually flush denorms for nir_op_fquantize2f16 pre-Volta
      nak/sm50: Set f2f.high
      nvk: Default to NAK on Maxwell+
      nvk: Disable sparse D32S8 cubes pre-Turing
      nak: Move the QMD code back into the main nak crate
      nak/qmd: Return the complete QMD dispatch size layout
      mme/fermi: Don't try to access zero-size std::vector
      nouveau/mme: Add support for MUL on Fermi
      nouveau/mme: Add support for multiplication on Fermi
      nak/hw_runner: Use byte_offset()
      nak/hw_tests: Use ptr::from_ref() and ptr::cast()
      nak: Use nak_builder::fsetp() in op_fquantize2f16
      nvk: Fix indirect dispatch on Turing+
      vulkan: Update XML and headers to 1.3.292
      nvk: Move nvk_sample_location to NAK
      nak: Sample locations are byte-aligned
      nak,nir: Rework gl_SampleMaskIn[] handling
      nvk: Don't force sample shading when gl_SampleMaskIn[] is read
      nvk: Set POST_PS_INITIAL_COVERAGE
      compiler/rust: Copy the Rust NIR wrappers from NAK
      compiler/rust/nir: Implement NIR types directly
      compiler/rust/nir: Add explicit lifetimes
      nak: Switch to the common NIR wrappers
      nak: Move DstsAsSlice::is_uniform() to its own trait
      nak: Replace the guts of Srcs/DstsAsSlice with a new AsSlice trait
      nak,compiler: Move AsSlice to common code
      nvk: Require color or depth/stencil attachment support for input attachments
      nvk: Support STORAGE_READ_WITHOUT_FORMAT on buffers
      nvk: Move descrptor structs into a separate header
      nvk: s/device/dev/ in nvk_buffer_view.c
      nvk/nvkmd: Advertise the usable VA range
      nvk: Add a VK_EXT_descriptor_buffer buffer view cache
      nvk: Refactor image intrinsic lowering a bit
      nvk: Lower descriptors for VK_EXT_descriptor_buffer buffer views
      nvk: Use nvk_edb_buffer_view_descriptor for EDB descriptor set layouts
      nvk: Use the EDB buffer view path with NVK_DEBUG=edb_bview
      nvk: Implement GetDescriptorLayoutSize/BindingOffsetEXT()
      nvk: Refactor some descriptor set helpers
      nvk: Implement GetDescriptorEXT
      nvk/descriptor_table: Add support for requesting a specific index
      nvk: Implement descriptor capture/replay
      nvk: Properly indent a comment
      nvk: Rework descriptor set bindings
      nvk: Implement descriptor buffer binding
      nvk: Add support for embedded immutable samplers
      zink: Align descriptor buffers to descriptorBufferOffsetAlignment
      nvk: Advertise VK_EXT_descriptor_buffer
      nvk: Invalidate MME data for descriptor buffers
      nak: Pass -C default-linker-libraries when building tests
      ci: Add NVK to debian-arm64-build-test
      vulkan: Add null descriptor bits to vk_pipeline_robustness_state
      nvk: Plumb the whole vk_pipeline_robustness_state through to nvk_ubo/ssbo_addr_format
      nvk: Enable shader bounds checking when nullDescriptor is enabled
      nouveau/headers: Add more nv_push asserts
      nouveau/winsys: Fix an undefined shift
      nouveau/mme: Fix add64 of immediates on Fermi
      nouveau/mme: Better handle the too many immedaties case on Turing+
      nouveau/mme: Don't allow PRMT and MTHD in the same op on Turing+
      nouveau/mme: Disassemble MERGE more like the mme_merge()
      nouveau/mme: Add NOT and AND_NOT ops
      nouveau/mme: Allow shifting immediates on Fermi
      nouveau/mme: Use a designated initializer in mme_fermi_decode()
      nouveau/mme/tu104: Break the state simulator into a pluggable component
      nouveau/mme/fermi: Break the state simulator into a pluggable component
      nouveau/mme: Add a pluggable state interface
      nouveau/mme/tu104: Properly handle mthd increment
      nouveau/mme: Add a generic simulator function
      nvk: Reserve MME scratch area for communicating with FALCON
      nvk/mme: Add a unit test framework for driver macros
      nvk: Emit NVK_MME_SCRATCH_DRAW_BEGIN as part of flush_ia_state()
      nvk: Increase the context init size
      nvk: Move the guts of BindIndexBuffer2KHR to a macro
      nvk: Move the guts of BindVertexBuffers2 into a macro
      nvk: Move setting VB enables and strides into macros
      nvk/mme: Add helpers for masked scratch updates
      nvk: Add macros to sort out tess parameters
      nvk: Move the ANTI_ALIAS_CONTROL logic to the MME
      nvk: Stop leaking the descriptor table in-use set
      nvk: Disable conditional rendering around CopyQueryPoolResults
      nvk: Expose a new nvk_compile_nir_shader() helper
      nvk: Refactor compute shader dispatch
      nvk: Add a helper for dispatching compute shaders
      nvk: Use the new dispatch helper for queries
      nvk: Treat NULL vertex/index buffer pointers as null descriptors
      nil,nvk: Disable modifiers for B10G11R11_UFLOAT and E5B9G9R9_UFLOAT
      nir: Preserve fp_fast_math in nir_opt_vectorize()
      v3dv: Update a debug message
      vtn: Move initialization of mesa_spirv_debug to a helper
      vtn: Allow SPIR-V debug options in release builds
      vtn: Add a debug flag to dump SPIR-V assembly
      v3dv: Drop the SPIR-V dumper
      radv: Use the SPIR-V printer in spirv_to_nir
      vulkan/pipeline: Handle VIEW_INDEX_FROM_DEVICE_INDEX_BIT
      lvp: Stash the PipelineCreateFlags2KHR in the pipeline
      dzn: Use vk_pipeline_shader_stage_to_nir()
      vulkan: Take a VkPipelineCreateFlags2KHR in vk_pipeline_*shader_stage*()
      vulkan: Handle VIEW_INDEX_FROM_DEVICE_INDEX_BIT in the runtime
      nvk: Fix a typo in a comment
      nvk: Use 4 bits per value for the anti alias values
      nvk: Hash minSampleShading in nvk_hash_graphics_state()
      nvk: Advertise VK_KHR_maintenance7
      nvk/nvkmd: Add an nvkmd_mem_init() helper
      nvk/nvkmd: Plumb map_out through to the back-end nvkmd_mem_ops::map
      nvk/nvkmd: Plumb map pointers through to back-end unmap funcs
      nvk/nvkmd: Plumb map_flags through to unmap/overmap
      nvk/nvkmd: Don't inline nvkmd_mem_[un]map()
      nvk/nvkmd: Split client and internal mappings
      nvk/nvkmd: Reference count internal mappings
      nvk: Don't do linear<->tiled copies for rendering suspend/resume
      nvk: Take depth image layer counts from the VkRenderingInfo
      nvk: Add all_linear to nvk_rendering_state
      vulkan: Add a helper for getting VkRenderingAttachmentLocaiontInfoKHR
      vulkan: Allow pColorAttachmentLocations == NULL in CmdSetRenderingAttachmentLocationsKHR()
      vulkan: Expose a vk_cmd_set_rendering_attachment_locations() helper
      nvk: Reset rendering attachment locations in BeginCommandBuffer/Rendering
      nvk: Emit SET_CT_SELECT based on the dynamic color location map
      nvk: Adverties VK_KHR_dynamic_rendering_local_read

Felix DeGrood (2):
      anv: fix src_hash dumping for compute shaders
      anv/measure: ignore events from reused command buffers

Francisco Jerez (6):
      intel/dev: Add devinfo flag for TBIMR push constant workaround.
      intel/brw: Implement null push constant workaround.
      anv/gfx12.5: Pass non-empty push constant data to PS stage for TBIMR workaround.
      iris/gfx12.5: Pass non-empty push constant data to PS stage for TBIMR workaround.
      iris: Pin pixel hashing table BO from iris_batch submission instead of from iris_state.
      intel/brw/gfx12.5+: Fix IR of sub-dword atomic LSC operations.

Friedrich Vock (3):
      radv/rt: Only do ploc atomicCompSwap once per workgroup
      radv/rt: Don't atomicAdd local prefix sums
      aco: Fix 1D->2D dispatch conversion on <gfx9

GKraats (5):
      i915g: fix generation of large mipmaps
      i915g: fix mipmap-layout for npots
      i915g: fix max_lod at mipmap-sampling
      i915g: Screen corruption  with ENOBUFS caused by fence register shortage
      i915g: fix count of buffers at i915_drm_batchbuffer_validate_buffers

Ganesh Belgur Ramachandra (2):
      radeonsi: fix eptich on chips without image opcodes (e.g. gfx940)
      amd/common: skip lane size determination for chips without image opcodes (e.g. gfx940)

Georg Lehmann (31):
      radv/rt: remove one VALU from traversal loop
      spirv: ignore more function param decorations
      aco/optimizer: update temp_rc when converting to uniform bool alu
      aco: add CompilationProgress::after_lower_to_hw
      aco: validate temp_rc
      aco/gfx11+: apply neg to vinterp
      aco: reorder dpp for ddx/ddy
      aco/gfx11.5+: use vinterp for fddx/fddy
      aco/gfx11+: don't use VOP3 v_swap_b16
      aco: test xor swap16 path
      nir/peephole_select: ignore masked/quad swizzle without fetch_inactive
      aco: optimize 64bit find_lsb/find_msb
      aco: optimize dd[xy]_fine if it's only used by abs
      nir/lower_int64: replace uadd_sat with ior for find_lsb64 and ufind_msb64
      aco/gfx10+: set lateKill for sgprs used by wave64 VALU writing a mask
      aco: only set latekill in live_var_analysis
      aco/tests: don't test dpp constant propagation with row shift
      aco/tests: do not use add to tests neg modifer
      aco/print_ir: use neg() for constants
      aco/tests: parse neg(constant) in vop3p test
      aco/tests: allow literals with resolved swizzles in vop3p test
      aco/tests: do not use mul with constant to tests neg modifier
      nir: optimize pack_uint_2x16 of pack_half(a, 0)
      zink: switch to derivative intrinsics
      aco/ra: unconditionally replace literal with sgpr when promoting to VOP3
      aco/ra: use parallelcopy to copy literal instead of s_mov
      aco/ra: fix copying 64bit literal to sgprs
      aco/ra: always reuse def register for literal copy
      aco: use v_cvt_pk_u8_f32 for f2u8
      nir/opt_algebraic: reassociate constants in ior(iand) chains
      radv/ci: update trace checksums

Guilherme Gallo (6):
      bin/ci: crnm: Deal with `created` status
      bin/ci: crnm: Fix pipeline monitoring skipping
      bin/ci: crnm: Reduce trace cluttering
      bin/ci: crnm: Don't overwrite the global sets
      bin/ci: crnm: Use frozen set for statuses
      ci/a618: Fix zink-tu-a618-full rules

Gurchetan Singh (4):
      vulkan/runtime: introduce vk_meta_object_list
      tu: use os_get_total_physical_memory(..)
      vulkan: fix glibc AOSP build
      vulkan/android: change vk_enum_defines.h path

Hans-Kristian Arntzen (2):
      wsi/common: Do not update present mode with MESA_VK_WSI_PRESENT_MODE.
      wsi/x11: Bump maximum number of outstanding COMPLETE events.

Hsieh, Mike (3):
      amd/vpelib: Remove deprecated update_3dlut flag
      amd/vpelib: Refactor OPP registers
      amd/vpelib: Add cache mechanism for 3D Lut command

Hyunjun Ko (19):
      intel/genxml: add a missing value for MFX_SURFACE_STATE
      intel/genxml: change the length of MFX_QM_STATE
      intel/genxml: update VDENC instructions
      vulkan/video: adds a bitstream writer of h264 slice header
      anv/query: handle VK_QUERY_TYPE_VIDEO_ENCODE_FEEDBACK_KHR
      anv/video: remove unnecessary macros
      anv/video: implemnt VkGetEncodedVideoSessionParametersKHR
      anv/video: initial support for h264 encoding
      anv: enable VK_KHR_video_encode_queue and VK_KHR_video_encode_h264
      intel/genxml: Add missing fields for HCP_SLICE_STATE
      intel/genxml: fix the length of VDENC_DS_REF_SURFACE_STATE
      intel/genxml: Adds more VDENC commands
      intel/genxml: fix some length of HCP_FQM_STATE
      intel/genxml: adds a value of reference pic to HCP_SURFACE_STATE
      intel/decoder: Handle HCP_PAK_INSERT_OBJECT
      vulkan/video: adds a bitstream writer of h265 slice header
      anv/query: consider codec when querying the encoding status.
      anv/video: initial support for h265 encoding
      anv: support h265 encoding

Iago Toral Quiroga (7):
      v3d: move TLB blit checks to a helper
      v3d: support blitting straight from tile buffer
      v3d: add a faster TLB blit path
      v3d: do not expose EXT_float_blend
      broadcom/compiler: emit instructions producing flags earlier
      broadcom: implement nir_op_uclz
      broadcom: drop backend implementation of nir_op_ufind_msb

Ian Romanick (31):
      nir/range_analysis: Fix errors in fmin and fmax tables
      nir/algebraic: Optimize some bit operation nonsense observed in some shaders
      nir/algebraic: Optimize some masking of extract_u8 operations
      intel/brw: Fix undefined shift by 64 of uint64_t in brw_compute_first_urb_slot_required
      intel/brw: Fix undefined left shift of negative value in update_uip_jip
      intel/brw: Fix undefined left shift of large UW value in brw_imm_uw
      intel/brw: Fix undefined left shift of negative value in brw_texture_offset
      intel/elk: Fix undefined shift by 64 of uint64_t in elk_compute_first_urb_slot_required
      intel/elk: Fix undefined left shift of negative value in update_uip_jip
      intel/elk: Fix undefined left shift of large UW value in elk_imm_uw
      intel/elk: Fix undefined left shift of negative value in elk_texture_offset
      intel/brw: Eliminate dead flag writes
      intel/brw: Don't propagate saturate to an instruction that writes flags
      intel/elk: Don't propagate saturate to an instruction that writes flags
      intel/brw: Small code refactor in brw_fs_opt_saturate_propagation
      intel/brw: Use def analysis for simple cases of saturate propagation
      intel/brw: Move fsat instructions closer to the source
      intel/brw: Make 16-bit ishl, ishr, and ushr SSA friendly
      intel/brw: Make ifind_msb SSA friendly
      nir/algebraic: Improve some find_lsb and ifind_msb patterns
      anv: Protect against OOB access to anv_state_pool::buckets
      anv: Larger memory pools for huge shaders
      intel/brw/xe2: Allow int64 conversions
      nir/algebraic: Remove incorrect bfi of iand pattern
      nir/divergence: resource_intel is less divergent than you thought
      intel/brw: Copy prop from raw integer moves with mismatched types
      intel/brw: Run intel_nir_lower_conversions only after brw_nir_optimize
      intel/brw: Unconditionally run optimizations after nir_opt_uniform_subgroup
      intel/brw: Relax is_partial_write check in cmod propagation
      intel/brw: Enable constant propagation for a couple more logical sends
      intel/brw: load_offset cannot be constant on this path

Icenowy Zheng (10):
      zink: reject Imagination proprietary driver w/o geometryShader
      gallivm: orcjit: keep the ownership of tm for LPJit
      gallivm: orcjit: use atexit to release LPJit singleton at exit
      util: detect LoongArch architecture
      gallivm: add LoongArch support to the mattrs setting code
      llvmpipe: add LoongArch support in ORCJIT
      zink: do not expose quad support when no geometry shader
      pvr: enlarge transfer fw_stream buffer for multicore
      pvr: add tpu_dm_global_registers feature
      pvr: emit tpu_tag_cdm_ctrl in compute stream when present

IvÃ¡n Briano (4):
      intel/rt: fix terminateOnFirstHit handling
      nir: add pass to convert ViewIndex to DeviceIndex
      anv: handle VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT
      anv: fix adding to wa_addr

Jesse Natalie (12):
      microsoft/clc: Split struct copies before vars_to_ssa in pre-inline optimizations
      mr-label-maker: Add d3d10umd label rules
      meson: Add an error message for llvmpipe without llvm draw support
      wgl: Add missing idep_mesautilformat
      d3d12: Don't use a vertex re-ordering GS for line primitives
      ci/windows: Use MSVC v143 build tools
      ci/windows: Update VK-GL-CTS to d48899f85b486a70d090af59a1453763458611d9
      ci/windows: Bump image tags to rebuild deps with v143 build tools
      compiler, vk: Support subgroup size of 4
      dzn: Drop custom subgroup size handling
      microsoft/compiler: Handle subgroup size 4 as a required wave size
      microsoft/compiler: Move nir_lower_undef_to_zero out of the optimization loop

Jessica Clarke (3):
      Revert "meson: Do not require libdrm for DRI2 on hurd"
      Revert "meson: fix with_dri2 definition for GNU Hurd"
      meson: egl: Build egl_dri2 driver even for plain DRI

Jianxun Zhang (8):
      intel/common: Ensure SIMD16 for fast-clear kernel (xe2)
      intel/common: Remove blank lines in intel_set_ps_dispatch_state() (xe2)
      anv: Fix assertion failures on BMG (xe2)
      iris: Fix an assertion failure with compressed format
      anv: Disable compression on legacy modifiers (xe2)
      anv: Disable legacy CCS setup in binding (xe2)
      Revert "anv: Disable PAT-based compression on depth images (xe2)"
      Revert "iris: Disable PAT-based compression on depth surfaces (xe2)"

Job Noorman (58):
      ir3/postsched: improve debug state dumping
      ir3/postsched: fix calculation of max_delay
      ir3/postsched: remove unused delay field
      ir3/postsched: include ss/sy delay in max_delay
      ir3/postched: don't prioritize instructions with soft delays
      ir3: fix spill/reload split src/dst regs
      ir3: update merge set affinity in shared RA
      ir3: fix clearing merge sets after shared RA
      ir3: fix wrong dstn used in postsched
      ir3: fix counting of repeated registers
      ir3: correctly count vectorized instructions for tex prefetch
      ir3: add debug option to expand rpt instructions
      ir3: print (sat) modifier of instructions
      ir3: add backend support for repeated instructions
      ir3: add builders for repeated instructions
      ir3: make RA aware of repeat groups
      ir3: add pre-RA pass to clean up repeat groups
      ir3: add post-RA pass to merge repeat groups into rptN instructions
      ir3: lower vectorized NIR instructions
      nir/opt_vectorize: move rewriting of uses to a function
      nir/opt_vectorize: prepare for multiple try_combine functions
      nir/opt_vectorize: process blocks in source-code order
      nir/opt_vectorize: add support for phi nodes
      ir3: add support for vectorized NIR phi nodes
      ir3: replace @load_uniform by new @load_const_ir3 intrinsic
      ir3: rename @store_uniform_ir3 to @store_const_ir3
      nir/load_store_vectorize: support non-byte offset
      nir/load_store_vectorize: support stores without wrmask
      nir/load_store_vectorize: add load/store_const_ir3
      ir3: enable load/store_const_ir3 vectorization
      ir3: add support for rpt bary.f/flat.b
      ir3: use rpt instructions for frag coord
      ir3: use correct bit size for bools in emit_alu
      ir3/ci: remove fixed tests from a307-fails
      ir3: make fullsync sync after shared writes
      ir3/legalize: handle scalar ALU WAR hazards for a0.x
      zink/ci: add a618 flake
      freedreno: don't require binning and non-binning inputs to match
      ir3: remove unused outputs for binning pass in NIR
      ir3: don't modify const state for the binning variant in ir3_cp
      ir3: make ir3_const_state less error-prone to use
      ir3: fix calling ir3_const_state_mut in the binning VS
      ir3: print predicate inversion for branches
      ir3: print block divergence info
      ir3: remove unnecessary reconvergence point in scan_clusters lowering
      ir3: preserve block divergence info in ir3_lower_subgroups
      ir3: fix reconvergence points for blocks with two terminators
      ir3: fix adding physical edges multiple times
      ir3: fix reconvergence of blocks with multiple divergent predecessors
      ir3: recalculate reconvergence after opt_jump
      ir3: use physical cfg in helper_sched
      ir3: fix recognizing const/imm registers as a0
      ir3/legalize: don't add WAR dependencies for const/imm regs
      ir3: add assert to detect getting reg file of const/imm
      ir3/legalize: add needs_ss_war helper
      ir3/legalize: don't add (ss) for WAR hazards synced with (sy)
      ir3: add is_war_hazard_producer helper
      ir3/postsched: take WAR ss-delay into account

Jordan Justen (10):
      include/drm-uapi/README: Update README for drm uapi header files
      intel/brw/validate: Simplify grf span validation check by not using a mask
      intel/brw/validate: Update dst grf crossing check for Xe2
      intel/brw/validate: Convert access mask to be grf based
      intel/dev: Update hwconfig => max_threads_per_psd for Xe2
      intel/dev: Enable BMG PCI IDs (without INTEL_FORCE_PROBE)
      anv: Drop "not yet supported" warning for Xe2
      anv: Do hasvk devices check first
      intel/dev: Add devinfo::probe_forced based on INTEL_FORCE_PROBE
      anv: Don't warn about unsupported devices if INTEL_FORCE_PROBE was used

Jose Maria Casanova Crespo (1):
      v3d: v3d_resource Use LINEAR layout for importing with INVALID modifier

JosÃ© Roberto de Souza (25):
      intel/brw: Add a maximum scratch size restriction
      anv: Drop useless 'if (total_scratch > 0) {' block in cmd_buffer_ensure_cfe_state()
      anv: Wait for Xe exec queue to be idle before destroying it
      isl: Fix Xe2 protected mask
      anv: Propagate protected information to blorp_batch_isl_copy_usage()
      anv: Improve error message when pipeline creation fails during shader compilation
      anv: Handle internal shader compilation failure
      intel: Sync xe_drm.h
      intel/dev: Support new topology type with SIMD16 EUs
      docs: Move all ANV environment variables to a single section in envvars
      anv: Disable sparse even on Xe KMD with ANV_SPARSE
      docs/anv: Document ANV_SPARSE and ANV_SPARSE_USE_TRTT
      anv: Extend ANV_QUEUE_OVERRIDE to blit count
      intel: Remove INTEL_ENGINE_CLASS_COMPUTE and INTEL_ENGINE_CLASS_COPY parameters
      docs/anv: Remove documentation about INTEL_COMPUTE_CLASS and INTEL_COPY_CLASS
      anv: Add trivial_batch and query-pool to the error capture
      anv: Use batch_bo_pool in utrace anv_async_submit_init() calls
      anv: Nuke anv_utrace_submit::trace_bo
      intel/isl/gfx20: Alow hierarchial depth buffer write through for multi sampled surfaces
      anv/gfx20: Enable depth buffer write through for multi sampled images
      iris/gfx20: Enable depth buffer write through for multi sampled images
      anv: Nuke perf_metric
      intel/perf: Fix intel_gem.h include
      anv: Drop useless '>= 0' check over a unsigned
      anv: Add anv_device_perf_close()

Juan A. Suarez Romero (18):
      v3d: use operations to specify what to save in blitter
      v3d: add new clear blitter op
      v3d/ci: add failures from piglit all profile
      v3d/ci: add new flakes
      vc4: fix typo in simulator conditional declaration
      v3d/vc4/ci: add address sanitizer jobs
      v3d/ci: enable full run jobs for rpi5
      broadcom/ci: annotate some of the failures
      v3d/ci: add new flakes in rpi5
      v3d/ci: update number of rpi5 available for testing
      v3d: free dbuf
      broadcom/ci: use kernel8 for rpi5 full jobs
      v3d/ci: update expected results
      vc4/ci: update expected results
      Revert "ci: take igalia farm offline"
      vc4/ci: update expected results
      vc4: build simulator references conditionally
      v3d/v3dv: build simulator references conditionally

Juston Li (4):
      anv/android: remove unneeded ANB implicit import flags
      anv/android: handle R8G8B8X8 as R8G8B8A8
      anv/android: refactor out u_gralloc tiling query
      anv/android: resolve ANB swapchain images on bind

Karmjit Mahil (4):
      freedreno: Enable the A735
      tu: Set `TU_ACCESS_CCHE_READ` for transfer ops with read access
      freedreno: Define SP_DITHER_CNTL (0xA9AC)
      tu: Implement VK_EXT_legacy_dithering

Karol Herbst (81):
      spirv: generate info for FunctionParameterAttribute
      spirv: initial parsing of function parameter decorations
      spirv: handle function parameters passed by value
      nak: allow clippy::not_unsafe_ptr_arg_deref lints
      nak: fix clippy::if_same_then_else error
      rusticl/platform: add perf debug option
      rusticl/memory: remove stale TODOs
      rusticl/memory: add a couple of performance warnings
      rusticl: move more kernel related things into kernel.rs
      rusticl/kernel: make some types and fields private
      rusticl/kernel: move setting of nir metadata into lower_and_optimize_nir
      rusticl/program: move attribute_str to the spirv module
      rusticl: use blob for all serialization
      rusticl: remove unsued serialization helpers
      rusticl/kernel: add type for the convert_spirv_to_nir return value
      rusticl/kernel: move internal_args into NirKernelBuild
      clc: force linking of spirvs with mismatching pointer types in signatures
      rusticl/spirv: do not add additional new lines when joining logs
      rusticl: fix clippy lint having bounds defined in multiple places
      rusticl/program: protect against 0 length in slice::from_raw_parts
      rusticl/api: protect against 0 length in slice::from_raw_parts
      rusticl/spirv: protect against 0 length in slice::from_raw_parts
      nouveau: handle realloc failure inside cli_kref_set
      rusticl: bump rust req to 1.76
      rusticl: use div_ceil
      rusticl: use next_multiple_of
      rusticl: use pointer byte offset API
      rusticl: replace some raw pointer casts
      rusticl: use ptr::from_ref and ptr::from_mut
      rusticl/icd: use ptr::addr_eq
      meson: centralize rust handling
      docs: move rust update policy
      meson: centralize bindgen version check
      meson: centralize checking for new enough meson for rust support
      nir: add load_global_size intrinsic
      rusticl/kernel: emit system values with the correct device size
      rusticl/kernel: handle load_global_size
      mesa: check for enabled extensions for *UID enums
      nouveau/winsys: fix handling of NV_DEVICE_TYPE_IGP
      nouveau: use nv_devince_info and fill in PCI and type information
      nouveau: add nv_device_uuid
      nouveau: implement driver_uuid and device_uuid
      nvk: use nv_device_uuid
      nouveau: remove nouveau_check_for_uma
      nouveau: implement PIPE_PCI caps
      nouveau: use nv_device_info directly for dumping push buffers
      zink: lower 64 bit find_lsb, ufind_msb and bit_count
      zink: lower 8/16 bit alu ops vk spirv doesn't allow
      rusticl/kernel: properly respect device thread limits per dimension
      rusticl/device: Make supported 1Dbuffer formats a strict subset of 1D
      rusticl/memory: Fix memory unmaps after rework
      rusticl/image: take pitches into account when allocating memory for maps
      rusticl/image: properly sync mappings content for 1Dbuffer images
      rusticl/queue: add clSetCommandQueueProperty
      util/u_printf: do not double print format string with unused arugments
      rusticl/memory: fix sampler argument size check
      rusticl/kernel: move kernel size into Constant arg type
      rusticl/kernel: rename InternalKernelArg to CompiledKernelArg
      rusticl/kernel: remove CompiledKernelArg::size
      rusticl/kernel: make CompiledKernelArg::offset a u32
      rusticl/kernel: make KernelArg::offset and KernelArg::binding proper u32 values
      rusticl/kernel: rename InternalKernelArgType to CompiledKernelArgType
      rusticl/kernel: move serialization code of KernelArgType
      rusticl/kernel: big kernel arg rework
      rusticl/kernel: add KernelArgType::is_opaque
      rusticl/kernel: move CompiledKernelArg decleration above the impl block
      rusticl/kernel: simplify adding internal kernel args
      rusticl/mem: do not check against image base alignment for 1Dbuffer images
      rusticl: do not use CL vector types in bindings and code
      ac/llvm: fix umul_high
      rusticl/device: limit CL_DEVICE_IMAGE_MAX_BUFFER_SIZE more aggressively
      vtn: ignore volatile on functions for now
      clc: add support for more image related extensions
      compiler/types: Add multisample vimage/vtexture types
      nir: Support multisampled images in lower_read_only_images_to_tex()
      vtn, nir: handle OpImageQueryLevels on images
      vtn: mark ImageMipmap as supported
      rusticl: reuse PipeContext
      zink: cache generated vendor and device name inside zink_screen
      rusticl/mesa: Return CStr for device and vendor names.
      clc: fix compilation error with llvm-20

Kenneth Graunke (21):
      intel/brw: Don't force g1's live range to be the entire program
      intel/brw: Delete fs_reg_alloc::discard_interference_graph()
      intel/brw: Record that SHADER_OPCODE_SCRATCH_HEADER uses g0
      intel/brw: Record g0 as live for sends with send_ex_desc_scratch set
      intel/brw: Only force g0's liveness to be the whole program if spilling
      intel/brw: Mark all UBO access with a direct buffer index as speculative
      intel/brw: Delete the brw_fs_opt_peephole_select() pass
      intel/brw: Delete the brw_fs_opt_dead_control_flow_eliminate() pass
      intel/brw: Replace predicated break optimization with a simple peephole
      intel/brw: Set appropriate types for 16-bit sampler trailing components
      intel/brw: Drop image_{load,store}_raw_intel handling
      intel/brw: Pass opcode to brw_swsb_encode/decode
      intel/brw: Fix Xe2+ SWSB encoding/decoding for DPAS instructions
      intel: Fix bad align_offset on global_constant_uniform_block_intel
      intel/brw: Fix OOB reads when printing instructions post-reg-alloc
      intel/brw: Print blocks in brw_print_instructions_to_file()
      intel/brw: Add a file parameter to idom_tree::dump()
      intel/brw: Switch from LSC CMASK opcodes to regular LOAD/STORE
      intel/brw: Get rid of the lsc_msg_desc_wcmask helper
      intel/brw: Drop misguided sign extension attempts in extract_imm()
      intel/brw: Fix extract_imm for subregion reads of 64-bit immediates

Konrad Dybcio (1):
      freedreno: Add initial A621 support

Konstantin (5):
      util: Handle more formats in get_plane_(width|height)
      vtn: Remove dead shader_call_data from all RT stages
      radv: Handle instruction encodings > 8 bytes when splitting disassembly
      radv: Handle repeated instructions when splitting disassembly
      meson: Allow building lavapipe without specifying llvmpipe

Konstantin Seurer (11):
      llvmpipe: Improve PIPE_QUERY_PIPELINE_STATISTICS accuracy
      lavapipe: Fix box sorting during ray traversal
      aco: print s_delay_alu INSTSKIP>3 correctly
      gallivm: Use variables for loop exec mask handling
      gallivm: Skip inactive branches
      radv: Synchronize shader dumping
      llvmpipe: Use derivative intrinsics
      nir: Introduce nir_debug_info_instr
      spirv: Emit nir_debug_info_instr for OpLine
      nir/print: Add a helper for generating debug info
      nir/opt_loop: Fix handling else-breaks in merge_terminators

Kovac, Krunoslav (4):
      amd/vpelib: DPP starting changes
      amd/vpelib: MPC refactoring HW registers
      amd/vpelib: Refactor MPC registers
      amd/vpelib: Reuse existing float to reg format conversion

Lepton Wu (1):
      egl/android: Fix wrong pipe format for RGB_565

Lin, Ricky (4):
      amd/vpelib: Added JFIF format to RGB output side
      amd/vpelib: Use VPE_IP_LEVEL_1_0 for VPE IP 6.1.3
      amd/vpelib: Remove extra collaborate sync commands in IB
      amd/vpelib: Increase the CD field in vpe descriptor programming

Lionel Landwerlin (57):
      anv: split instance from anv_device.c
      anv: split physical_device from anv_device.c
      anv: split events from anv_device.c
      anv: split buffer from anv_device.c
      anv: split sampler from anv_device.c
      anv: split buffer view from anv_image.c
      anv: split image view from anv_image.c
      isl: account for protection in base usage checks
      anv: properly flag image/imageviews for ISL protection
      anv: propagate protected information for blorp operations
      anv: stop using 3DSTATE_WM::ForceThreadDispatchEnable
      anv: fix check on pipeline mode to track buffer writes
      u_trace: add mako exception printouts
      u_trace: rework tracepoint argument declaration
      u_trace: remove timestamp reference in allocations
      u_trace: add support for indirect data
      anv/hasvk: add indirect tracepoint arguments
      u_trace: add csv output
      util/debug: update parse_enable_string to deal with +all/-all
      anv: better signal new frames to utrace
      vulkan/runtime: allow null/empty debug names
      anv: reuse object string for RMV token
      anv: prevent asserts with debug printf in internal shaders
      anv: remove some unused includes
      anv: reuse cs_prog_data pointer
      intel-clc: missing printf lowering
      anv: add missing MEDIA_STATE_FLUSH for internal shaders
      anv: ensure max_plane_count is at least 1
      genxml: unify some bits between Gfx8/Gfx11/Gfx12.5
      intel/mi_builder: enable control flow API on Gfx9+
      anv/blorp: force CC_VIEWPORT reallocation when programming 3DSTATE_VIEWPORT_STATE_POINTERS_CC
      anv: limit some state dirtying after blorp/simpler-shaders
      brw/rt: fix ray_object_(direction|origin) for closest-hit shaders
      intel/nir: remove load_global_const_block_intel intrinsic
      vulkan/runtime: fix GetBufferMemoryRequirements2 for maintenance4
      anv: fix extended buffer flags usages
      anv: remove unused macro
      anv: only set 3DSTATE_CLIP::MaximumVPIndex once
      anv: add assert to detect problematic instruction merges
      anv: reuse common pipeline state for compute push allocations
      anv: simplify loading driver internal constants
      anv: move lowering of descriptor intrinsics to apply_layout
      nir: remove unused intel intrinsics
      brw: remove unused prog_data field
      anv: optimize CLIP::MaximumVPIndex setting
      anv: move conditional render predicate after gfx_flush_state
      anv: don't miss workaround for indirect draws
      anv: optimize STATE_BYTE_STRIDE emission
      anv: explicitly disable BT pool allocations at device init
      anv: always use workaround_address, not workaround_bo
      anv: order data in wa_bo to leave wa_addr last
      nir/divergence: add missing load_constant_base_ptr
      brw: switch mesh/task URB fence prior to EOT to GPU
      brw: add a comment what Gfx12.5 URB fences
      anv: fix utrace compute timestamp reads on Gfx20
      iris: fix utrace compute end timestamp reads on Gfx20
      brw: align spilling offsets to physical register sizes

Louis-Francis RattÃ©-Boulianne (5):
      gallium: add PIPE_CAP_ASTC_DECODE_MODE and expose extension
      panfrost: add support for ASTC decode mode extension
      pan/bi: implement nir_intrinsic_load_draw_id
      panfrost: use special DrawID register on CSF-based GPUs
      panfrost: properly lower DrawID sysval on v9 GPUs

Lucas Fryzek (10):
      llvmpipe: Implement EGL_ANDROID_native_fence_sync
      lavapipe: Implement VK_KHR_external_*_fd
      venus/ci: Update skip tests to prevent timeouts
      lp: only map dt buffer on import from dmabuf
      egl/surfaceless: Add error checking to create image
      llvmpipe: Add android platform integration
      vulkan/runtime: Use DMA_BUF to import anb
      lavapipe: Add android platform integration
      docs/android: Add llvmpipe instructions
      lavapipe: Add AHB extension

Lucas Stach (8):
      etnaviv: drm: use COARSE clock for BO cache timing
      etnaviv: drm: use COARSE clock for timeouts when possible
      etnaviv: hwdb: add COMPUTE_ONLY cap
      etnaviv: properly set PIPE_CAP_GRAPHICS
      etnaviv: emit SAMPLER_LOG_SIZE on sampler state changes
      etnaviv: wire up missing gl_VertexID bits
      etnaviv: allow shader machine code dumps in release builds
      etnaviv: singlethread shader variant compiles when dumping shaders

M Henning (12):
      nak: Don't mix up two types of barrier
      nak: Rename num_barriers to num_control_barriers
      nouveau/codegen: Switch to derivative intrinsics
      nv50/peephole: merge/split can swap word order
      nv50_ir_from_nir: Use getFile() more often
      nv/codegen: Use nir_lower_mem_access_bit_sizes
      nv/codegen: Limit MemoryOpt to input/output/const
      nv/codegen: Vector load ssbo/global/shared/scratch
      nv/codegen: Vector store ssbo/global/shared/scratc
      nv/codegen: Modify nir pass order
      nv/codegen: Use nir_opt_load_store_vectorize
      nv/codegen: Stop overaligning var_function_temp

Maaz Mombasawala (1):
      svga: Validate surface during copy check

Mahmood - Zer0xFF (1):
      d3d12: Fix Xbox GDK Build

Marek OlÅ¡Ã¡k (31):
      nir/opt_algebraic: use fmulz for fpow lowering to fix incorrect rendering
      nir: add nir_intrinsic_load_per_primitive_input, split from io_semantics flag
      nir/opt_varyings: improve convergent input handling to fix data corruption
      amd: expose nir_io_mix_convergent_flat_with_interpolated
      ac,radeonsi: set 16-bit flags in io_options optimally
      nir/opt_vectorize_io: optionally don't vectorize IO with different types
      ac/surface/gfx12: fix setting tile_swizzle
      radeonsi/gfx12: fix a GPU hang due to an invalid packet with window rectangles
      radeonsi: ensure TC_L2_dirty is set if we don't sync after internal SSBO blits
      radeonsi: don't set TC_L2_dirty in si_query_hw_get_result_resource
      radeonsi: fix buffer coherency issues on gfx6-8,12 due to missing PFP->ME sync
      radeonsi/gfx12: fix register programming to fix GPU hangs
      radeonsi/gfx11: prepare for CWSR
      radeonsi: program OREO_MODE optimally on gfx11.x and gfx12
      radeonsi/gfx12: fix VS output corruption with streamout
      ac/surface/gfx12: turn off HiZ for pre-production samples
      radeonsi: strengthen the condition determining OREO_MODE
      nir: add ACCESS_KEEP_SCALAR, preventing vectorization
      util: move util_lower_clearsize_to_dword here
      radeonsi: reject insert/extract opcodes in si_vectorize_callback
      radeonsi: test more alignment cases in si_test_dma_perf
      radeonsi: add correctness tests for the clear/copy_buffer compute shader
      radeonsi: minor changes at the beginning of si_compute_clear_copy_buffer
      radeonsi: implement optimized unaligned clear/copy_buffer compute shader
      radeonsi: align waves to 256B clear/copy area for the clear/copy_buffer shader
      ac/nir: import the clear/copy_buffer compute shader from radeonsi
      ac/nir: adjust performance-related decisions for clear/copy_buffer shader
      ac/nir: adjust gfx11 tuning for the compute blit
      amd: update addrlib
      ac/nir/tess: don't allocate LDS for HS inputs that are passed via VGPRs
      radeonsi: pass TCS inputs_read mask to LS output lowering on GFX9 + monolithic

Mark Burton (1):
      gallivm: Fix compilation errors when using LLVM 13.

Martin Krastev (9):
      svga/ci: enable vmware farm
      svga/ci: change DNS server for vmware jobs
      svga/ci: triage unexpected piglit pass
      svga/ci: update FORCE_KERNEL_TAG
      svga/ci: triage unexpected piglit passes
      svga/ci: disable vmware-qemu-traces jobs
      svga/ci: disable vmware farm
      svga/ci: enable vmware farm
      svga/ci: triage piglit tessellation failures

Martin Roukala (nÃ© Peres) (2):
      radv/ci: update the flakes lists
      zink/ci: update the flakes list for ga106

Mary Guillemard (30):
      panvk: Update CI fails
      docs: Add panvk in VK_EXT_private_data to features.txt
      panvk: Implement CmdPushDescriptorSetWithTemplate2KHR
      panvk: Fix image support in vertex jobs
      panvk: Emit viewport when state is NULL
      panvk: Implement CmdBindDescriptorSets2KHR, CmdPushConstants2KHR and CmdPushDescriptorSet2KHR
      panfrost: Add B8G8R8A8_SNORM in panfrost_pipe_format
      panvk: Pass attrib_buf_idx_offset to desc_copy_info
      panvk: Fix NULL deref on model name when device isn't supported
      panvk: Skip blend descriptors when no fragment shader is present
      bi: Add bi_foreach_ssa_dest
      bi: Use bi_foreach_src in bi_foreach_ssa_src
      bi: Do not mark tex ops as skip when dest is used by control flow
      bi: Use nir_opt_load_store_vectorize
      bi: Use nir_opt_shrink_stores
      bi: Add loop_header in bi_block
      bi: Rewrite dead code elimination
      panvk/ci: Update G52 fail list to represent current state
      panvk: Properly propagate helper invocations requirement
      panvk: Expose trivial google extensions
      panvk: Fix viewport calculation
      nak: Use F2FP for nir_op_pack_half_2x16_split on SM86+
      panvk: Close batch in CmdBeginRendering if already open
      panvk: Manually copy dynamic state in meta_gfx
      panvk: Simplify meta ctx save/restore
      panvk: Save and restore vertex buffer in gfx_meta
      panvk: Remove unused vk_vertex_input_state in graphics_save_ctx
      panvk: Extend the descriptor lowering pass to support Valhall
      panvk: Extend the shader logic to support Valhall
      nak: Fix wrong encoding for F2FP cbuf and immediate forms

Matt Turner (9):
      intel/clc: Free parsed_spirv_data
      intel/clc: Free disk_cache
      intel/brw: Use REG_CLASS_COUNT
      intel/elk: Use REG_CLASS_COUNT
      docs: Drop references to LIBGL_DRIVERS_PATH
      util: Add ATTRIBUTE_OPTIMIZE(flags)
      util: Force emission of stack frame in stack unit test
      nir: Skip opt_if_merge when next_if has block ending in a jump
      nir/tests: Add tests for opt_if_merge

Mauro Rossi (1):
      nvk: Fix regression observed on Kepler

MaÃ­ra Canal (1):
      v3d, vc4: remove unused functions

Michael Catanzaro (1):
      Disk cache should consistently create parent directories when needed

Michael Cheng (2):
      anv: Remove extra hdc_flush from Perfetto
      anv: move trace logic to batch_emit_pipe_control_write

Mike Blumenkrantz (301):
      zink: move some flags from driver_workarounds to separate struct
      zink: hash in some driver workaround flags to shader cache
      zink: add lavapipe to can_do_invalid_linear_modifier list
      zink: use local screen variable in zink_prep_fb_attachment
      zink: use GENERAL layout for depth attachments on some drivers
      zink: use blake3 instead of sha1 for program cache
      gallium: install gallium-$version.so to libdir
      ci: prune dri from LD_LIBRARY_PATH
      dril: rework config creation
      llvmpipe: handle vma allocation failure
      llvmpipe: only use vma allocations on linux
      glx: delete tests
      st/interop: return unsupported without screen hooks
      dri: fix kmsro define
      glx: tabs -> spaces
      glx: delete __GLXDRIdisplay
      glx: simplify zink init variables
      glx: rework __glXInitialize
      glx: delete dri3_display::loader_extensions
      glx: move has_multibuffer to base glx_screen struct
      glx: move driwindows_display::event_base to driwindows_context
      glx: rework/simplify drisw zink handling
      glx: move dri2Hash to base glx_display
      glx: tweak dri2 init ordering
      glx: move dri2 init checks to separate function
      glx: move dri2 loader extensions to static vtable
      glx: delete all driver-specific display handling
      glx: use base screen has_multibuffer for drisw
      glx: move drisw dri3 handling for zink out to glxInitialize
      glx: consolidate some LIBGL_KOPPER_DISABLE checks
      glx: unhackify inferring zink from dri3
      Revert "vl/dri3: use loader's dri3 init code and delete everything else"
      loader: move some common dri3 functions out of dri3 loader
      meson: move glx subdir after gallium build
      loader: split out dri3 into subdir
      dri: declare IMAGE_DRIVER symbols PUBLIC
      glx: inline IMAGE_DRIVER functions
      dri: declare DRI_CORE functions public
      loader/dri3: inline DRI_CORE
      glx: inline DRI_CORE functions
      glx: inline createNewScreen3
      glx: delete __DRImesaCoreExtension usage
      glx: inline DRI_SWRAST
      dri: delete __DRImesaCoreExtensionRec::createNewScreen
      glx: inline DRI_DRI2
      dri: delete driCreateNewScreen2
      dri: declare DRI_KOPPER as PUBLIC
      glx: use local var for LIBGL_KOPPER_DISABLE check
      glx: switch kopper check for setting up swapinterval/bufferage functions
      glx: delete DRI_KOPPER
      glx: rename driswCopySubBuffer
      drisw: declare DRI_COPY_SUB_BUFFER as PUBLIC
      glx: inline DRI_COPY_SUB_BUFFER
      dri: delete __DRI_COPY_SUB_BUFFER
      glx: delete releaseTexBuffer
      glx: delete the only users of __DRItexBufferExtension::setTexBuffer
      dri: delete __DRItexBufferExtension::setTexBuffer
      dri: declare DRI_TEX_BUFFER functions public
      glx: delete check for texbuffer extension
      glx: inline DRI_TEX_BUFFER
      loader/dri3: delete texBuffer struct member
      glx: delete DRI_TEX_BUFFER handling
      kopper: increment lastStamp during invalidate
      dri: add kopper stubs to avoid build failures
      dri: make DRI2_RENDERER_QUERY interface PUBLIC
      glx: inline __DRI2_RENDERER_QUERY
      dri: delete __DRI2_RENDERER_QUERY interface
      glx: always expose GLX_ARB_context_flush_control
      dri: make DRI_FLUSH public
      kopper: reuse dri2 invalidate
      loader/dri3: inline DRI2_FLUSH
      glx: inline DRI2_FLUSH
      loader/dri3: delete DRI2_FLUSH remnants
      dri: unify DRI2_CONFIG_QUERY interfaces
      dri: make DRI2_CONFIG_QUERY public
      dri: move swapinterval functions from loader to dri frontend
      dri: remove __DRI2configQueryExtension param from swapinterval functions
      glx: inline DRI2_CONFIG_QUERY
      loader/dri3: delete DRI2_CONFIG_QUERY remnants
      dri: make DRI2_THROTTLE public
      glx: inline DRI2_THROTTLE
      dri: delete DRI2_THROTTLE interface
      dri: make DRI_INTEROP public
      glx: inline DRI_INTEROP
      glx: delete checks for interop support
      glx: delete more DRI_INTEROP checks
      glx: call dri interop functions directly
      glx: stop binding DRI_INTEROP
      glx: expose GLX_MESA_gl_interop for drisw
      glx: simplify DRI_IMAGE checks
      dri: make DRI_IMAGE public
      gallium: move loader_dri_create_image to dri frontend
      dri: use image loader function directly in dri_create_image_with_modifiers
      loader/dri3: inline DRI_IMAGE usage
      loader/dri: delete DRI_IMAGE remnants
      glx: delete DRI_IMAGE remnants
      loader/dri3: delete loader_dri3_extensions
      glx: move up glx_driver enum declaration
      glx: include src/gallium for apple
      dri: link with libloader
      dri: only link_whole once
      kopper: check swapchain size after possible loader image resize
      egl/dri2: delete unused function
      egl: inline DRI_CORE usage
      gbm: inline DRI_CORE usage
      egl/gbm: delete remnants of DRI_CORE
      dri: publicize dri_query_compatible_render_only_device_fd
      gbm: inline DRI_MESA
      egl: inline DRI_MESA
      gbm: delete DRI_MESA remnants
      egl: delete DRI_MESA remnants
      egl: inline DRI_KOPPER
      egl/gbm: remove DRI_KOPPER remnants
      dri: make driSWRastQueryBufferAge public
      egl: inline DRI_SWRAST
      egl/gbm: rip out DRI_SWRAST
      egl: collapse driCreateNewDrawable conditional
      egl: simplify a non-swrast conditional
      egl/drm: always expose EXT_buffer_age
      gbm: inline DRI_IMAGE_DRIVER
      egl/gbm: delete DRI_IMAGE_DRIVER remnants
      dri: store dmabuf import caps to dri_screen on create
      dri: check for dmabuf_import at top of dri2_from_dma_bufs
      gbm: inline dri2_from_dma_bufs and delete now-redundant check in dmabuf import
      egl: simplify MESA_drm_image enablement
      dri: make a few more functions public
      egl: inline simple DRI_IMAGE usage
      gbm: inline simple DRI_IMAGE usage
      egl: swap DRI_IMAGE checks for dmabuf/modifier support for driver check
      egl/android: check PIPE_CAP_NATIVE_FENCE_FD directly
      egl/wayland: delete check for DRI_IMAGE blitImage in drm init
      egl: inline DRI_IMAGE compression modifier handling
      egl: replace display_name checks with swrast checks
      egl: always check dri caps for EGL_WL_bind_wayland_display support
      gbm: check for dmabuf import on device creation
      gbm: use new dmabuf import flag to replace DRI_IMAGE checks
      gbm: always pass through images to unmap
      gbm: check for compression modifiers on device create
      gbm: use driver check for dmabuf export
      gbm: delete DRI_IMAGE remnants
      egl: move some extension enablement out DRI_IMAGE conditional
      egl: delete last DRI_IMAGE check
      egl: delete DRI_IMAGE remnants
      egl: delete local_buffers
      egl/x11: replace DRI_DRI2 check with fd check
      egl: delete DRI_DRI2 remnants
      gallium: make some sw screen create functions public
      pipe-loader: fix driconf memory management
      egl: inline CONFIG_OPTIONS usage
      egl: delete DRI_CONFIG_OPTIONS remnants
      egl: further simplify driver loading
      egl: add a bool to indicate swrast but not kms_swrast
      gbm: inline DRI_FLUSH
      gbm: delete DRI_FLUSH remnants
      egl: use a non-kms_swrast check for swapbuffers DRI2_FLUSH
      egl: use a swrast check for a swapbuffers DRI2_FLUSH case
      egl: delete a DRI2_FLUSH check in dri2 swapbuffers
      egl: replace another DRI2_FLUSH check with non-kms_swrast check in dri2_wait_client
      egl: inline DRI2_FLUSH usage
      egl: replace another DRI2_FLUSH check with a non-kms_swrast check in surface query
      egl: replace a DRI2_FLUSH check with swrast check in x11_copy_buffers
      egl/drm: replace a DRI2_FLUSH check with a non-kms_swarst check
      egl/wayland: replace a couple DRI2_FLUSH checks with non-kms_swrast checks
      egl: delete DRI2_FLUSH remnants
      dri: only add DRI_BUFFER_DAMAGE if the driver supports set_damage_region
      egl: simplify DRI_BUFFER_DAMAGE checks
      dri: make set_damage_region public
      egl: add a util to get the pipe_screen
      egl: use pipe_screen check for damage region, simplify buffer_damage checks
      egl: inline DRI_BUFFER_DAMAGE
      egl: delete DRI_BUFFER_DAMAGE remnants
      egl: always advertise KHR_context_flush_control
      egl: delete DRI_FLUSH_CONTROL remnants
      egl: inline DRI2_CONFIG_QUERY
      egl: delete DRI_CONFIG_QUERY remnants
      egl: inline DRI_TEX_BUFFER
      egl: delete DRI_TEX_BUFFER remnants
      dri: make DRI2_FENCE public
      egl: delete checks for DRI2_FENCE
      egl: simplify native fence check
      egl: don't check for create_fence_fd method when importing a fence
      egl: inline DRI2_FENCE
      egl: delete DRI2_FENCE remnants
      egl: always advertise MESA_gl_interop, inline calls
      egl: delete DRI2_INTEROP remnants
      dri: make DRI2_BLOB public
      egl: inline DRI2_BLOB
      egl: delete DRI2_BLOB remnants
      egl/android: replace DRI_MUTABLE_RENDER_BUFFER_DRIVER check with non-kms_swrast check
      egl: delete DRI_MUTABLE_RENDER_BUFFER_DRIVER remnants
      egl: move multibuffers check into platform_x11
      egl: simplify multibuffers check
      dril: always take the egl init path
      llvmpipe: init fd=-1 to avoid closing fd=0 on failure
      egl: fix zink init
      glx: replace a straggler DRI_CONFIG_OPTIONS usage
      dri: delete unused DRI_MESA queryCompatibleRenderOnlyDeviceFd method
      dri: delete __DRIdri2Extension interface
      dri: delete a couple unused functions
      dri: delete some dri_screen cruft
      dri: consolidate a bunch of dri_screen init code
      dri: delete all the extra dri2 extension handling
      egl/dri: move some screen accessors back to dri frontend
      glx: stop checking dri extensions
      glx: deduplicate and move driverName to base glx_screen struct
      glx: store the DRIscreen to the base glx_screen
      glx: set drisw glx_driver more usefully
      glx: use glx_driver to determine drisw extension enablement
      glx: add a glx_screen member to indicate GLX_EXT_texture_from_pixmap
      glx: unify extension binding
      dri: delete dri_screen::extensions accessor
      dri: delete dri_screen::extensions
      dri: fix kms_swrast screen fail
      dri: delete more dead code
      dri: pass through a type enum for creating screen instead of driver_extensions
      kopper: inline DRI_IMAGE usage
      egl: stop loading driver extensions
      glx: stop loading driver extensions
      gbm: stop loading driver extensions
      dri: massively prune the dri target
      dri: delete a bunch of unused interfaces
      egl/wayland: bail on zink init in non-sw mode if extension check fails
      egl: fix fd passing on init with zink
      zink: fix partial update handling
      egl: make dmabuf/modifier display bools a bit more precise/intelligible
      egl/glx: make detecting explicit modifier support more explicit
      dri: set __DRI_IMAGE_ERROR_BAD_PARAMETER if driver doesn't support dmabuf import
      egl: initialize dri error code variables
      kopper: reuse drisw_update_tex_buffer to delete some code
      dri: merge in loader_dri3
      kopper: reuse dri3 functions
      dri: rename and move handle_in_fence to dri_helpers
      kopper: reuse dri_image_fence_sync
      dri: break out get_pixmap_buffer
      kopper: reuse loader_dri3_get_pixmap_buffer
      glx: always set swapInterval in drisw
      egl: check x11 multibuffer support before screen create
      dri: pass has_multibuffers through from the loader
      dri: further collapse dri_screen creation
      dri: guard dmabuf support by loader's dmabuf support
      dri: collapse some modifier/dmabuf checks
      kopper: call kopper_create_drawable directly
      kopper: delete some redundant code
      dri: rework drawable creation
      glx: simplify kopper_get_buffer_age
      glx: flatten out getBufferAge a bit
      glx: move/add __DRIdrawable struct to __GLXDRIdrawable
      glx: use __GLXDRIdrawable more broadly instead of display type drawables
      glx: unify dri bind_context
      glx: unify dri unbind context
      glx: unify dri destroy context
      glx: tweak some drisw context create code
      glx: tweak some dri3 context create code
      glx: unify dri create_context_attribs
      glx: unify renderer query hooks
      glx/dri2: strdup driver name
      glx/dri3: strdup existing driverName instead of fetching it again
      glx: unify dri get_driver_name
      glx: unify dri screen vtable
      glx: unify bind_tex_image
      glx: delete private DRIscreen pointers
      glx: move driver_configs to base glx_screen
      glx: rework screen destroy
      glx: move base screen destroy to glx_screen_cleanup
      glx/dri3: delete driScreenRenderGPU
      glx: unify more extension setup
      glx: determine is_direct_capable from driver type
      glx: inline __GLXDRIscreen onto base glx_screen
      glx: unify dri screen init
      zink: bail on choose_pdev immediately if no devices are available
      st/pbo: reject vs/fs pbo ops if rowstride < width
      device_select: reorder CreateInstance to have shorter failure paths
      device_select: shortcut EnumeratePhysicalDevice* for count-only calls
      device_select: disable reordering with zink on xwayland
      zink: delete hackaround for disabling wsi extensions
      egl: add DRI_USE_INVALIDATE with non-sw kopper
      egl: really fix kopper fd passing
      egl/wayland: split out dmabuf extension stuff for kopper
      egl: pass real value for software to dri2_setup_device()
      egl/wayland: do display gpu fd dance for non-sw zink init
      zink: don't skip cbuf store ops if resolve is set
      tc: set resolve on renderpass info if blit terminates the renderpass
      egl/android: call dri2_display_create() like every other driver
      lavapipe: VK_EXT_pipeline_robustness
      device-select: block xserver+zink reordering via xcb
      ci: add a660 flake
      dril: add zink stub
      egl: unify LIBGL_KOPPER_DRI2 checks
      egl/x11: pretend kopper is software with LIBGL_KOPPER_DRI2
      llvmpipe: export dmabuf caps for kms_swrast
      zink: update profile with missing extensions
      revert part of 94e470a32d214052d89f519a07566d8098d05d28
      egl: use more precise conditional for passing fd through to dri screen create
      dril: use the super fallback path for software fallback
      vk: rename DGC feature to DGC-NV
      zink: create a surface for resolve resources
      zink: use tc renderpass optimizing to inline resolves with dynamic render
      tc: break out blit enqueue to separate function
      tc: optimize out tracked winsys resolves
      dril: also create double-buffered configs in swrast fallback
      meson: delete dri3 build option

Mike Lothian (1):
      Revert "device_select: shortcut EnumeratePhysicalDevice* for count-only calls"

Nanley Chery (27):
      anv: Drop flush from unused depth workaround
      intel/blorp: Use WA helpers for depth pipecontrol
      anv,iris: Use WriteImmediate instead of Z flush for WA
      anv: Batch MCS and CCS aux-op flushes
      anv: Add want_hiz_wt_for_image()
      iris: Add and use want_hiz_wt_for_res
      intel: Enable more LOD0 HIZ+CCS fast clears
      intel/blorp: Allow LOD0 fast-clears with HiZ WT
      intel: Adjust partial depth fast clear checks
      intel: Use a simpler workaround for HiZ WT fast-clears
      iris: Invalidate state cache for some depth fast clears
      intel: Add and use isl_get_sampler_clear_field_offset
      intel/blorp: Simplify depth clear value updates
      iris: Move a HIZ_CCS_WT fast-clear flush higher up
      intel: Move depth clear value writes to drivers
      intel/isl: Fix packing of SINT formats
      intel: Don't use HW clear color conversion on gfx11
      intel/blorp: Don't use clear color conversion on gfx12
      anv,iris: Skip tex invalidate for clear conversion
      anv,hasvk: Add and use set_image_clear_color()
      anv,hasvk: Always use BLORP_BATCH_NO_UPDATE_CLEAR_COLOR
      iris: Always use BLORP_BATCH_NO_UPDATE_CLEAR_COLOR
      iris: Skip some fast-clears even on color changes
      intel: Drop BLORP_BATCH_NO_UPDATE_CLEAR_COLOR
      anv: Pass the VkClearDepthStencilValue for clears
      anv: Add and use anv_image_hiz_clear_value()
      intel: Support any depth fast-clear value on Xe2

Neha Bhende (1):
      dri: fix macro name check to detect svga driver

Patel, Utpal (2):
      amd/vpelib: Add input pixel format support
      amd/vpelib: Add resource function hooks for checking support

Patrick Lerda (1):
      iris: fix indirect draw refcnt imbalance

Paulo Zanoni (13):
      intel/genxml: add the BLT and COMP_CTX0 versions of the TR-TT registers
      anv/trtt: make genX(init_trtt_context_state) a little more compact
      anv/trtt: check the return value of anv_trtt_init_context_state()
      anv/trtt: submit a separate batch in anv_trtt_init_context_state()
      anv/trtt: make all contexts have the same TR-TT programming
      anv/trtt: fix the process of picking device->trtt.queue
      anv/trtt: don't just crash when we can't find device->trtt.queue
      anv/xe: try harder when the vm_bind ioctl fails
      anv: don't expose the compressed memory types when DEBUG_NO_CCS
      anv: disable CCS for Source2 games on Xe2
      intel: fix compute SLM sizes on Xe2 and newer
      anv: be consistent regarding non-render engines on i915.ko
      isl: don't assert(num_elements > (1ull << 27))

Pavel OndraÄka (5):
      r300: bias presubtract fix
      ttn: switch to derivative intrinsics
      r300: fix RGB10_A2 CONSTANT_COLOR blending
      mesa: implement GL_FRAMEBUFFER_BLEND query
      r300/ci: add more flakes

Pierre-Eric Pelloux-Prayer (6):
      amd: use a valid size for ac_pm4_state allocation
      radeonsi: reject modifiers with DCC when NO_EXPORTED_DCC is used
      radeonsi: consider PIPE_BIND_LINEAR when filtering modifiers
      radeonsi: consider DBG(NO_TILING) when filtering modifiers
      egl,gbm,glx: fix log message spam
      radeonsi: don't always update shader coherency draw call counter

Qiang Yu (29):
      radeonsi: lower subgroup ops after wave size is known
      ac/llvm: build wqm for quad intrinsics only when fragment shader
      ac,radv,radeonsi: stop using quad vote any/all when llvm
      gallium: add caps for KHR_shader_subgroup
      mesa: add KHR_shader_subgroup extension
      mesa: implement KHR_shader_subgroup Get* values
      mesa: add spirv GroupNonUniform* capbilities support
      glsl: add KHR_shader_subgroup extensions
      glsl: add builtin variables for KHR_shader_subgroup
      glsl: remove unused builtin function macros
      glsl: use generic convertion code for some intrinsics
      glsl: add KHR_shader_subgroup_basic builtin functions
      glsl: prepare vote function args for subgroup usage
      glsl: add KHR_shader_subgroup_vote builtin functions
      glsl: prepare ballot function args for subgroup usage
      glsl: add KHR_shader_subgroup_ballot builtin functions
      glsl: add KHR_shader_subgroup_shuffle builtin functions
      glsl: add KHR_shader_subgroup_shuffle_relative builtin functions
      glsl: add KHR_shader_subgroup_arithmetic builtin functions
      glsl: add KHR_shader_subgroup_clustered builtin functions
      glsl: add KHR_shader_subgroup_quad builtin functions
      glsl: remove unused fields in gl_shader
      glsl: set shader_info.subgroup_size for KHR_shader_subgroup
      radeonsi: remove NULL check in si_determine_wave_size
      radeonsi: consider both stages to determine merged shader wave_size
      radeonsi: use wave64 for KHR_shader_subgroup enabled shader
      radeonsi: enable KHR_shader_subgroup
      nir: add skip_lower_packing_ops shader compile option
      ac: do not lower some ops in nir_lower_packing

Rebecca Mckeever (1):
      panvk: Move the VkEvent logic to the jm folder and make it per-arch

Renato Pereyra (1):
      egl: Refactor init of CPU tracing in EGL for Android

Rhys Perry (38):
      nir/instr_set: combine XXH32 calls
      nir/instr_set: stop sorting phi sources
      nir/instr_set: hash tex sources commutatively
      aco/gfx11.5: workaround export priority issue
      aco: add tests for export priority issue
      aco/gfx11.5: skip dealloc_vgprs for stages with exports
      aco: add export instructions to should_form_clause
      aco: form export clauses
      aco: move s_setprio to before NGG exec initialization
      aco: consider exec empty after divergent continue then divergent break
      aco: add struct and helpers for exec potentially empty
      aco: combine DPP into v_cvt_f16_f32
      aco: fix validation of v_s_ opcodes
      aco: don't transform v_interp_p2_f32 with constant into fma
      docs: update ACO_DEBUG documentation for scheduler options
      docs: update ACO_DEBUG documentation for perfwarn
      nir/opt_uniform_atomics: require block index metadata
      aco: split selection_control_remove into rarely_taken and never_taken
      aco: only remove branch jumping over SMEM/barrier if it's never taken
      aco: completely skip branches if they're never taken
      aco: set prefer_remove for gfx9- too
      aco: calculate indices from dominance tree
      aco: use dominance helpers
      aco: preserve SSA in try_eliminate_scc_copy
      aco: validate temporary reachability
      aco: split insert_wait_states into two
      aco: move insert_delay_alu to after insert_NOPs
      aco: forget valu delays after certain s_waitcnt_depctr/LDSDIR
      aco: ignore exec and literals when mitigating VALUMaskWriteHazard
      aco: also consider VALU reads for VALUMaskWriteHazard
      aco: don't consider sa_sdst=0 before SALU write to fix VALUMaskWriteHazard
      aco: check SALU writing lanemask later for VALUMaskWriteHazard
      aco: preserve bitsets after a lane mask is written
      aco/tests: add more VALUMaskWriteHazard tests
      aco/ra: fix sub-dword get_reg_specified in some cases
      aco/ra: use DefInfo for get_reg_specified
      aco: have get_subdword_definition_info update DefInfo
      aco: fix printing of d16 MIMG dmask

Rob Clark (31):
      freedreno/a6xx: Implement reg stomper support
      freedreno/a7xx: Fix GRAS_UNKNOWN_80F4 writes
      freedreno/cffdec: Fix a7xx CP_EVENT_WRITE decoding
      tu/drm/virtio: Add missing a7xx case
      freedreno/drm: Handle a7xx case
      freedreno: Move GENX/CALLX magic to common
      freedreno: Extract out common UBWC helper
      freedreno: Extract out shared LRZFC layout helpers
      freedreno/a6xx: Allocate lrcfc when needed for direction tracking
      freedreno/a6xx: Refactor CP_EVENT_WRITE emit
      freedreno/a6xx: Rework CCU_CNTL emit for a7xx
      freedreno/a6xx: Initial a7xx support
      tu: Fix issues with 16k (or larger) page sizes
      freedreno/drm/virtio: Fix issues with 16k (or larger) page sizes
      tu: Random non-consequential fixes
      subprojects: perfetto uprev to v47.0
      egl: Fix surfaceless + modifiers
      gallium: Add option to not add version to libgallium filename
      freedreno/computerator: Use CHIP variant reg builders
      tu: Add helper to calculate layer address
      tu: Use CHIP variant reg builders
      freedreno/registers: Deprecate non-variant reg builders
      tu: Quiet vla warnings
      freedreno/a6xx: Fix arb_texture_view regression
      freedreno/decode: Dump register values on LRZ_CLEAR
      freedreno/a6xx: Fix LRZ
      freedreno: Re-enable LRZ for a7xx
      freedreno/a6xx: Cleanup setup_slices()
      nir/opt_loop: Don't peel initial break if loop ends in break
      freedreno/a6xx: Sysmem clear fixes
      freedreno/drm: Fix ring_heap flags

Robert Mader (4):
      egl: Stop requiring texture_3D_image for EGL 1.5
      perfetto: Add Panfrost data sources to system.cfg
      egl: Add more errors cases during context creation
      egl: Stop requiring EXT_create_context_robustness for EGL 1.5

Rohan Garg (10):
      anv: use the WA infrastructure when emitting WA 16013994831
      anv: program a custom byte stride on Xe2 for indirect draws
      anv,iris: prefix the argument format with XI for a upcoming refactor
      anv: refactor indirect draw support into it's own function
      anv: dispatch indirect draws with a count buffer through the XI hardware on ARL+
      anv: migrate indirect mesh draws to indirect draws on ARL+
      vtn: handle SpvOpExtInstWithForwardRefsKHR for non semantic instructions
      anv: enable KHR_shader_relaxed_extended_instruction
      anv: prefetch samplers when dispatching compute shaders
      iris,anv: simplify and inline sampler count calculations

Rohit Athavale (1):
      d3d12: Fix typo in copyright comments

Roland Scheidegger (1):
      llvmpipe: Fix type mismatch when storing residency info

Romaric Jodin (1):
      perfetto: fix perfetto counter following perfetto v46.0

Ruijing Dong (8):
      radeonsi/vcn: correct a typo in a variable
      radeonsi/vcn: add new function for obu_header
      frontends/va: check av1 enc hdr metadata
      radeonsi/vcn: input av1 hdr metadata
      frontends/va: rework VAConfigAttribEncPackedHeaders query
      radeonsi/vcn: add HDR metadata obu in av1enc
      frontends/va: reset roi number
      radeonsi/vcn: qp map IB package sent by default

Sagar Ghuge (5):
      intel/compiler: Ray query requires write-back register
      intel/compiler: Adjust trace ray control field on Xe2
      intel/compiler: Fix indirect offset in GS input read for Xe2+
      anv: Reduce clear color state alignment to 64B
      iris: Reduce clear color state alignment to 64B

Sai Teja (2):
      ci: Don't run vulkan jobs for gbm changes
      ci: Disable angle jobs for GL changes

Sai Teja Pottumuttu (2):
      docs: Add required dependencies to meson.rst
      docs: Match README installation guide with meson.rst

Samuel Pitoiset (86):
      radv: stop re-initializing HTILE for non-compressed to compressed transitions
      amd/drm-shim: add missing GC_11_5_0 family
      amd/drm-shim: add GFX1150 support
      ci: add GFX1150 support to radv-fossils
      radv: fix handling view index from device index
      radv: cleanup robustness with vk_pipeline_robustness_state_fill()
      radv: add a helper to set shader stage key robustness info
      radv: add support for dynamic vertex input state with DGC
      radv: allow VK_EXT_vertex_input_dynamic_state with DGC
      radv/meta: simplify radv_meta_blit2d_normal_dst()
      radv/meta: rework creating blit pipelines
      radv/meta: simplify initializing DCC comp-to-single pipelines
      radv/meta: remove unused parameter from some blit init functions
      radv/meta: create blit2d layouts on-demand
      radv/meta: create itob layouts on-demand
      radv/meta: create btoi layouts on-demand
      radv/meta: create itoi layouts on-demand
      radv/meta: create cleari layouts on-demand
      radv/meta: simplify initializing bufimage pipelines
      radv/meta: create DGC prepare pipeline on-demand
      aco: fix bogus assert in RT prolog on GFX11+
      radv: add a small helper to determine the index type with DGC
      radv: pass a dgc_cmdbuf parameter to more dgc helpers
      radv: refactor the DGC helpers to determine cmdbuf size
      radv: add a small comment describing the DGC implementation
      radv/winsys: pad gfx and compute IBs with only one NOP
      radv: pad GFX preambles IBs with only one NOP
      radv: use a sized NOP packet for the DGC preamble
      radv/amdgpu: fix CS padding for non-GFX/COMPUTE queues
      radv: remove redundant PA_SU_PRIM_FILTER_CNTL in the GFX preamble
      radv: stop emitting DB_RENDER_OVERRIDE in the GFX preamble
      radv: stop emitting PA_SC_CLIPRECT_RULE in the GFX preamble
      radv: stop emitting DB_COUNT_CONTROL in the GFX preamble
      vk/render_pass: add Mesa-specific flag for dynamic rendering
      radv: use the Mesa-specifc dynamic rendering flag for meta operations
      radv: add radv_shader_info::ps::uses_fbfetch_output
      radv: add support for input attachment indices with DRLR
      radv: fix DRLR with subpass input attachments and feedback loops
      radv/amdgpu: do not check that a CS is aligned if no padding is added
      radv/amdgpu: assert that the DGC IB VA is correctly aligned
      radv: optimize NOPs padding with DGC
      radv/ci: update flakes lists for NAVI21/VANGOGH
      radv/ci: enable RADV_PERFTEST=transfer_queue on GFX9+
      radv: remove RADV_DEBUG=nogsfastlaunch2
      radv: rework computing the DGC cmdbuf layout
      ac: add ac_gfx103_get_cu_mask_ps()
      ac,radeonsi,radv: add common GFX preambles
      radv: prepare for specialized DGC shaders
      radv: add a pointer to the DGC layout in dgc_cmdbuf
      radv: specialize dispatch DGC token
      radv: specialize draw DGC token
      radv: specialize index buffer DGC token
      radv: specialize pipeline DGC token
      radv: specialize VBO DGC token
      radv: simplify allocating push constants with DGC
      radv: specialize push constant DGC token
      radv: specialize indirect command layout stride for DGC
      radv: remove useless check about non-indexed draws and DGC
      radv: move emitting the compute pipeline with DGC
      radv: stop passing the upload offset to dgc_emit_bind_pipeline()
      radv: add a helper to store data to the DGC upload space
      radv: move emitting VBOs with DGC
      radv: specialize push constant stages with DGC
      radv: allow VK_EXT_legacy_vertex_attributes with DGC
      radv: fix emitting DGC indirect draws with drawid/base_instance
      radv: return early when the vertex input state is dynamic
      radv: only initialize per-attribute vertex input state when needed
      radv: add radv_vs_input_state::attrib_index_offset
      radv: bind the static vertex input state from the pipeline
      radv: rename radv_vs_input_state to radv_vertex_input_state
      radv: pass the vertex shader to radv_write_vertex_descriptors()
      radv: pass more VBO info as parameters to the DGC prepare shader
      radv: stop storing DGC info as part of the VBO descriptors
      radv: specialize dispatch initiator for compute/task shaders with DGC
      radv: store the indirect compute pipeline VA to dgc_cmdbuf
      radv: use compute pipeline metadata for non-indirect DGC pipelines
      radv: fix missing attribute offset with dynamic VS inputs and DGC
      radv: specialize one more VBO parameter with DGC
      radv: pass use_per_attribute_vb_descs in radv_dgc_params
      radv: add a helper to write a single vertex descriptor with DGC
      radv: add a helper to get VBO info for emitting descriptors
      radv: compute rsrc3 for VBO descriptors in NIR for DGC
      radv: use radv_vbo_info for emitting descriptors with DGC
      radv: emit all VBO descriptors in the prepare DGC shader
      radv: pass vb_desc_usage_mask in radv_dgc_params
      radv: stop relying on the VS for emitting VBO descriptors in DGC

Scott Moreau (2):
      egl: small refactor to avoid code duplication
      egl: hook up swap interval bits when using zink on wayland

Sergi Blanch Torne (9):
      ci: disable Collabora's farm due to maintenance
      Revert "ci: disable Collabora's farm due to maintenance"
      ci: disable Collabora's farm due to maintenance
      Revert "ci: disable Collabora's farm due to maintenance"
      New DUT for Alder Lake
      New testing jobs anv-adl{,-full}
      New testing jobs anv-adl-angle{,-full}
      New testing jobs intel-adl-skqp
      New testing jobs zink-anv-adl{,-full}

Shih, Jude (1):
      amd/vpelib: Update Plane Descriptor Writer

Sil Vilerino (25):
      Revert "d3d12: Video Encode - Remove PIPE_VIDEO_PROFILE_MPEG4_AVC_BASELINE as not supported" This reverts commit d6bb4ddc638f3ee37fbbe066c631dad80aaeb2d3. Fixes: d6bb4ddc638 ("d3d12: Video Encode - Remove PIPE_VIDEO_PROFILE_MPEG4_AVC_BASELINE as not supported")
      pipe: Add PIPE_BIND_VIDEO_DECODE_DPB/PIPE_BIND_VIDEO_ENCODE_DPB
      d3d12: Implement pipe_video_codec.create_dpb_buffer for AOT resources
      d3d12: Allow passing custom pipe_resource creation template/placed resource to d3d12_video_buffer_create_impl
      d3d12: Implement pipe_video_codec.create_dpb_buffer for texture array resources
      frontend/va: VaSyncSurface encoder check for surface feedback
      d3d12: Implement get_feedback_fence
      d3d12: Video Encode H264 to use direct DPB from frontend
      d3d12: Video Encode H264 - Support direct mmco operations
      d3d12: Video Encode HEVC to use direct DPB from frontend
      d3d12: Video Encode HEVC - Use VPS information from frontend, specifically for vps_max_dec_pic_buffering_minus1
      d3d12: Rename d3d12_video_encoder_config_dirty_flag_sequence_info to d3d12_video_encoder_config_dirty_flag_sequence_header
      pipe: Add pipe_h264_enc_pic_control.temporal_id
      d3d12: H264, HEVC, AV1 Store multiple rate control states for multiple temporal layers
      vl/vl_win32_screen_create_from_d3d12_device: Allow winsys to be injected
      vl/null_sw_winsys: Add extern declaration for C++ usage
      d3d12: Remove usage of WindowFromDC when building without d3d12 graphics
      d3d12: Video Encode HEVC - Store L0/L1 active nums at time to encode them in the headers
      d3d12: Video Encode H264 - Store L0/L1 active nums at time to encode them in the headers
      d3d12: Video Encode H264 - Workaround for D3D12 validation bug requiring pRefPicMarkingOperationsCommands for IDR frames
      pipe: Add PIPE_H26X_MAX_REFERENCES
      d3d12: Remove max_references usage from frontend to reserve barriers array
      d3d12: Fix d3d12_video_encoder_get_current_max_dpb_capacity to report actual max slots number in DPB
      d3d12: Use d3d12_video_encoder_get_current_max_dpb_capacity in tex array pool instead of separate constant
      d3d12: Use pipe_h264_enc_seq_param.max_num_ref_frames instead of pipe_video_codec.max_references in SPS

Surafel Assefa (1):
      vulkan: MESA_VK_ENABLE_SUBMIT_THREAD=0 disables threaded submit

Sushma Venkatesh Reddy (4):
      intel/clflush: Utilize clflushopt in intel_invalidate_range
      intel/brw: Fix DEBUG_OPTIMIZER
      intel/brw: Move get_nir_def() higher to avoid UNDEF
      intel/brw: Handle 16-bit sampler return payloads

Sviatoslav Peleshko (4):
      anv: Assert ray query BO actually exists
      brw,elk: Fix opening flags on dumping shader binaries
      anv: Release correct BO in anv_cmd_buffer_set_ray_query_buffer
      anv: Add full subgroups WA for the shaders with barriers in Breaking Limit

Tapani PÃ¤lli (16):
      intel/dev: update mesa_defs.json from workaround database
      blorp: support new flag for setting cps dependency
      anv: fix a cmd_buffer reference in simple shader
      anv: refactor cmd_buffer_flush_gfx_runtime_state for dirty state
      anv: implement workaround for Wa_18038825448
      intel/dev: update mesa_defs.json from workaround database
      gbm: depend on libdrm indepedent of dri2 setting
      anv: move setting 3DSTATE_CLIP::MaximumVPIndex from loop
      anv: check if RT writes are happening for HasWriteableRT
      anv: set correct miplevel for anv_image_hiz_op
      anv: change existing ICL workaround to depend on BLEND_STATE
      iris: use correct enum for aux state on depth fast clear
      mesa: check for ARB_ES3_compatibility in format checks
      anv: initialize pixel struct to zero when setting clear color
      iris: initialize pixel struct to zero when setting clear color
      glsl: set a version to standalone compiler context

Tatsuyuki Ishi (1):
      util/u_queue: Replace relative time wait hack with u_cnd_monotonic

Thomas H.P. Andersen (4):
      nvk: EXT_post_depth_coverage
      nak: special case PhiDsts as not uniform
      docs: update for new extensions in nvk
      nvk: do not overwrite test cases

Timothy Arceri (15):
      nir: create validate_tex_src_texture_deref() helper
      nir: add nir_tex_src_{sampler,texture}_deref_intrinsic
      glsl: make use of new tex src deref intrinsic
      nir: set disallow_undef_to_nan for legacy ARB asm programs
      glsl: fix glsl to nir support for lower precision builtins
      glsl: always copy bindless sampler packing constructors to a temp
      nir: make static assert more flexible
      nir/glsl: set deref cast mode during function inlining
      glsl: drop double support checks in helper
      glsl: store has implicit conversions bools in gl_shader
      glsl: apply implicit matching rules when linking
      glsl: fix function overload resolution at link time
      ci: bump piglit version
      nir/tests: make add_loop_terminators more flexible
      nir/tests: add basic terminator merge test

Timur KristÃ³f (18):
      radv: Add gs/hs_inputs_read field for linked LS and ES.
      ac/nir/tess: Add tcs_inputs_read to LS output lowering.
      ac/nir/tess: Don't emit VS outputs that aren't read by TCS.
      ac/nir/esgs: Add gs_inputs_read to ES output lowering.
      ac/nir/esgs: Don't emit ES outputs that aren't read by GS.
      ac/nir: Add helper for I/O location mapping.
      ac/nir/tess: Map linked LS/HS I/O based on TCS input mask.
      ac/nir/esgs: Map linked ES/GS I/O based on GS input mask.
      ac/nir: Remove ac_nir_calc_io_offset function.
      radv: Stop assigning linked driver locations.
      nir: Remove unused nir_assign_linked_io_var_locations.
      ac/nir/tess: Simplify calculation of HS output LDS offset.
      ac/nir: Shorten the name of ac_nir_calc_io_offset_mapped.
      ac/nir/tess: Remove no_inputs_in_lds.
      ac/nir: Move varying cost functions from radeonsi to common code.
      radv: Add NIR XFB IO intrinsic info to legacy stages not just NGG.
      radv: Add new linking step and use nir_opt_varyings.
      radv: Determine linked I/O info after nir_opt_varyings.

Valentine Burley (29):
      tu/rmv: Fix missing image bind logging for WSI images
      tu: Implement VK_EXT_device_address_binding_report
      tu/kgsl: Remove unused variable
      docs/features: Update features.txt for Turnip
      lavapipe: Block more formats from getting blit feature flags
      vulkan/format: Translate two 420_UNORM formats properly
      tu, fdl: Drop custom mapping for 1-plane YCbCr formats
      tu: Drop tu_vk_format_to_pipe_format helper function
      vulkan/wsi: Refactor can_present_on_device
      tu: Always report that we can present on kgsl
      freedreno/ci: Update expectations for Adreno 660
      freedreno/ci: Re-enable Adreno 660 for Vulkan pre-merge jobs
      android: Extract version from llvm-project instead of hardcoding it
      tu: Remove redundant bits override from lower_tex_ycbcr
      ci: Backport two fixes tor the Vulkan CTS
      freedreno/ci: Update expectations
      freedreno/ci: Skip tests that might time out during pre-merge jobs
      freedreno/ci: Move and document last remaining failures
      freedreno/ci: Re-enable Adreno 630 for Vulkan nightly jobs
      tu: Expose VK_KHR_workgroup_memory_explicit_layout
      freedreno/ci: Wire up skips for a630_vk_full
      nvk: Advertise VK_EXT_legacy_vertex_attributes
      llvmpipe: Only use udmabuf with libdrm
      vulkan, radv: Add new common vk_format_get_plane_width/height helpers
      tu: Use vk_format_get_plane_width/height to get the plane dimensions
      tu: Use vk_format_get_plane_count for tu6_plane_count
      util: Remove Vulkan-only formats from get_plane_width/height
      tu: Fix VK_EXT_extended_dynamic_state3 feature
      tu: Simplify VK_EXT_sample_locations SampleCounts assignment

Vignesh Raman (5):
      ci/deqp-runner: unset CC for arm32 cross-compilation
      ci: uprev deqp-runner from 0.18.0 to 0.20.0
      ci: enable Mali V10 testing
      ci: use v6.11-rc5 kernel for Mali V10 testing
      ci: move mtl-fw.json to .gitlab-ci directory

Visan, Tiberiu (1):
      amd/vpelib: set the same range for clr adj

Vlad Schiller (2):
      pvr: Handle VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO
      pvr: Handle VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO

VÃ­ctor Manuel JÃ¡quez Leal (1):
      frontends/va: Don't return P010/P016 as surface formats when encoding

WANG Xuerui (2):
      meson: Force use of LLVM ORCJIT for hosts without MCJIT support
      meson: Additionally probe -mtls-dialect=desc for TLSDESC support

X512 (2):
      egl/haiku: fix double free of BBitmap
      egl/haiku: fix synchronization problems, add missing header

Yinjie Yao (1):
      radeonsi/vcn: Rename transform_skip_disabled and remove hardcoded value for VCN5

Yiwei Zhang (8):
      venus: only request ring thread prio for TLS ring
      venus: clarify wsi image ownership
      anv: improve vma usage for descriptor buffer
      ci: re-enable venus ci
      venus: fix a race condition between gem close and gem handle tracking
      Revert "meson: disallow Venus debug + LTO build via GCC"
      venus: workaround cacheline overflush issue on Intel JSL
      venus: avoid over-caching sfb cmds

Yunhyeok "Yune" Choi (1):
      glx: Getting rid of the double assignment in `__glXWireToEvent`.

Zan Dobersek (9):
      freedreno: fix a7xx perfcntr countables
      ir3: some 8-bit subgroup intrinsics must execute as 16-bit instructions
      nir/lower_vars_to_scratch: calculate threshold-limited variable size separately
      ir3: lower relevant 8-bit ALU ops in nir_lower_bit_size
      ir3: use fully-functional dp4acc when available
      ir3: indicate possible dword straddle for any multi-component pvtmem access
      ir3: improve validation, display for ldp instructions
      tu: enable shaderInt8 support
      tu: use instance indices in RD dump filenames

antonino (8):
      panfrost: rename `PAN_GPU_INDIRECTS`
      panfrost: refactor draw logic to support native draw indirect
      panfrost: implement indirect draw for CSF-based GPUs
      pan/cs: add helpers to emit contiguous csf code blocks
      pan/cs: add helpers to generate csf loop
      panfrost: implement multi draw indirect for CSF-based GPUs
      panfrost: advertise `PIPE_CAP_MULTI_DRAW_INDIRECT`
      mesa/main: expose `EXT_multi_draw_indirect`

bbhtt (1):
      pipe_loader_drm: Fix virtgpu_drm header path

chyyran (1):
      spirv_to_dxil: add missing SPIR-V capabilities

dawnhan (1):
      vulkan/android: Add missing AHB formats

yinjiyao (2):
      frontends/va: check hevc enc hdr sei
      radeonsi/vcn: add HDR sei in hevc enc

