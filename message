Updating from 9b932aadf468835979b749f072f7ac27429a07df to 23ee6ca801cf9220dd544e6d659d683104f92c74

Adam Jackson (1):
      mesa: Enable EXT_shadow_samplers for GLES2

Alejandro Piñeiro (6):
      v3dv/device: compute maxDescriptorSet*Limits multiplying per-stage by 4
      v3dv/device: set DescriptorUpdateAfterBind limits
      v3d/devinfo: unify comment style
      broadcom: move HW-dependant constants to v3d_device_info
      v3d,v3dv: document cl_emit_with_prepacked
      v3dv/pipeline: ensure vk_graphics_pipeline_all_state alive when still needed

Alyssa Rosenzweig (54):
      asahi/decode: drop Apple-specific decode check
      libagx: rm unused field
      libagx: fix static assert
      libagx: fix triangle fan + prim restart + GS/XFB
      libagx: drop unused !indexed path
      libagx: add libagx_copy_xfb_counters helper
      asahi: be robust against out of sync shader info
      agx: fix draw param gather for sw vs
      asahi: split param structs for GS internal kernel
      agx: rework libagx I/O lowering
      asahi: add missing lowerings
      asahi: force bindless for eMRT
      asahi: bounds check eMRT stores
      asahi: support bigger buffer textures
      asahi: add AGX_TEXTURE_FLAG_CLAMP_TO_0 flag
      agx: handle discard with force early tests
      asahi: pack blend key
      agx: switch to combined clip/cull
      asahi: add flag controlling sample mask without MSAA
      asahi: use scalar outputs for rast shaders
      asahi: move null descriptor routines to common
      asahi: implement rba2 for uniform texel buffers
      asahi: implement rba2 for storage texel buffers
      agx: prepare for lower_wpos_center
      asahi: extract agx_calculate_vbo_clamp
      agx: fix indirect CF accounting
      mesa: fix duplicate initializer
      nir/lower_wpos_center: clean up
      nir/builtin_builder: factor out nir_build_texture_query
      asahi: use nir_build_texture_query
      gallium: remove ability to probe asahi
      asahi: add broken bits of unstable Linux UAPI
      agx: fix 64-bit bcsel ingestion
      agx: fix fmin/fmax with (-0, 0) pair
      libagx: fix uint8_t definition
      libagx: make index buffer fetch robust
      libagx: generalize query copies
      asahi: implement rba2 semantics for vbo
      asahi: fix vbo clamp with stride=0
      asahi: implement robustness2 for msaa image stores
      asahi: be more clever about GS side effects
      nir/lower_robust_access: handle MSAA images
      nir: add nir_metadata_control_flow
      treewide: use nir_metadata_control_flow
      nir: document restriction on load_smem_amd constantness
      vulkan: reference count vk_descriptor_update_template
      vulkan: handle push DUT with emulated secondaries
      vulkan: fix potential UAF with vk_cmd_enqueue_CmdPushDescriptorSetKHR
      vulkan: handle enqueueing CmdPushConstants2KHR
      vulkan: handle enqueueing CmdPushDescriptorSet2KHR
      lvp: use common push constant enqueue
      lvp: use common push descriptor set enqueue
      lvp: fix silly casting for sampler desc updates
      lvp: use common descriptor update templates

Amit Pundir (1):
      android: Fix zink build failure

Amol Surati (1):
      nine: avoid using post-compacted indices with state expecting pre-compacted ones

Antonio Ospite (1):
      meson: fix deprecation warning in create-android-cross-file.sh

Boris Brezillon (32):
      panvk: Clean Midgard leftovers in the cmd_close_batch() path
      panvk: Use vk_pipeline_shader_stage_to_nir()
      panvk: Kill cmd_get_tiler_context()
      panvk: Make sure we dump memory mappings before crashing
      pan/decode: Be robust to NULL texture payload
      pan/desc: Add missing format in translate_s_format()
      pan/jc: Drop unused pool argument passed to pan_jc_add_job()
      panvk: Add a render state to panvk_cmd_graphics_state
      panvk: Take VK_RENDERING_{RESUM,SUSPEND}ING_BIT flags into account
      panvk: Force a preload when the render area is not 32x32 aligned
      panvk: Skip depth/stencil attachments with non-matching aspect mask
      panvk: Fix dynamic rendering with images containing both depth and stencil
      panvk: Make sure we don't lose clear-only operations
      panvk: Make sure we run the fragment shader if alpha_to_coverage is enabled
      panvk: Make sure replay of command buffers containing Dispatch calls works
      panvk: Override the default GetRender[in]AreaGranularityKHR()
      egl: Use gbm_bo_create_with_modifiers2() when the surface has non-zero flags
      panvk: Fix formatting around OpaqueCaptureAddress implementation
      panvk/ci: Flag exact_sampling.*.edge_right test as fails
      pan/bi: Make sure global loads/stores don't exceed 16 bytes
      pan/bi: Fix dynamic indexing of push constants
      panvk: Fix Cube/2DArray/3D img -> buf copies
      panvk: Don't bail out when allocationSize is zero in AllocateMemory()
      panvk: Prepare for Valhall image views
      panvk: Prepare for Valhall buffer views
      panvk: Prepare things for compiling valhall source files
      panvk: Extend Valhall descriptor set implementation to support Bifrost
      panvk: Overhaul the Bifrost descriptor set implementation
      panvk: Refcount private BOs
      panvk: Store private BOs in lists instead of dynarrays
      panvk: Prepare panvk_mempool for shared device memory pools
      panvk: Use memory pools for internal GPU data attached to vulkan objects

Caio Oliveira (4):
      intel/brw: Track the number of uses of each def in def_analysis
      intel/brw: Fix typo in DPAS emission code
      intel/brw: Add unit tests for scoreboard handling FIXED_GRF with stride
      intel/brw: Make component_size() consistent between VGRF and FIXED_GRF

Christian Gmeiner (3):
      ci: uprev mold to 2.32.0
      gallium: Add vkms entrypoint
      nak: Move nak_optimize_nir declaration to nak_private.h

Christopher Michael (1):
      broadcom: fix issue of ‘addr’ is used uninitialized

Connor Abbott (16):
      ir3: Put VS->TCS barrier after preamble
      ir3/legalize: Insert dummy bary.f after preamble
      freedreno,ir3: Add has_early_preamble
      tu: Workaround early preamble HW bug
      freedreno/a6xx: Workaround early preamble HW bug
      ir3: Add ir3_info::early_preamble
      tu: Implement early preamble
      freedreno/a6xx: Implement early preamble
      ir3: Enable early preamble
      tu: Use image aspects for feedback loops
      tu: Support VK_EXT_attachment_feedback_loop_dynamic_state
      tu: Use a7xx terminology for flushes
      freedreno, tu: Use CLEAN events on a7xx
      tu: Fix unaligned indirect command synchronization
      tu: Don't WFI after every dispatch
      freedreno/a7xx: Fix register file size

Corentin Noël (3):
      venus/ci: add more recently found flakes
      wsi: Make sure to return a valid wayland id string
      venus/ci: Update expectations

Craig Stout (5):
      util: detect_os: add DETECT_OS_FUCHSIA and DETECT_OS_POSIX_LITE
      util: u_thread: add Fuchsia support
      util: os_misc: add Fuchsia support
      util: u_dl: add Fuchsia support
      util: os_time: add Fuchsia support

Daniel Schürmann (23):
      aco/ra: fix handling of killed operands in compact_relocate_vars()
      aco/ra: Fix array access when finding register for subdword variables
      aco/ra: refactor get_reg_simple() with increased stride.
      aco/ra: move can_write_m0() check into get_reg_specified()
      aco/ra: re-use registers from killed operands
      aco/ra: change heuristic to first fit
      aco/ra: use round robin register allocation
      aco/assembler: fix MTBUF opcode encoding on GFX11
      aco/assembler: slightly refactor MTBUF assembly for more readability
      aco/assembler: fix GFX67 MTBUF opcode encoding
      aco/scheduler: remove unused register_demand parameter
      aco: move live var information into struct Program
      aco/reindex_ssa: replace live_var parameter with boolean
      aco: make aco::monotonic_buffer_resource declaration visible for aco::IDSet
      aco: use aco::monotonic_allocator for IDSet
      spirv: make gl_HelperInvocation volatile if demote is being used
      radv: emit discard as demote by default
      nir: introduce discard_is_demote compiler option
      nir/opt_peephole_select: handle nir_terminate{_if}
      nir: remove nir_intrinsic_discard
      zink: pass zink_screen to nir_to_spirv().
      nir/shader_info: remove uses_demote
      spirv: workaround for tests assuming that OpKill terminates invocations or loops

Daniel Stone (4):
      gbm: Support fixed-rate compression allocation
      venus/ci: Fix timeout
      venus/ci: Significantly reduce CTS fraction
      venus/ci: Temporarily disable jobs

Danylo Piliaiev (15):
      turnip: Implement VK_EXT_depth_clamp_zero_one
      freedreno/a7xx: Update TPL1_DBG_ECO_CNTL1 to fix UBWC corruption
      ir3/a7xx: Fix FS consts corruption when other FS has zero constlen
      tu: Add LRZ disable reason to renderpass tracepoint
      util/u_trace: Add support for fixed-length string params in tracepoints
      tu: Add attachments' UBWC info to renderpass tracepoint
      freedreno/rddecompiler: Make possible to use original shader
      freedreno/replay: Fix replaying without SET_IOVA
      freedreno/ir3: mova has special meaning for (r) flag
      ir3: Correctly assemble mova1 with (r) on const
      tu: Fix issues with render_pass tracepoint
      freedreno: Rename TPL1_DBG_ECO_CNTL1.UBWC_WORKAROUND into TP_UBWC_FLAG_HINT
      tu: Add enable_tp_ubwc_flag_hint feature to a7xx
      freedreno/devices: Turn off enable_tp_ubwc_flag_hint for a740 by default
      freedreno/devices: Fix magic regs for Adreno A32

Dave Airlie (12):
      nvk: Only enable WSI modifiers if the extension is supported.
      draw/texture: handle mip_offset[0] being != 0 for layered textures.
      nouveau/nvc0: increase overallocation on shader bo to 2K
      nvidia: fixup classes import and import new classes.
      nouveau/push: add support for m2mf/i2mf to dumper
      nouveau/nvc0: add support for using common pushbuf dumper
      radv/video: fix layered decode h264/5 tests.
      radv/video: use vcn ip versions for encoder detection.
      ac/radv/radeonsi: move av1 ctx/probs size/filling to common code.
      ac/radv/radeon: move film grain init to common code.
      st/mesa: drop u_simple_shaders.h include where not used.
      gallivm: create a pass manager wrapper.

David Heidelberg (14):
      ci/etnaviv: skip Vulkan tests on GC2000
      ci/etnaviv: remove duplicated line from skips
      mailmap: update my email
      ci/arm64: rustify the build
      ci/lava: add support for RustiCL
      ci/meson: reuse meson installation
      ci: move (c)bindgen to own shell script
      ci/radv: Document recent flake
      ci/lava: the containers take sometimes more than 60m
      ci: propagate RUSTICL_ENABLE and DEBUG variables to the DUTs
      rusticl: add -cl-std only when it's not defined
      ci/freedreno: some A306 tests now pass/skip since proper GL detection in Piglit
      ci: introduce tool for comparing nightly runs
      util: bump blake3 from 1.3.3 to 1.5.1, improve armv7 and aarch64 performance

David Rosca (4):
      frontends/va: Send all bitstream buffers to driver at once
      frontends/va: Fix crash in vaRenderPicture when decoder is NULL
      radv/video: Add missing VCN 3.0.2 to decoder init switch
      radeonsi: Make si_compute_clear_image work with 422 subsampled formats

Derek Foreman (1):
      wsi/wayland: Use different queue names for different queries

Dylan Baker (2):
      clc: remove check for null pointer that cannot be true in llvm_mod_to_spirv
      compiler/glcpp: don't recalculate macro

Emma Anholt (1):
      nir,panfrost,agx: Fix driver PIXEL_COORD_INTEGER setting and drop workaround.

Eric Engestrom (82):
      .mailmap: fix email address for @cpmichael
      v3dv/ci: fix typo in `renderer_check`
      ci: disable debian-build-testing until it can be fixed
      vc4/ci: skip VK piglit tests
      freedreno/a6xx: fix kernel -> compute handling
      zink+nvk/ci: add flakes seen in latest nightly run
      docs/calendar: add 24.2 branchpoint and release candidates schedule
      panfrost/ci: add missing genxml trigger path
      panfrost: mark tests as fixed
      etnaviv/ci: skip VK piglit tests
      radv/ci: document angle regressions from !29436 on stoney
      zink+nvk/ci: add flakes seen in latest nightly run
      docs/meson: replace deprecated pkgconfig with pkg-config
      zink+nvk/ci: add flakes seen in latest nightly run
      v3dv: add missing bounds check in VK_EXT_4444_formats
      docs: add release notes for 24.1.1
      docs: add sha256sum for 24.1.1
      docs: update calendar for 24.1.1
      turnip/ci: add a750 flakes seen in the latest nightly
      radv/ci: fix manual rules
      radv/ci: move radv manual rules into their own group
      nvk+zink/ci: add another flake seen in nightly
      docs: add release notes for 24.0.9
      docs: update calendar for 24.0.9
      docs: add sha256sum for 24.0.9
      venus/ci: add flake that's been blocking MRs
      v3d/drm-shim: emulate a rpi4 instead of a rpi3
      nvk+zink/ci: add another flake seen in nightly
      radv/ci: document navi31 regression from !29235
      ci: set a common B2C_JOB_SUCCESS_REGEX with the message that's printed for all jobs
      ci/deqp: uprev gl & gles cts
      radeonsi/ci: mark a bunch of tests as fixed on vangogh
      radv/ci: drop duplicate navi21-aco flakes line
      radv/ci: drop duplicate navi31-aco flakes line
      turnip+zink/ci: mark a dEQP-GLES(2|3).functional.rasterization.(fbo|primitives).line_(strip_|)wide as fixed
      turnip/ci: add a750 flakes seen in the latest nightly
      panfrost/ci: remove duplicate path
      nvk+zink/ci: mark KHR-GL46.sparse_texture2_tests.SparseTexture2* as fixed
      nvk+zink/ci: add flakes seen in nightly pipeline
      nvk+zink/ci: consider all the `double` tests in spec@glsl-4.00@execution@built-in-functions to be flaky
      freedreno/ci: disable mid-testing reboot on a750
      driconf: drop param for setting default gpu vendor id in DRI_CONF_FORCE_VK_VENDOR()
      egl: fix teardown when using xcb
      egl: move android-specific code into an android branch
      egl: ensure future platforms get their teardown implemented
      egl/device: drop unnecessary intermediate variable
      ci: fix meson install script
      lavapipe/ci: update trace checksum following nir change
      lavapipe/ci: document regression while it's being worked on
      turnip+zink/ci: mark dEQP-GLES3.functional.fbo.depth.depth_test_clamp.* tests as fixed
      bin/ci: escape literal url in regex
      glx: fix build -D glx-direct=false
      nvk+zink/ci: mark spec@ext_image_dma_buf_import@ext_image_dma_buf_import-refcount-multithread as fixed
      nvk+zink/ci: add flakes seen over the last few nightlies
      asahi/lib: generate git_sha1.h for agx_device.c
      ci/vkd3d: deduplicate the diff between the expectation and the results
      ci/vkd3d: print a message when the expected failures file is missing
      ci/vkd3d: drop override of job artifacts
      ci/vkd3d: fix error message printing
      ci/vkd3d: stop ignoring errors in a block where errors can't happen
      ci/vkd3d: don't ignore errors
      ci/vkd3d: group version check lines together
      ci/vkd3d: limit the vulkaninfo capture to the driverInfo line
      ci/vkd3d: print a real error message when failing to get the list of failing tests
      ci/vkd3d: rename vkd3d test log file to end in .txt
      ci/vkd3d: print URL to the vkd3d-proton.log file to make it easier to access
      ci/vkd3d: put `then` on the same line as the `if` to match the rest of the code style
      ci/vkd3d: drop the "clear results folder without deleting the folder" logic
      ci/vkd3d: drop `quiet` wrapper
      ci/vkd3d: drop redundant "vkd3d-proton execution: SUCCESS"
      docs: add release notes for 24.1.2
      docs: add sha256sum for 24.1.2
      docs: update calendar for 24.1.2
      venus/ci: fix indentation of list nested in a dict item
      venus/ci: add manual/nightly venus-lavapipe-full
      venus/ci: skip timed out test
      nvk+zink/ci: add flakes seen over the last two nightly runs
      nvk+zink/ci: catch more `double` flakes
      venus+zink/ci: drop fraction and add missing timeout on zink-venus-lvp
      loader: use os_get_option() to allow android to set LIBGL_DRIVERS_PATH, GBM_BACKENDS_PATH, GALLIUM_PIPE_SEARCH_DIR
      gallium/hud: use os_get_option() to allow android to set GALLIUM_HUD and related vars
      egl: use os_get_option() to allow android to set EGL_LOG_LEVEL

Eric R. Smith (2):
      panfrost: fix some omissions in valhall flow control
      panfrost: change default rounding mode for samplers

Erico Nunes (2):
      lima/ci: update piglit ci expectations
      Revert "ci: lima farm maintenance"

Erik Faye-Lund (35):
      util/format: correct a typo
      mesa/main: rewrite mipmap generation code
      mesa/main: remove unused function
      mesa/main: rework GL_IMAGE_PIXEL_TYPE query
      mesa/main: clean up _mesa_uncompressed_format_to_type_and_comps
      mesa/main: clean up switch statement
      mesa/main: do not return _REV format for uncompressed format
      mesa/main: prefer non-suffixed enums
      mesa/main: fixup indent
      mesa/main: updates for EXT_texture_format_BGRA8888
      docs: wrap long words instead of overflowing
      meson: bump test-timeout
      mesa/main: remove unused function
      panfrost: lower maxVertexInputStride to match vulkan runtime
      mesa/main: remove stale prototype
      mesa/main: remove duplicate error-checks
      mesa/main: require EXT_texture_integer for GL 3.0
      mesa/main: do not allow RGBA_INTEGER et al in gles3
      mesa/main: factor out format/type enum checking
      mesa/main: use extension-helper
      mesa/main: tighten rg/half-float interaction
      mesa/main: use _mesa_is_gles1()-helper
      mesa/main: remove needless check
      mesa/main: simplify conditions
      mesa/main: merge identical checks
      panvk: move macro-definition to header
      mailmap: invert tomeu's mapping
      mailmap: merge Robert and Bob Beckett into one
      mailmap: invert my mailmapping
      mailmap: map collabora.co.uk to collabora.com
      mailmap: move konstantin to the right sorted position
      mailmap: use consistent spelling for constantine
      mailmap: update rohan's primary email address
      nir: fix utf-8 encoding-issue
      Revert "docs: use html_static_path for static files"

Faith Ekstrand (118):
      vulkan: Update XML and headers to 1.3.286
      spirv: Update the JSON and headers
      nir: Handle cmat types in lower_variable_initializers
      spirv: Handle constant cooperative matrices in OpCompositeExtract
      spirv: Assert that non-vector composites have the right length
      spirv: Implement SPV_EXT_replicated_composites
      nvk: Advertise VK_EXT_shader_replicated_composites
      anv: Advertise VK_EXT_shader_replicated_composites
      hasvk: Advertise VK_EXT_shader_replicated_composites
      radv: Advertise VK_EXT_shader_replicated_composites
      turnip: Advertise VK_EXT_shader_replicated_composites
      lavapipe: Advertise VK_EXT_shader_replicated_composites
      dozen: Advertise VK_EXT_shader_replicated_composites
      nir/print: Improve divergence information
      nak: Fix NAK_DEBUG=serial for warp barriers
      nak: Only convert the written portion of the buffer in NirInstrPrinter
      nak: Fix BasicBlock::phi*() for OpAnnotate
      nak: BMov is always variable-latency
      nak: Only copy-prop neg into iadd2/3 if no carry is written
      nak: Get rid of OpINeg
      nak: Expose a BasicBlock::map_instrs() helper
      nak: Add some helpers for uniform instructions and registers
      nak: Add OpR2UR
      nak: Clean up bindless cbuf handles
      nak/ra: Move an assert
      nak: Make SSARef::file() return Option<RegFile>
      nak: Drop BasicBlock::new()
      nak: Add a concept of uniform blocks
      nak/to_cssa: Resolve phi register file mismatches
      nak/ra: Spill UGPRs and UPreds
      nak/ra: Never move uniform regs in non-uniform blocks
      nak: Support uniform regs in lower_copy_swap()
      nak/sm70: Defer ALU src processing until encode_alu()
      nak/sm70: Rework ALU source encode helpers
      nak/sm70: Add support for encoding uniform ALU ops
      nak/sm70: Fix encoding of fadd/fsetp and friends with UGPRs
      nak/sm70: Implement a bunch of uniform ops on SM75+
      nak/legalize: Fold immediate sources before instructions
      nak/legalize: Drop some pointless plop3 logic
      nak/legalize: Be more precise about shfl and out
      nak/legalize: Fix imad and ffma legalization on SM50
      nak/legalize: Patch a RegFile through to copy helpers
      nak/legalize: Handle uniform sources in warp instructions
      nak/legalize: Ensure all SSA values for a given ref are in the same file
      nak/legalize: Copy uniform vectors in non-uniform control-flow
      nak/legalize: Uniform instructions can't have cbuf sources
      nak/legalize: Explicitly ignore OpPhiSrcs and OpPhiDsts
      nak/calc_instr_deps: Rename a couple variables
      nak/calc_instr_deps: Rewrite calc_delays() again
      nak/calc_instr_deps: Add latencies for uniform instructions
      nak: Add a opt_uniform_instrs() pass
      nak/copy_prop: Rewrap a couple comments
      nak/copy_prop: Don't propagate UBOs into uniform instructions
      nak/lower_cf: Parent scopes are never NULL
      nak/lower_cf: Track block divergence
      nak: Convert to LCSSA before divergence analysis
      nak/lower_cf: Flag phis as convergent when possible
      nak/from_nir: Clean up phi annotations
      nak: Add a UniformBuilder
      nak/from_nir: Emit uniform instructions when !divergent
      nak/sm70: Properly encode bindless cbufs
      nak/dce: Account for bindless CBuf handles
      nak/calc_instr_deps: Account for bindless CBufs
      nak/bitset: Add an iterator
      nak/ra: Handle bindless CBufs
      nak/ra: Pull searching for unused/unpinned regs into a helper
      nak/ra: Rename PinnedRegAllocator to VecRegAllocator
      nak/ra: Add a concept of pinned registers to RegAllocator
      nak: Add OpPin and OpUnpin
      nak/legalize: Allow pinned uniform vectors in non-uniform blocks
      nak/legalize: Bindless cbufs must be pinned in non-uniform blocks
      nak/copy_prop: Don't propagate bindless cbufs into non-uniform blocks
      nir: Add some new _nv intrinsics
      nvk,nak: Switch to nir_intrinsic_ldc_nv
      nak: Implement r2ur_nv
      nak: Implement [un]pin_cx_handle_nv
      nir: Add nir_foreach_block_in_cf_node_safe() iterators
      nak: Lower non-uniform ldcx_nv to global loads
      nak: Implement nir_intrinsic_ldcx_nv
      nvk: Split SSBO and UBO address formats
      nvk: Split write_[dynamic_]buffer_desc into UBO and SSBO variants
      nvk: Align buffer descriptors
      nvk: Rename nvk_cmd_buffr_get_cbuf_descriptor()
      nvk: Make nvk_min_cbuf_alignment() inline
      nvk/lower_descriptors: Add a descriptor_type_is_ubo/ssbo() helper
      nvk: Move the zero offset optimization to load_descriptor_for_idx_intrin()
      nvk: Allow the cbuf optimization for VK_DESCRIPTOR_TYPE_MUTABLE_EXT
      nvk/descriptor_set_layout: Record which dynamic buffers are UBOs
      nvk: Use bindless cbufs on Turing+
      nvk: Be much more conservative about rebinding cbufs
      nvk: Use cbuf loads for variable pointers dynamic SSBO descriptors
      nvk: s/draw_idx/draw_index/g
      nvk: Pass the base workgroup and global size to flush_compute_state()
      nvk: Use helper macros for accessing root descriptors
      nvk: Pass the queue to draw/dispatch_state_init()
      nvk: Use inline constant buffer updates for CB0
      nvk: Only write draw parameters to cb0 when they change
      nvk: Refactor build_cbuf_map()
      nak,nir: Drop r2ur_nv in favor of as_uniform
      nouveau: Fix a race in nouveau_ws_bo_destroy()
      nvk: Use NVK_VK_GRAPHICS_STAGE_BITS in dirty_cbufs_for_descriprots()
      nvk: Dirty cbufs in CmdPushDescriptorSetWithTemplate2KHR
      intel/blorp: Set nir_shader::options up-front before building
      util/format_pack: Fix packing of signed 1010102 SSCALED formats
      util/format_pack: Also use iround for SCALED formats
      util/format_pack: Clamp SNORM values to [-1, 1] when unpacking
      util/format: Round to nearest even when converting to R11G11B20F
      util/format: Handle denorms when converting to R11G11B10F
      nir/format_convert: Smash NaN to 0 in pack_r9g9b9e5()
      nir/format_convert: Use fmin/fmax to clamp R9G9B9E5 data
      nir: Add a nir_intrinsic_use for unit tests
      nir: Move most of nir_format_convert to a C file
      nir: Support 0 and 32 bits in some format conversion helpers
      util: Make format_srgb.h C++ safe
      nir: Add a format pack helper and tests
      nir: Add a format unpack helper and tests
      nir/format_convert: Assert that UNORM formats are <= 16 bits
      ci: Update trace SHAs

Francisco Jerez (8):
      intel/xe2+: Enable native 64-bit integer arithmetic.
      iris,anv/xe2+: Enable the DX10/OGL border mode for YCrCb as per Wa_14014226147.
      iris,anv/xe2+: Set tessellation redistribution regions per patch to recommended values.
      iris,anv/xe2+: Use pipelined variant of 3DSTATE_DRAWING_RECTANGLE.
      intel/brw/xe2+: Use active-thread-only barriers available since Xe2+.
      iris/xe2+: Fix format of scratch space surface address in various 3DSTATE packets.
      anv/xe2+: Fix format of scratch space surface address in various 3DSTATE packets.
      intel/fs/gfx20+: Fix surface state address on extended descriptors for NIR scratch intrinsics.

Friedrich Vock (3):
      radv/rt: Fix memory leak when compiling libraries
      aco/spill: Don't spill phis with all-undef operands
      aco: Limit rt stages to 128 vgprs

Georg Lehmann (23):
      aco: don't pass program to emit_bpermute
      aco/lower_to_hw: add copy_constant_sgpr
      aco: small constant copy optimizations
      aco/lower_to_hw: use copy_constant_sgpr for masks
      aco/lower_to_hw: optimize split 64bit constant copies
      aco/optimizer: use p_create_vector to create mask when a copy can't be used
      nir: remove unpack_half_flush_to_zero
      nir/opt_uniform_atomics: handle inverse_ballot when detecting single lane ifs
      aco: optimize branching sequence with p_create_vector exec producer
      nir: sink/move inverse_ballot like moves
      ac: set has_pack_32_4x8
      nir: lower pack_uvec4_to_uint to pack_32_4x8 if supported
      nir/opt_algebraic: alternative 8bit pack_[us]norm_4x8 lowering
      aco: rework how affinities for acc operands are determined
      aco: add affinities for possible sopk optimizations
      aco/gfx11+: fix inline constants for v_pk_fmac_f16
      aco: move literal unswizzle opt to RA
      aco/ra: use a switch to check vop2acc instruction support
      aco: move s_add_u32 -> s_addk_i32 optimization fully to ra
      amd/common: set COMPUTE_STATIC_THREAD_MGMT_SE2-3 correctly on gfx10-11
      aco: add more anonymous namespaces
      aco: make local functions static in files without anonymous namespace
      radv: inline partial push constant loads

Gert Wollny (1):
      zink: limit minSampleShading to a maxium value of 1.0

Guilherme Gallo (1):
      ci/lava: Fix cmdline for UART/fastboot devices

Heinrich Fink (1):
      zink: remove workaround of FB modifiers forcing present state

Iago Toral Quiroga (27):
      broadcom/compiler: check if vertex shader writes point size
      v3dv: only flag 'shader writes point size' if the shader actually writes it
      v3dv: emit a default point size when drawing points
      v3dv: drop unused stride field from v3dv_pipeline_vertex_binding
      v3dv: fix incorrect index buffer size
      v3dv: use pSizes paramater in vkCmdBindVertexBuffers2
      v3dv: implement vkCmdBindIndexBuffer2KHR
      v3dv: handle VkBufferUsageFlags2CreateInfoKHR
      v3dv: handle VkPipelineCreateFlags2CreateInfoKHR
      v3dv: lower maxVertexInputBindingStride to match vulkan runtime
      v3dv: shader modules are deprecated with VK_KHR_maintenance5
      v3dv: implement vkGetImageSubresourceLayout2KHR
      v3dv: refactor create_image
      v3dv: add a get_image_subresource_layout helper
      v3dv: implement vkGetDeviceImageSubresourceLayoutKHR
      v3dv: implement vkGetRenderingAreaGranularityKHR
      v3dv: fix pipeline leaks when meta pipeline cache is disabled
      v3dv: fix a few asserts that check layerCount instead of array_layers
      v3dv: allow VK_REMAINING_ARRAY_LAYERS in VkImageSubresourceLayers
      v3dv: remove blit shader restriction on depth/stencil not being linear
      v3dv: disable some TLB paths for cases of linear depth/stencil stores
      v3dv: support VK_FORMAT_A1B5G5R5_UNORM_PACK16_KHR
      v3dv: add more checks for device loss
      v3dv: fix handling of pipeline flags when pipeline init fails
      v3dv: expose VK_KHR_maintenance5
      broadcom/compiler: initialize payload_conflict for all initial nodes
      v3dv: don't call wsi_device_init too early

Ian Romanick (5):
      nir/algebraic: Add nir_lower_int64_options::nir_lower_iadd3_64
      nir/search: Fix is_16_bits for vectors
      nir/search: Refactor is_16_bits
      nir/algebraic: More patterns to generate iadd3
      nir/algebraic: intel/fs: Optimize some patterns before lowering 64-bit integers

Iván Briano (4):
      anv: check cmd_buffer is on a transfer queue more properly
      intel/brw: add fetch_viewport_index function
      intel/brw: always read LAYER/VIEWPORT from the FS payload
      vulkan/runtime: pColorAttachmentInputIndices is allowed to be NULL

Jesse Natalie (2):
      wgl: Delete pixelformat support query
      wgl: Fix flag check for GDI compat

Jianxun Zhang (11):
      intel/isl: Allow multi-sample on depth aux usage (xe2)
      isl: Add a heading 4KB to MCS surface (xe2)
      isl: Add AUX MCS encoding into aux modes (xe2)
      blorp: Scaledown rectangle of MSAA fast clear (xe2)
      blorp: Fix offset when ambiguating MCS buffer (xe2)
      isl: Clone from isl_gfx12.* files (xe2)
      isl: Update isl_gfx20 code (xe2)
      isl: Add isl_gfx20 into build (xe2)
      isl: Add dispatching in isl.c (xe2)
      isl: Implement a part of WA_22018390030 (xe2)
      isl: Remove code for Xe2 from isl_gfx12.c

Job Noorman (31):
      ir3: simplify cat5 parsing
      ir3: add encoding for isam.v
      ir3: use isam.v for multi-component SSBO loads
      ir3: add encoding of ldib/stib offsets
      ir3: lower SSBO access imm offsets
      nir/opt_offsets: add callback for max base offset
      nir/opt_offsets: add option to allow offset wrapping
      nir/opt_offsets: add load/store_ssbo_ir3
      ir3: use nir_opt_offsets for SSBO accesses
      ir3: optimize SSBO offset shifts for nir_opt_offsets
      ir3: remove spilled splits in shared RA
      ir3: set wrmask for spilled splits in shared RA
      ir3: print sharedness/halfness of merge set regs
      ir3: print intervals when dumping merge sets
      ir3: print dst_offset of spill.macro
      ir3: debug print limit pressure and post-spill max pressure
      ir3: set current instruction before all validation asserts
      ir3: fix crash in try_evict_regs with src reg
      ir3: fix handling of early clobbers in calc_min_limit_pressure
      ir3: set offset on splits created while spilling
      ir3: correctly set wrmask for reload.macro
      ir3: don't remove intervals for non-killed tex prefetch sources
      ir3: don't remove collects early while spilling
      ir3: expose instruction indexing helper for merge sets
      ir3: make indexing instructions optional in ir3_merge_regs
      ir3: index instructions before fixing up merge sets after spilling
      ir3: move liveness recalculation inside ir3_ra_shared
      ir3: restore interval_offset after liveness recalculation in shared RA
      ir3: add ir3_cursor/ir3_builder helpers
      ir3: refactor ir3_spill.c to use the ir3_cursor/ir3_builder API
      ir3: only add live-in phis for top-level intervals while spilling

Jordan Justen (23):
      blorp: Update programming for XY_FAST_COLOR_BLT on xe2
      intel/genxml: Add XY_FAST_COLOR_BLT for xe2
      intel/genxml: Update 3DSTATE_BTD for xe2
      intel/dev: Allow setting FORCE_PROBE for intel PCI IDs
      intel/dev: Support INTEL_FORCE_PROBE env-var
      docs: Document INTEL_FORCE_PROBE env-var
      intel/dev: Add LNL device info
      pci_ids/intel: Add LNL PCI IDs (with FORCE_PROBE set)
      anv/grl: Set INTEL_FORCE_PROBE=* when running intel_clc
      intel/brw: Simplify enabling brw_fs_test_dispatch_packing
      intel/brw: Allow xe2 in brw_stage_has_packed_dispatch()
      intel/brw: Fix SSBO/shared load offset register size for Xe2
      anv/grl: Build for xe2
      Revert "anv: Disable Ray Tracing on xe2 until our compiler supports Xe2 RT"
      intel/dev/mesa_defs.json: Update LNL WA entries
      intel/dev: Add INTEL_PLATFORM_BMG enum, BMG WA info
      intel/dev: Add BMG device info
      intel/dev: Add BMG PCI IDs (with FORCE_PROBE set)
      intel/dev: Silence INTEL_FORCE_PROBE warning for intel_clc
      intel/dev: If building the driver, always allow getting device info
      Revert "anv/grl: Set INTEL_FORCE_PROBE=* when running intel_clc"
      intel/compiler: Don't set size written in brw_lower_logical_sends.cpp
      intel/tools: Fix intel_dev_info --hwconfig switch

Jose Maria Casanova Crespo (3):
      v3dv: Emit stencil draw clear if needed for GFXH-1461
      v3dv: really fix CLE MMU errors on 7.1HW Rpi5
      v3d: really fix CLE MMU errors on 7.1HW Rpi5

José Roberto de Souza (25):
      intel/dev: Add LNL stepping mapping
      intel/dev: Add BMG stepping mapping
      intel: Move slm functions from brw_compiler.h to intel_compute_slm.c/h
      intel/common: Implement Xe2 SLM encode
      intel/common: Implement preferred SLM encode
      intel/dev: Use topology variables to calculate strides in Xe KMD
      intel/dev: Add function to get the number of EUs per subslice
      intel: Set preferred SLM allocation size >= than SLM size for Xe2
      anv: Set maxComputeSharedMemorySize value for Xe2 platforms
      intel: Compute the optimal preferred SLM size per subslice
      anv: Initialize variable to fix static analyzer warning
      intel/genxml/gfx20: Sync POSTSYNC_DATA struct with spec
      anv/xe2: Enable compute walker and BTD thread preemption
      anv/xe2: Add STATE_COMPUTE_MODE individual masks
      anv: Remove block promoting non CPU mapped bos to coherent
      intel/isl: Set dummy_aux_address to implement Wa_14019708328
      anv: Implement Wa_14019708328
      iris: Implement Wa_14019708328
      anv: Implement Wa_14019857787
      iris: Implement Wa_14019857787
      intel/dev: Add compressed PAT entry
      anv: Add support for compressed images allocation in Xe2
      anv: Give apps the choice of compressed or uncompressed but cpu visible images
      iris: Add support for compressed images allocation in Xe2
      anv: Fix assert in xe_gem_create()

Juan A. Suarez Romero (6):
      v3d: use screen name in disk cache
      v3d,v3dv: add compatibility revision in GPU name
      broadcom/ci: update expected results
      v3dv/ci: add expected failure
      v3dv/ci: fix spurious line in expected
      v3dv/ci: add new timeouts

Juston Li (1):
      venus: sync protocol for conditionally ignored dyn arrays

Karmjit Mahil (3):
      turnip: Remove workaround for CTS bug zero-sized inline uniform block
      mailmap: Add Karmjit Mahil
      freedreno/isa: Fix isaspec map for a3xx-ld

Karol Herbst (33):
      nouveau: import nvif/ioctl.h file from libdrm_nouveau
      gallium/vl: stub vl_video_buffer_create_as_resource
      gallium/vl: remove stubs which are defined in mesa_util
      meson: centralize galliumvl_stub handling
      rusticl: link against libgalliumvl_stub
      wgl: link against libgalliumvl_stub
      gallium/drivers: do not link against libgalliumvl directly
      rusticl/event: fix deadlock when calling clGetEventProfilingInfo inside callbacks
      iris: fix PIPE_RESOURCE_PARAM_STRIDE for buffers
      rusticl/icd: make sure returned function pointers are of the right type
      rusticl/kernel/launch: fix mapping usize types to GPU pointer sizes
      rusticl/kernel/launch: remove useless upload of the input
      rusticl/kernel: move most of the code in launch inside the closure
      rusticl/kernel/launch: move allocation of resources vec
      rusticl/kernel/launch: rework how the printf buffer is allocated
      rusticl/kernel/launch: get rid of Arc clones for global resources
      rusticl/kernel/launch: add helper to bind global buffers
      broadcom/compiler: handle load_workgroup_size
      v3d: add support for load_workgroup_size
      rusticl/spirv: do not pass a NULL pointer to slice::from_raw_parts
      rusticl/memory: copies might overlap for host ptrs
      gallium: reduce pipe_resource.usage to 4 bits
      gallium: properly type pipe_resource.usage with the enum
      gallium: properly type fields of pipe_resource.usage
      nir_lower_mem_access_bit_sizes: support unaligned store_scratch
      nir: add global_atomic_2x32 variants to nir_get_io_offset_src_number
      broadcom/compiler: support global load/store intrinsics
      broadcom/compiler: use nir_lower_mem_access_bit_sizes for memory lowering
      broadcom/compiler: convert 2x32 global operations to scalar variants
      broadcom/compiler: only handle load_uniform explicitly in v3d_nir_lower_load_store_bitsize
      broadcom/compiler: rework scratch lowering
      rusticl/meson: add build root dir to the include dirs of rusticl_c
      rusticl: depend on the spirv_info target

Kenneth Graunke (25):
      intel/brw: Blockify convergent load_shared on Gfx11-12 as well
      intel/brw: Recreate GS output registers after EmitVertex
      intel/brw: Skip fs_nir_setup_outputs for compute shaders
      intel/brw: Handle scratch address swizzling of constants
      intel/brw: Add a idom_tree::dominates(a, b) helper.
      intel/brw: Make brw_reg::bits publicly accessible from fs_reg
      intel/brw: Update instructions_match() to compare more fields
      intel/brw: Drop compiler parameter from try_constant_propagate()
      intel/brw: Drop BRW_OPCODE_IF from try_constant_propagate
      intel/brw: Refactor try_constant_propagate()
      intel/brw: Refactor code to commute immediates into legal positions
      intel/brw: Delete SAD2 and SADA2 opcodes
      intel/brw: Make VEC() perform a single write to its destination.
      intel/brw: Make gl_SubgroupInvocation lane index loading SSA
      intel/brw: Skip LOAD_PAYLOADs after every texture instruction if possible
      intel/brw: Add a new def analysis pass
      intel/brw: Print defs in dump_instructions
      intel/brw: Write a new global CSE pass that works on defs
      intel/brw: Switch to the new defs-based global CSE pass
      intel/brw: Delete old local common subexpression elimination pass
      intel/brw: Introduce a new SSA-based copy propagation pass
      intel/brw: Use the defs-based copy propagation along with the old one
      intel/brw: Make opt_copy_propagation_defs clean up its own trash
      intel/brw: Build the scratch header on the fly for pre-LSC systems
      intel/brw: Skip discarding the interference graph

Kevin Chuang (6):
      anv: Properly fetch partial results in vkGetQueryPoolResults
      anv: Properly handle cases for different query types in copy_query_results_with_shader
      intel/genxml: add task/mesh shader statistics registers
      anv: Update pipeline statistics mask for task/mesh shader invocations
      anv: implement mesh shader queries
      anv: toggle meshShaderQueries based on whether we support mesh_shader or not

Konstantin Seurer (21):
      llvmpipe: Use a second LLVMContext for compiling sample functions
      radv: Add locking to radv_replay_shader_arena_block
      radv: Replace is_rt_shader with RADV_SHADER_TYPE_RT_PROLOG
      radv: Remove uses_dynamic_rt_callable_stack
      radv/rt: Track ray_launch_id reads
      radv/rt: Track ray_launch_size reads
      radv/rt: Remove load_rt_dynamic_callable_stack_base_amd
      radv: Return a block from radv_replay_shader_arena_block
      ac/llvm: Fix DENORM_FLUSH_TO_ZERO with exact instructions
      ac/llvm: Enable helper invocations for vote_all/any
      radv/ci: Bring back vkcts-navi21-llvm-valve
      khronos-update: Add ANDROID guards to vk_android_native_buffer.h
      zink: Always include renderdoc_app.h
      zink: Blit using one triangle for nearest filtering
      llvmpipe: Lock shader access to sample_functions
      llvmpipe: Stop using a sample_functions pointer as cache key
      llvmpipe: Only evict cache entries if a fence is available
      lavapipe: Always call finish_fence after lvp_execute_cmd_buffer
      radv: Clean up pipeline barrier handling
      radv: Remove dead access bits
      radv/meta: Use READ access for dst_access_flush

Leo Liu (4):
      ac/surface: add GFX12 256B tile mode for video
      ac/surface/tests: add the test for ADDR3_256B_2D
      radeon/vcn: use pipe video buffers for dpb
      radeon/vcn: enable dpb to use pipe video buffer with swizzle mode

Lionel Landwerlin (58):
      anv: fix utrace compute walker timestamp captures
      anv: fix timestamp copies from secondary buffers
      anv: move last compute command pointers to the state structure
      u_trace: extend tracepoint end_of_pipe bit into flags
      anv: optimize POSTSYNC_DATA rewrites in timestamp emissions
      intel: fix HW generated local-id with indirect compute walker
      brw: use a single virtual opcode to read ARF registers
      brw: limit dependencies on SR register
      brw: better model READ_ARF_REG opcode
      anv: fix Gfx9 fast clears on srgb formats
      anv: rewrite Wa_18019816803 tracking to be more like state
      anv: factor out some more gpu_memcpy setup
      anv: fix pipeline flag fields
      anv: expose VK_MESA_image_alignment_control
      anv: support setting CFE_STATE::StackIDControl per application
      anv: limit aux invalidations to primary command buffers
      anv: ensure completion of surface state copies before secondaries
      anv: simplify TRTT initialization
      anv: reuse setup_execbuf_fence_params for utrace submissions
      anv: rework utrace submission
      anv: move trtt submissions over to the anv_async_submit
      anv: use reserved array pool for legacy custom border colors
      anv: make device initialization more asynchronous
      mi-builder: rename relocated api
      mi-builder: c++ warning fix
      mi-builder: make instruction pointer manipulation more obvious
      mi-builder: add missing write completion check
      mi-builder: add relocated register/memory writes
      mi-builder: add a write check parameter
      anv: centralize mi_builder setup
      anv: use the new relocated write mi-builder api
      anv: move more MI_SDI to mi_builder
      anv: use default mocs for memory bits only touched by CS
      anv: set query mi-builder mocs only once
      anv: use new mi-builder write check API to avoid stalls
      genxml: add MI_MEM_FENCE for Gfx20
      mi-builder: add read/write memory fencing support on Gfx20+
      intel/fs: fix lower_simd_width for MOV_INDIRECT
      anv: add custom mi write fences
      anv: emit conditional after gfx state flushing
      anv: factor out STATE_BASE_ADDRESS filling to helper function
      anv: predicate emission of STATE_BASE_ADDRESS
      anv: reuse device local variable
      anv: avoid initalizing TRTT stuff without sparseBinding
      anv: fix vkCmdWaitEvents2 handling
      anv: don't apply descriptor array bound checking
      brw: add missing break
      brw: factor out source extraction for rematerialization
      brw: improve rematalization of surface/sampler handles
      brw: bound the amount of rematerialized NIR instructions
      brw: remove rematerialization assert
      brw: remove some brackets
      brw: enable rematerialization of non 32bit uniforms
      brw: always use new registers for load address increments
      brw: annotation send instructions with surface handles generated with exec_all
      brw: avoid Wa_1407528679 in uniform cases
      brw: blockify load_global_const_block_intel
      brw: enable A64 loads source rematerialization

Louis-Francis Ratté-Boulianne (10):
      dri_interface: add interface for EGL_EXT_surface_compression
      gallium: add interface for fixed-rate surface/texture compression
      egl/wayland: factor out common part of DRI image creation
      egl: wire up EGL_EXT_surface_compression extension
      st/dri2: add support for fixed-rate compression interface
      egl/dri2: add support for EGL_EXT_surface_compression
      mapi: add EXT_texture_storage_compression extension
      mesa/st: add compression parameter to st_texture_create
      mesa: implement EXT_texture_storage_compression extension
      mesa: implement EXT_EGL_image_storage_compression extension

Lucas Fryzek (2):
      llvmpipe: query winsys support for dmabuf mapping
      u_gralloc/fallback: Set fd from handle directly

Maaz Mombasawala (1):
      svga: Retry DRM_VMW_SYNCCPU ioctl on failure.

Marcin Ślusarz (2):
      intel/genxml/xe2: update MESH_CONTROL
      anv,intel/compiler/xe2: fill MESH_CONTROL.VPandRTAIndexAutostripEnable

Marek Olšák (62):
      ac/descriptors: fix gfx12 regressions
      ac/nir/lower_ngg: use global_atomic_amd to fix gfx12 streamout
      ac/nir/lower_ngg: use voffset in global_atomic_add for xfb
      ac: add gfx12 DCC shared code
      radeonsi/gfx12: fix GPU deadlocks due to query result incoherency
      radeonsi: assume si_set_ring_buffer is only used by gfx6-10.3
      radeonsi: remove cp_to_L2 and L2_to_cp, inline the values
      radeonsi: remove RADEON_FLAG_READ_ONLY
      radeonsi: allow RADEON_HEAP_BIT_GL2_BYPASS for VRAM
      radeonsi: remove leftover comment of non-existent RADEON_FLAG_MALL_NOALLOC
      radeonsi/gfx12: add DCC
      ac/surface: pass the correct addrlib handle to Addr3GetPossibleSwizzleModes
      amd: update addrlib
      ac/nir/lower_ngg: don't use gfx12 xfb defs outside their basic block on gfx11
      radeonsi/gfx12: fix stencil corruption
      gallium/u_blitter: add option to override fragment shader for util_blitter_blit
      radeonsi: don't declare 3D coordinates in the compute blit if they aren't needed
      radeonsi: use better workgroup sizes for compute blits to improve perf
      radeonsi: ignore PIPE_SWIZZLE_1 for 40% VGPR usage reduction for compute blits
      radeonsi: remove fp16_rtz from the compute blit
      radeonsi: use MIMG D16 (16-bit data) for image instructions in compute blits
      radeonsi: optimize unaligned compute blits
      radeonsi: fix sample0_only for the compute blit
      radeonsi: reject unsupported parameters as the first thing in the compute blit
      radeonsi: don't use si_can_use_compute_blit in the compute blit
      radeonsi: don't fail due to DCC when using the compute blit on compute queues
      radeonsi/gfx11: enable MSAA image stores in the compute blit
      radeonsi: document better how X/Y flipping in the compute blit works
      radeonsi: cosmetic and robustness changes for the compute blit
      radeonsi: extend the compute blit to do image clears as well
      radeonsi: switch compute image clears to the compute blit shader
      radeonsi: rename si_compute_blit "testing" parameter to "fail_if_slow"
      radeonsi: rename si_compute_copy_image -> si_compute_copy_image_old
      radeonsi: add a new version of si_compute_copy_image using the compute blit
      radeonsi: switch the old compute image copy to the new one using the blit
      radeonsi: remove the old si_compute_copy_image
      radeonsi: convert the compute blit shader hash table to u64 keys
      radeonsi: split xy_clamp_to_edge to separate X and Y flags for the compute blit
      radeonsi: restructure (rewrite) the compute blit shader
      radeonsi: adds flags parameter into si_compute_blit to replace fail_if_slow
      radeonsi: change the compute blit to clear/blit multiple pixels per lane
      radeonsi: extend NIR compute helpers to allow returning 16-bit results
      radeonsi: use MIMG A16 (16-bit image coordinates) in compute blits
      radeonsi: print the compute shader blit key for AMD_DEBUG
      radeonsi: use shader_info::use_aco_amd to determine whether to use ACO
      radeonsi: add use_aco into CS blit shader key
      radeonsi: clear color buffers via compute for special tiling cases
      radeonsi: add a custom MSAA resolving pixel shader
      radeonsi: add fail_if_slow parameter into si_msaa_resolve_blit_via_CB
      radeonsi: add a new blit microbenchmark
      radeonsi: add decision code to select when to use CB_RESOLVE for performance
      radeonsi: add decision code to select when to use compute blit for performance
      ac/nir: import the MSAA resolving pixel shader from radeonsi
      ac/nir: import the universal compute clear/blit shader
      ac/nir: import the dispatch logic for the universal compute clear/blit shader
      Revert "radeonsi: fix initialization of occlusion query buffers for disabled RBs"
      radeonsi/ci: update gfx10.3 failures
      nir/lower_io_to_scalar: add new_component temporary variable
      nir/lower_io_to_scalar: don't create output stores that have no effect
      nir: add nir_opt_vectorize_io, vectorizing lowered IO
      glsl/linker: vectorize lowered IO
      nir: add a NIR option flag nir_io_prefer_scalar_fs_inputs

Mark Collins (14):
      tu/shader: Allow LRZ when write pos with explicit early frag test
      tu/lrz: Emit GRAS_LRZ_CNTL2 on A7XX
      tu/lrz: Use actual CHIP rather than hardcoding A6XX
      fd/a7xx: Initialize magic register 8C34 to 0
      fd/a7xx: Initialize magic register 8008 to 0
      tu: Allow LRZ on A7XX
      tu/lrz: Add structure for LRZ FC layout
      tu: Update LRZ FC allocation for A7XX layout
      tu: Update LRZ FC dirty clear for A7XX
      tu: Specify LRZ FC depth clear value on A7XX
      tu: Enable LRZ fast-clear for A7XX
      fd/a7xx: Document `LRZ_FLIP_BUFFER` event
      docs/freedreno: Add documentation on A7XX LRZ
      tu: Emit GRAS_LRZ_DEPTH_BUFFER_INFO correctly

Mary Guillemard (47):
      pan/lib, panvk: Ensure data_size is on 64 bits
      panvk: Fix shader destruction when vk_shader_module_to_nir fail
      panvk: Remove panvk_lower_blend
      panvk: Remove dynarray from panvk_shader
      panvk: Keep panvk_shader alive in panvk_pipeline_shader
      panvk: Upload shader in panvk_shader
      panvk: Upload copy tables in panvk_shader
      panvk: Upload render state in panvk_shader
      panvk: Move the linking bits to panvk_shader
      panvk: Kill panvk_pipeline_shader and use panvk_shader directly
      panvk: Link shaders at draw time
      panvk: Move compile logic out of shader_create
      panvk: Move NIR lower logic out of shader_create
      panvk: Move preprocess logic out of shader_create
      panvk: Implement vk_shader
      panvk: Remove panvk_pipeline
      pan/va: Ensure no clash with other defs in disassembler
      bi: Make disassembler take a const void*
      midgard: Make disassembler take a const void*
      bi: Move bi_disasm definitions to their own header
      panfrost: Add pan_shader_disassemble
      panvk: Implement executable IR reporting
      panvk: Advertise VK_KHR_pipeline_executable_properties
      panvk: Generate proper device and driver UUIDs
      panvk: Advertise VK_EXT_pipeline_creation_cache_control and VK_EXT_pipeline_creation_feedback
      panvk: Advertise VK_EXT_shader_module_identifier
      panvk: Advertise VK_KHR_pipeline_library and VK_EXT_graphics_pipeline_library
      panvk: Enable pipeline library in CI for Mali-G52
      docs: Update features.txt to add panvk for BDA extensions
      panvk: Advertise VK_KHR_device_group and VK_KHR_device_group_creation
      panvk: Reorder extensions by name
      panvk: Advertise VK_KHR_maintenance3
      panvk: Add missing null check in DestroyCommandPool
      panvk: Add missing clean up in blend_shader_cache_init
      panvk: Make mempool detect NULL BOs
      panvk: Check for maxBufferSize in panvk_CreateBuffer
      panvk: Make panvk_kmod_zalloc use correct allocation scope on non-transient
      panvk: Ensure to unref transient bo in reset for mempools
      panvk: Fix device mempool leaks
      panvk: Add more allocation checks in create_device
      panvk: Implement CmdDispatchBase
      panvk: Enable device_init, null_handle and object_management in CI for Mali-G52
      panvk: Advertise shaderModuleIdentifier feature
      panvk: Report correct min value for discreteQueuePriorities
      panvk: Enable dEQP-VK.info tests in CI for Mali-G52
      panvk: Clamp viewport scissor to valid range
      panvk: Enable offscreen_viewport tests in CI for Mali-G52

Michel Dänzer (1):
      wsi: Call drmSyncobjQuery only once for all images

Mike Blumenkrantz (13):
      zink: add atomic image ops to the ms deleting pass
      build/amd: add amd-use-llvm build option
      ir3: flag progress from nir_lower_io_to_scalar
      ir3: assert that no further optimizations can be done if !progress
      gallium: add drawid_offset to draw_mesh_tasks interface
      gallium: stop dropping drawid_offset param with util_draw_indirect
      vulkan: Update XML and headers to 1.3.287
      zink: add HKP to tiler mode switch
      lavapipe: fix mesh+task binding with shader objects
      mesa/st: fix zombie shader handling for non-current programs
      zink: null check pipe loader config before use
      zink: split out msaa replication
      zink: implement msaa replication with dynamic rendering

Mingcong Bai (2):
      meson: set default drivers for ppc, ppc64
      meson: set default Vulkan drivers for ppc, ppc64

Nanley Chery (25):
      intel/isl: Allow sampling from 3D HIZ_CCS_WT
      intel/blorp: Factor bpb into the fast-clear rect
      intel/blorp: Allow gfx12 fast-clears without CCS surf
      intel/isl: Add and use ISL_DRM_CC_PLANE_PITCH_B
      anv: Refactor modifier plane layout queries
      intel/aux_map: Add and use INTEL_AUX_MAP_MAIN_PITCH_SCALEDOWN
      intel/aux_map: Add and use INTEL_AUX_MAP_META_ALIGNMENT_B
      intel/aux_map: Add and use INTEL_AUX_MAP_MAIN_SIZE_SCALEDOWN
      intel/isl: Add and use ISL_MAIN_TO_CCS_SIZE_RATIO_XE
      intel/isl: Add and use multi-engine surf usage bits
      iris: Simplify bo import in memobj_create_from_handle
      intel/isl: Assert alignments of surface addresses
      anv: Rely on the primary surf usage to disable aux
      anv,hasvk: Drop anv_get_isl_format_with_usage
      anv: Support multiple aspects in anv_formats_ccs_e_compatible
      anv: Rely more on ISL_SURF_USAGE_DISABLE_AUX_BIT
      anv: Restrict CCS ISL surface creation to gfx9-11
      iris: Add and use comp_ctrl_surf_offset on gfx12
      intel/isl: Drop support for the gfx12 CCS ISL surf
      intel/isl: Add and use isl_drm_modifier_needs_display_layout
      iris,anv: Disable gfx12.0 fast-clears with unaligned pitch
      intel/isl: Consolidate some tiling checks for CCS
      intel/isl: Require display flag for 512B pitch alignment
      intel/isl: Pad the pitch on gfx12.0 for fast-clears
      anv+zink/ci: Change sparse test result from crash to fail

Patrick Lerda (2):
      mesa/main: fix stack overflow related to the new mipmap code
      radeonsi: fix assert triggered on gfx6 after the tessellation update

Paulo Zanoni (1):
      anv/xe: fix declaration of memory flags for integrated non-LLC platforms

Pavel Ondračka (7):
      r300/ci: fails list update
      r300: fix cycles counting for KIL
      r300: fix writemask rewrite when converting to omod
      r300: fix for ouput modifier and DDX/DDX
      r300: fix RC_OMOD_DIV_2 modifier
      r300: missing whitespace in shader stats
      r300: vectorization tweaks for R300/R400

Philipp Zabel (1):
      etnaviv: update headers from rnndb

Pierre-Eric Pelloux-Prayer (6):
      radv/sqtt: use radeon_check_space before emit_spm_*
      radeonsi: use the common SQTT implementation
      radeonsi/sqtt: add AMD_THREAD_TRACE_INSTRUCTION_TIMING
      ac/sqtt: make VA helpers static
      ac/llvm: implement WA in nir to llvm
      radeonsi: store the total binary size in si_shader

Qiang Yu (2):
      glsl: respect GL_EXT_shader_image_load_formatted when image is embedded in a struct
      radeonsi: add missing nir_intrinsic_bindless_image_descriptor_amd

Rebecca Mckeever (9):
      panvk: Add jm and bifrost dirs
      panvk: Add push_uniform/constant helpers
      panvk: Make helper functions panvk_cmd_buffer agnostic
      panvk: Move panvk_descriptor_state to bifrost subdir
      panvk: Move vkCmdDraw* functions to their own file
      panvk: Move vkCmdDispatch* functions to their own file
      panvk: Move vkCmd*Event functions to their own file
      panvk: Add Valhall DescriptorSetLayout implementation
      panvk: Add Valhall Descriptor{Set,Pool} implementations

Rhys Perry (37):
      aco: support GFX12 in insert_NOPs
      aco/gfx12: implement subgroup shader clock
      aco/gfx12: implement workgroup barrier
      aco/gfx12: sign-extend s_getpc_b64
      aco/gfx12: don't create v_fmac_legacy_f32
      aco/gfx12: use ttmp9/ttmp7 for workgroup id
      radv/gfx12: don't add workgroup id shader args
      aco/gfx12: remove MIMG vector affinity
      aco/gfx12: decrease max_nsa_vgprs for VSAMPLE
      aco/gfx12: disallow SCC and most constants for BUF SOFFSET
      aco: fix fddx/y with uniform inf/nan input
      meson: remove --depfile for aco_tests
      ac/llvm: implement load_subgroup_id
      aco/gfx12: implement load_subgroup_id
      ac/nir: skip subgroup_id/local_invocation_index lowering for gfx12
      aco/gfx12: fix s_wait_event immediate
      aco: don't combine vgpr into writelane src0
      aco: implement nir_atomic_op_ordered_add_gfx12_amd
      aco: implement nir_intrinsic_nop_amd and nir_intrinsic_sleep_amd
      ac/nir: support lowering of sub-dword push constants
      radv: lower sub-dword push constants
      ac/llvm: remove support for sub-dword push constants
      aco: remove support for sub-dword push constants
      aco/gfx6: set glc for buffer_store_byte/short
      aco: inline store_vmem_mubuf/emit_single_mubuf_store
      aco: use ac_hw_cache_flags
      aco: use GFX12 scope/temporal-hint
      ac: stop using radeon_info for ac_get_hw_cache_flags
      aco: use ac_get_hw_cache_flags()
      aco: remove some missing label resets
      nir/opt_loop: rematerialize derefs instead of creating phis
      nir/opt_loop: fix formatting
      aco: insert s_nop before discard early exit sendmsg(dealloc_vgpr)
      radv: lower push constants in NIR
      ac/llvm: remove push constants
      aco: remove push constants
      aco/insert_exec_mask: ensure top mask is not a temporary at loop exits

Rob Clark (6):
      tu: Fix imageview + ahb
      vulkan/android: Fix YcbcrRange for !mapper4
      ir3: Add some more missing progress accumulation
      gallium/tc: Add optional buffer replacement limit
      freedreno: Use buffer replacement limit
      gallium/tc: Allow replacement if replacing valid_range

Rohan Garg (13):
      intel/genxml: add the new state byte stride instruction
      intel/genxml: update 3DSTATE_CPSIZE_CONTROL_BUFFER for xe2+
      isl: enable compression for CPS buffers on xe2+
      intel/genxml: update CFE_STATE for LNL
      intel/genxml: Update XY_BLOCK_COPY_BLT
      intel/genxml: update MI_SEMAPHORE_WAIT for Xe2
      intel/genxml: Update STATE_COMPUTE_MODE for Xe2
      anv: 3D stencil surfaces have fewer layers for higher miplevels
      isl: disable CCS for 3D depth/stencil surfaces when WA is applicable
      isl: Enable volumetric STC_CCS,HiZ+CCS on gfx12.0
      intel/genxml: Add RESOURCE_BARRIER for xe2
      intel/compiler: fix shuffle generation on LNL
      anv: flag WSI images as scanout images for ISL

Roland Scheidegger (1):
      lavapipe: add option to enable snorm blending

Roman Stratiienko (2):
      turnip/android: Use DETECT_OS_ANDROID in tu_device
      turnip/android: Use DETECT_OS_ANDROID in freedreno_rd_output

Ruijing Dong (10):
      radeonsi/vcn: correct tile_size_bytes_minus1
      radeonsi/vcn: add cdef modes for vcn5 encoding
      radeonsi/vcn: apply cdef mode to vcn5
      radeonsi/vcn: share functions between vcn4/vcn5
      frontends/va: parsing uniform_tile_spacing flag
      radeonsi/vcn: add header files for vcn5 av1 tile
      radeonsi/vcn: enable av1 encoding in vcn5
      radeonsi/vcn: enable roi feature for vcn5
      radeonsi/vcn: remove tile_config_flag
      radesonsi/vcn: update vcn4 tile processing logic

Sagar Ghuge (4):
      iris: Load 32-bit MMIO PREDICATE register from buffer
      intel/compiler: No need to re-type the destination register
      intel/fs: Adjust destination register size for untyped atomic on Xe2+
      intel/fs: Adjust destination register size for global atomic on Xe2+

Samuel Pitoiset (117):
      ac,radv,radeonsi: a function that sets mutable CB surface fields
      radv: apply the workaround for no PS inpputs and LDS on GFX11 only
      radv: apply the SQ_THREAD_TRACE_WPTR workaround on GFX11 only
      radv: fix flushing DB meta cache on GFX11.5
      radv: only emit streamout enable for legacy streamout
      amd/common: define SDMA v7.0 for GFX12
      ac,radv,radeonsi: add ac_gpu_info::has_tc_compatible_htile
      radv: update NUM_THREAD_FULL bitfields
      radv: enable GS_FAST_LAUNCH_2 by default on GFX12
      radv: do not emit non-existent registers on GFX12
      radv: update configuring sample locations on GFX12
      radv: update configuring viewport/scissor on GFX12
      radv: update configuring PS states on GFX12
      radv: update configuring NGG states on GFX12
      radv: update configuring VGT states on GFX12
      radv: update configuring DB states on GFX12
      radv: update configuring rasterization states on GFX12
      radv: update configuring some CB states on GFX12
      radv: update configuring occlusion query state on GFX12
      radv: update configuring MSAA state on GFX12
      radv: update configuring GFX preamble on GFX12
      radv: update configuring tess rings on GFX12
      radv: update binning settings on GFX12
      radv: update emitting discard rectangles on GFX12
      radv: update shader input arguments for GS stage on GFX12
      aco: adjust loading local invocation ID for GS on GFX12
      radv: do not emulate clear state for shadowed regs on GFX12
      radv: update cache flush emission on GFX12
      radv: update emitting stipple line on GFX12
      radv: disallow merging multiple draws into one wave on GFX12
      radv: emit SQ_NON_EVENT packets after drawing with streamout on GFX12
      radv: update configuring the number of patch control points on GFX12
      radv: update configuring VGT_SHADER_STAGES_EN on GFX12
      radv: enable GE_CNTL.DIS_PG_SIZE_ADJUST_FOR_STRIP on GFX12
      radv: update NUM_THREAD_FULL bitfields on GFX12
      radv: update global graphics shader pointers on GFX12
      radv: update SDMA resource type on GFX12
      radv: update VS input VGPRs on GFX12
      radv: do not enable HTILE for depth/stencil storage images
      radv: allow STORAGE for depth formats
      radv: fix configuring the number of patch control points on GFX6
      radv: configure DB_Z_INFO.NUM_SAMPLES on GFX12
      radv: configure DB_RENDER_CONTROL to zero on GFX12
      radv: do not enable MEM_ORDERED on GFX12
      radv: update configuring the attribute ring on GFX12
      radv: do not flush L2 metadata on GFX12
      radv: mark all images coherent with TC L2 on GFX12
      radv: update configuring SPI_SHADER_PGM_LO_LS on GFX12
      radv: update configuring SPI_SHADER_PGM_LO_ES on GFX12
      radv: update configuring SPI_SHADER_PGM_RSRC4_{HS,GS,PS} on GFX12
      radv: update configuring GE_CNTL.PRIM_GRP_SIZE_GFX11 on GFX12
      radv: update configuring SPI_PS_IN_CONTROL on GFX12
      radv: configure PA_SC_HISZ_CONTROL on GFX12
      radv: configure SPI_SHADER_GS_OUT_CONFIG_PS on GFX12
      radv: update configuring GS_VGPR_COMP_CNT on GFX12
      radv: do not set DX10_CLAMP on GFX12
      radv: fix VRS subpass attachments with mipmaps
      ac,radeonsi: set COLOR_SW_MODE for mutable CB surfaces on GFX12
      radv: configure PA_SC_SAMPLE_PROPERTIES on GFX12
      radv: update number of input VGPRs for VS on GFX12
      radv: update configuring color buffers on GFX12
      radv: update configuring depth stencil buffers on GFX12
      radv: update configuring PA_SC_WINDOW_SCISSOR on GFX12
      radv: do not emit SPI_SHADER_PGM_RSRC3_GS on GFX12
      radv: fix configuring NGG registers on GFX12
      radv: do not set VGT_PRIMITIVEID_EN.PRIMITIVEID_EN on GFX12
      radv: cleanup radv_precompute_registers_hw_{ngg,fs}
      radv: assert that GDS/GDS OA buffers can't be created on GFX12
      radv: only set valid bitfields for CB/DS surfaces address
      radv: only emit VGT_GS_MAX_PRIMS_PER_SUBGROUP on GFX9
      radv: only emit SQ_PERFCOUNTER_MASK on GFX7-9
      radv: do not set VGT_SHADER_STAGES_EN.DYNAMIC_HS on GFX9
      radv: only emit SPI_SHADER_PGM_SRC3_GS on GFX7+
      radv: only emit CB_COLOR0_DCC_CONTROL on GFX8
      radv: use pipe_format when building image view descriptors
      ac,radv,radeonsi: add a function to build texture descriptors
      amd/common: add MIN_LOD for texture descriptors on GFX12
      Revert "radv/ci: Bring back vkcts-navi21-llvm-valve"
      radv: update configuring depth clamp enable on GFX12
      radv: update configuring COVERAGE_TO_SHADER_SELECT on GFX12
      radv: fix emitting VGT_PRIMITIVEID_RESET in the GFX preamble on GFX12
      radv: only set valid bitfields for CB/DS surfaces address on GFX12
      radv: add a helper to get image VA
      ac,radeonsi import PM4 state from RadeonSI
      ac,radeonsi: add a function to initialize compute preambles
      radv: initialize compute preambles with the common helper
      radv: fix creating unlinked shaders with ESO when nextStage is 0
      radv: pass a radv_shader to radv_get_compute_pipeline_metadata()
      radv: don't assume that TC_ACTION_ENA invalidates L1 cache on gfx9
      ac,radv: add a helper for SQTT control register
      ac,radv,radeonsi: add more parameters to ac_sqtt
      amd: allow to emit privileged config registers in PM4
      amd: mark more registers that need RESET_FILTER_CAM in PM4
      amd: add a common implementation for SQTT using PM4
      radv: emit more consecutive registers for SQTT on GFX8-9
      radv: use the common SQTT implementation
      radv: update VGT_TESS_DISTRIBUTION.ACCUM_ISOLINE value
      radv: do not set registers set by CLEAR_STATE in the preamble on GFX10-11.5
      radv: emit SPI_GS_THROTTLE_CNTL1 when the attr ring is emitted
      radv: fix incorrect buffer_list advance for multi-planar descriptors
      radv: use BDA in the DGC prepare shader
      radv: remove dynamic uniform/storage buffers support with DGC
      radv: do not use nir_pkt3() when the packet len is constant with DGC
      radv: add new macros for emiting packets in DGC
      radv: remove redundant nir_builder param in some DGC helpers
      radv: add a helper to load the pipeline VA for DGC
      radv: store a pointer to the logical device in dgc_cmdbuf
      radv: allow VK_NV_device_generated_commands_{compute} with LLVM
      radv: always save/restore all shader objects for internal operations
      radv: update configuring WALK_ALIGN8_PRIM_FITS_ST on GFX12
      ac/surface: add NBC view support on GFX12
      radv: declare a new user SGPR for the streamout state buffer on GFX12
      radv/nir: lower nir_intrinsic_load_xfb_state_address_gfx12_amd
      radv: implement streamout on GFX12
      radv: force using indirect descriptor sets for indirect compute pipelines
      radv: emit indirect sets for indirect compute pipelines with DGC
      radv: fix emitting indirect descriptor sets in the DGC prepare shader

Sergi Blanch Torne (8):
      ci: disable Collabora's farm due to maintenance
      Uprev Piglit to cf8daaf5ba90fc9b8a0e144355026e2a14c79944
      Revert "ci: disable Collabora's farm due to maintenance"
      ci: disable Collabora's farm due to runners maintenance
      Revert "ci: disable Collabora's farm due to runners maintenance"
      ci: continue stress run'n'monitor
      ci: Fix parse GitLab pipeline url
      ci: run_n_monitor, collect and summarize

Sil Vilerino (1):
      d3d12: Add missing case for CQP in d3d12_video_encoder_disable_rc_qualitylevels

Sviatoslav Peleshko (3):
      anv,driconf: Add fake non device local memory WA for Total War: Warhammer 3
      intel/brw: Actually retype integer sources of sampler message payload
      intel/elk: Actually retype integer sources of sampler message payload

Tapani Pälli (3):
      anv/android: enable emulated astc for applications
      anv: implement WA 14018283232
      mesa: remove some conditions in mipmap code

Thomas H.P. Andersen (1):
      nvk/upload_queue: fix the _fill method

Timothy Arceri (16):
      lima: drop unrequired opt from standalone compiler
      glsl: remove unused detect_recursion_linked()
      lima: remove the standalone compiler
      glsl: add support for glsl es 310/320 to standalone compiler
      nir: clarify and update loop conditional instruction
      nir: more aggressively remove in loop during partial unroll
      nir: support more loop unrolling for logical operators
      nir: add merge loop terminators optimisation
      nir: add test for opt_loop_merge_terminators
      nir: correctly track current loop in nir_opt_loop()
      nir: test opt_loop_merge_terminators() skips unhandled loops
      nir: add additional opt_loop_merge() test of deref handling
      glsl: drop dump-builder support from standalone compiler
      glsl: remove Par-linking from the standalone linker
      glsl: remove do_function_inlining()
      glsl: make glsl_to_nir() more generic

Timur Kristóf (8):
      ac/nir/tess: Adjust TCS->TES output mapping for linked shaders.
      radv: Properly link TCS->TES IO again.
      nir/lower_io: Add option to implement mediump as 32-bit.
      radv: Ignore mediump IO flag.
      ac/nir/tess: Only write tess factors that the TES reads.
      ac/nir/tess: Fix per-patch output LDS mapping.
      ac/nir/tess: Fix per-patch output VRAM mapping.
      radv: Use number of TES inputs for TCS-TES linking.

Turo Lamminen (1):
      radv: Optimize memcpy in write_image_descriptor

Valentine Burley (10):
      tu: Add support for VkBindMemoryStatusKHR
      tu: Add support for NULL index buffer
      tu: Add support for version 2 of all descriptor binding commands
      tu: Advertise VK_KHR_maintenance6
      tu: Move event related related code to tu_event.cc/h
      tu: Handle all dependencies of CmdWaitEvents2
      mr-label-maker: Update nouveau directories
      mr-label-maker: Separate freedreno and turnip labels
      tu: Handle the new sync2 flags
      tu: Remove declaration of unused update_stencil_mask function

Vignesh Raman (2):
      ci: add farm variable for devices in collabora farm
      ci/lava: add farm in structured log files

Yiwei Zhang (2):
      anv: use os_get_option instead of getenv
      venus: defer qfb buffer init upon query being used

Yonggang Luo (2):
      util: Rename DETECT_OS_UNIX to DETECT_OS_POSIX
      gallivm: add lp_context_ref for combine usage of LLVMContextSetOpaquePointers

Yukari Chiba (2):
      llvmpipe: add gallivm_add_global_mapping
      llvmpipe: make unnamed global have internal linkage

Yusuf Khan (3):
      nvc0/vbo: wrap draw_vbo for multidraw performance
      nv50/vbo: wrap draw_vbo to avoid ovehead from multidraw
      aux/draw: Use the draw info we get passed in instead of our own

Zach Battleman (2):
      intel/brw: update comment to accurately reflect intended behavior
      intel/brw: update Wa_1805992985 to use workarounds mechanism

Zan Dobersek (2):
      tu: fix ZPASS_DONE interference between occlusion queries and autotuner
      tu: avoid memory polling in occlusion query endings using ZPASS_DONE

bbhtt (1):
      nvk: Clean up unused header from libdrm_nouveau

