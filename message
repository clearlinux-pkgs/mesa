Updating from ccac91db7bbf3b428ad4138e0982c54636b4b96c to 8fdaa25c54e440698722e4f62d89c1bcc9cf31cd

Alyssa Rosenzweig (8):
      asahi: Fix UB in union with logic ops
      asahi: Set GPR count accurately for background/EOT
      asahi: Fix undefined behaviour with samplers
      asahi: Don't hardcode is_dmabuf_modifier_supported
      asahi: Print debug info about unsupported blits
      asahi: Fix incorrect debug string
      asahi: Enable framebuffer compression
      asahi: Add missing #include

Asahi Lina (5):
      ail: Introduce support for compression
      ail: Add unit tests for compression
      asahi: Identify compression-related XML
      asahi: Introduce compressed resource support
      asahi: Hook up compressed Z/S support on macOS

Bas Nieuwenhuizen (5):
      radv: Use correct init order for ETC2 image views
      radv: Fix sampler types in ETC2 decode.
      vulkan: Remove asserts that weren't valid for RADV ETC2 emulation.
      radv/ci: Add coverage for ETC2 emulation.
      radv: reserve space for the scissor in vkCmdBeginRendering.

David Heidelberg (1):
      ci/amd: add raven flakes which was previously failing

Erik Faye-Lund (1):
      radeonsi: mark glx-multithread-texture as a flake

Lucas Stach (7):
      etnaviv: always use RS align when GPU has TEXTURE_HALIGN feature
      etnaviv: rs: fix blits with insufficient alignment for dual pipe operation
      etnaviv: fix stencil operation without Z write
      etnaviv: fix ZS clear value computation
      etnaviv: blt: use correct TS offset in clear operations
      etnaviv: fix wrong surface TS clear size
      etnaviv: remove copy of resource level in etna_surface

Marek Olšák (17):
      glx,dri: simplify indirect function call syntax
      dri: move private __DRIDriverVtableExtension out of dri_interface.h
      frontend/dri: add comments describing drawable invalidation logic
      frontend/dri: remove __DRIdrawableRec::dri2::stamp
      frontend/dri: inline __DriverAPIRec
      frontend/dri: replace the DestroyScreen callback with a direct call
      frontend/dri: replace the DestroyBuffer callback with a direct call
      frontend/dri: replace the CopySubBuffer callback with a direct call
      frontend/dri: inline __DRIdrawable in dri_drawable, make __DRIdrawable opaque
      frontend/dri: inline __DRIcontext in dri_context, make __DRIcontext opaque
      frontend/dri: inline __DRIscreen in dri_screen, make __DRIscreen opaque
      frontend/dri: clean up the hacky implementation of kopper_drawable
      frontend/dri: move callbacks from the VTable into dri_screen, dri_drawable
      frontend/dri: clean up updating dri_drawable::refcount
      frontend/dri: remove the drawable ctx hack, we should always use current context
      frontend/dri: unduplicate flush_drawable callback
      frontend/dri: rewrite and comment dri_make_current to make it make sense

Martin Roukala (né Peres) (2):
      Revert "glx: Fix drawable refcounting for naked Windows"
      Revert "glx/dri: Fix DRI drawable release at MakeCurrent time"

Matt Coster (8):
      pvr: util: Add integer digit counting functions
      pvr: csbgen: Generate enum-to-string functions for debugging
      pvr: Add pvr_bo_cpu_map_unchanged() helper to load saved vbits on map
      pvr: debug: Add documentation for PVR_DEBUG environment variable
      pvr: debug: Add "cs" debug option to dump control stream on job submit
      pvr: debug: Add option to track pvr_bo allocations
      pvr: csbgen: Remove TEXTURE_WRAP_VARYING-dependent fields
      pvr: debug: Add PPP sub-buffer support to CSB dumps.

Sviatoslav Peleshko (1):
      driconf/intel: Use fake vendor to WA bad detection in Source engine games

Tapani Pälli (1):
      nir: fix a leak of ralloc ctx in nir_opt_ray_query_ranges

Tatsuyuki Ishi (1):
      radv: Enable rayTracingPipelineShaderGroupHandleCaptureReplay[Mixed].

