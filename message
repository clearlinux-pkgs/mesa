Updating from 3b3df7b8a98c4171e402a7c4e7170b9d937aae09 to 6ab4b2d7a063c525dc98c80f272643bc47f41f96

Alejandro Piñeiro (11):
      v3dv: port dynamic state tracking to use Mesa Vulkan
      v3dv: provide implementation for vkCmdBindVertexBuffers2
      v3dv: provide implementation for CmdSetViewportWithCount
      v3dv: CullMode and FrontFace are dynamic now
      v3dv: DepthBoundsTestEnable is dynamic now
      v3dv: move depth CFG bits setting to cmd buffer emission
      v3dv: ez_state/incompatible_ez_test could be recomputed at cmd_buffer
      v3dv: PrimitiveTopology is now dynamic
      v3dv: StencilOp and StencilTestEnable are now dynamic
      v3dv/ci: update expected list due VK_EXT_extended_dynamic_state
      v3dv: enable VK_EXT_extended_dynamic_state

Connor Abbott (45):
      ir3: Add scan_clusters_macro to ir3_valid_flags()
      ir3: Add scan_clusters.macro to is_subgroup_cond_mov_macro()
      ir3: Validate tied sources better
      ir3/ra: Don't demote movmsk instructions to non-shared
      ir3: Rewrite postsched dependency handling
      ir3/legalize: Use define for register size
      ir3: Rewrite regmask implementation
      ir3/ra: Prepare for shared half-regs
      ir3/ra: Fix printing shared reg file
      ir3/ra: Prepare for shared phis
      ir3: Fix lowering shared parallel copies with immed src
      ir3/lower_pcopy: Fix immed/const flags for copy from shared
      ir3: Fix shared parallel copy validation
      ir3: Don't use swz with shared registers
      ir3/lower_copies: Handle HW bug with shared half-floats
      ir3/lower_copies: Fix "inaccessible" half reg lowering with shared regs
      ir3/ra: Use ra_reg_get_num() for validating num
      ir3: Use INVALID_REG in array store
      ir3: Reset num when creating parallel copies
      ir3: Validate that shared registers are in-bound
      ir3: Allow propagation of normal->shared copies
      ir3: Moves with shared destination are always legal
      ir3/legalize: Take (ss) into account in WaR hazards
      ir3/legalize: Remove bad (eq) micro-optimization
      ir3/legalize: any/all/getone are non-prefetch helper users
      ir3: Use correct category for OPC_PUSH_CONSTS_LOAD_MACRO
      ir3: Add support for "scalar ALU"
      ir3: Implement source restrictions for shared ALU
      ir3: Validate scalar ALU sources
      ir3: Immediate source for stc is invalid
      ir3: Don't emit single-source collects
      ir3/cp: Support swapping mad srcs for shared regs
      ir3/cf: Don't fold shared conversions
      ir3: Distinguish lowered shared->normal moves
      ir3: Add support for ldc.u
      ir3: Add builder support for shared immediates
      ir3: Create reduce identity directly
      ir3: Make type_flags() return a bitmask enum
      ir3: Support scalar ALU in the builder
      ir3: Add scalar ALU-specific passes
      ir3: Get sources before emitting scan_clusters.macro
      ir3: Rewrite shared reg handling when translating from NIR
      ir3: Directly use shared registers when possible
      ir3/nir: Fix imadsh_mix16 definition
      ir3: Use scalar ALU instructions when possible

Eric Engestrom (1):
      v3dv/ci: add rpi5 failure

Georg Lehmann (1):
      spirv: preserve signed zero in modf

Karmjit Mahil (1):
      ir3: Don't set saturation on `flat.b`

Matt Turner (1):
      intel: Build float64 shader only for Vulkan

Michel Dänzer (1):
      wsi/wayland: Dispatch event queue in wsi_wl_swapchain_queue_present

Philipp Zabel (5):
      etnaviv: drm: Suppress get-param error message for non-existent core
      etnaviv: drm: Stop after model query failure
      etnaviv: Pass npu to etna_screen_create in a separate parameter
      etnaviv: Add a separate NPU pipe
      etnaviv: Allow collecing both GPU and NPU specs

Yiwei Zhang (1):
      venus: fix to destroy all pipeline handles on early error paths

